// Code generated by goctl. DO NOT EDIT.
// Source: account.proto

package account_client

import (
	"context"

	"gitlab.com/merehead/elloapp/backend/elloapp_tg_backend/app/service/biz/account/account"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ChangeAccountEmailReq     = account.ChangeAccountEmailReq
	ChangeAccountEmailResp    = account.ChangeAccountEmailResp
	ChangeAccountInfoReq      = account.ChangeAccountInfoReq
	ChangeAccountInfoResp     = account.ChangeAccountInfoResp
	ChangeAccountPasswordReq  = account.ChangeAccountPasswordReq
	ChangeAccountPasswordResp = account.ChangeAccountPasswordResp
	ConfirmationConfirmReq    = account.ConfirmationConfirmReq
	ConfirmationConfirmResp   = account.ConfirmationConfirmResp
	ConfirmationSendReq       = account.ConfirmationSendReq
	ConfirmationSendResp      = account.ConfirmationSendResp
	DeleteAccountReq          = account.DeleteAccountReq
	DeleteAccountResp         = account.DeleteAccountResp
	ForgotAccountPassReq      = account.ForgotAccountPassReq
	ForgotAccountPassResp     = account.ForgotAccountPassResp

	AccountClient interface {
		AccountDelete(ctx context.Context, in *DeleteAccountReq, opts ...grpc.CallOption) (*DeleteAccountResp, error)
		AccountChangePassword(ctx context.Context, in *ChangeAccountPasswordReq, opts ...grpc.CallOption) (*ChangeAccountPasswordResp, error)
		AccountChangeEmail(ctx context.Context, in *ChangeAccountEmailReq, opts ...grpc.CallOption) (*ChangeAccountEmailResp, error)
		AccountChangeProfile(ctx context.Context, in *ChangeAccountInfoReq, opts ...grpc.CallOption) (*ChangeAccountInfoResp, error)
		AccountForgotPassword(ctx context.Context, in *ForgotAccountPassReq, opts ...grpc.CallOption) (*ForgotAccountPassResp, error)
		AccountConfirmationSend(ctx context.Context, in *ConfirmationSendReq, opts ...grpc.CallOption) (*ConfirmationSendResp, error)
		AccountConfirmationConfirm(ctx context.Context, in *ConfirmationConfirmReq, opts ...grpc.CallOption) (*ConfirmationConfirmResp, error)
	}

	defaultAccountClient struct {
		cli zrpc.Client
	}
)

func NewAccountClient(cli zrpc.Client) AccountClient {
	return &defaultAccountClient{
		cli: cli,
	}
}

func (m *defaultAccountClient) AccountDelete(ctx context.Context, in *DeleteAccountReq, opts ...grpc.CallOption) (*DeleteAccountResp, error) {
	client := account.NewRPCAccountClient(m.cli.Conn())
	return client.AccountDelete(ctx, in, opts...)
}

func (m *defaultAccountClient) AccountChangePassword(ctx context.Context, in *ChangeAccountPasswordReq, opts ...grpc.CallOption) (*ChangeAccountPasswordResp, error) {
	client := account.NewRPCAccountClient(m.cli.Conn())
	return client.AccountChangePassword(ctx, in, opts...)
}

func (m *defaultAccountClient) AccountChangeEmail(ctx context.Context, in *ChangeAccountEmailReq, opts ...grpc.CallOption) (*ChangeAccountEmailResp, error) {
	client := account.NewRPCAccountClient(m.cli.Conn())
	return client.AccountChangeEmail(ctx, in, opts...)
}

func (m *defaultAccountClient) AccountChangeProfile(ctx context.Context, in *ChangeAccountInfoReq, opts ...grpc.CallOption) (*ChangeAccountInfoResp, error) {
	client := account.NewRPCAccountClient(m.cli.Conn())
	return client.AccountChangeProfile(ctx, in, opts...)
}

func (m *defaultAccountClient) AccountForgotPassword(ctx context.Context, in *ForgotAccountPassReq, opts ...grpc.CallOption) (*ForgotAccountPassResp, error) {
	client := account.NewRPCAccountClient(m.cli.Conn())
	return client.AccountForgotPassword(ctx, in, opts...)
}

func (m *defaultAccountClient) AccountConfirmationSend(ctx context.Context, in *ConfirmationSendReq, opts ...grpc.CallOption) (*ConfirmationSendResp, error) {
	client := account.NewRPCAccountClient(m.cli.Conn())
	return client.AccountConfirmationSend(ctx, in, opts...)
}

func (m *defaultAccountClient) AccountConfirmationConfirm(ctx context.Context, in *ConfirmationConfirmReq, opts ...grpc.CallOption) (*ConfirmationConfirmResp, error) {
	client := account.NewRPCAccountClient(m.cli.Conn())
	return client.AccountConfirmationConfirm(ctx, in, opts...)
}
