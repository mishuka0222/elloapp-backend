// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: rpc_metadata.proto

package metadata

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type TakeoutMessageRange struct {
	MinId                int32    `protobuf:"varint,1,opt,name=min_id,json=minId,proto3" json:"min_id,omitempty"`
	MaxId                int32    `protobuf:"varint,2,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TakeoutMessageRange) Reset()         { *m = TakeoutMessageRange{} }
func (m *TakeoutMessageRange) String() string { return proto.CompactTextString(m) }
func (*TakeoutMessageRange) ProtoMessage()    {}
func (*TakeoutMessageRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfbd9c9f553f1e16, []int{0}
}
func (m *TakeoutMessageRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TakeoutMessageRange.Unmarshal(m, b)
}
func (m *TakeoutMessageRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TakeoutMessageRange.Marshal(b, m, deterministic)
}
func (m *TakeoutMessageRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TakeoutMessageRange.Merge(m, src)
}
func (m *TakeoutMessageRange) XXX_Size() int {
	return xxx_messageInfo_TakeoutMessageRange.Size(m)
}
func (m *TakeoutMessageRange) XXX_DiscardUnknown() {
	xxx_messageInfo_TakeoutMessageRange.DiscardUnknown(m)
}

var xxx_messageInfo_TakeoutMessageRange proto.InternalMessageInfo

func (m *TakeoutMessageRange) GetMinId() int32 {
	if m != nil {
		return m.MinId
	}
	return 0
}

func (m *TakeoutMessageRange) GetMaxId() int32 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

type Takeout struct {
	Id                   int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Range                *TakeoutMessageRange `protobuf:"bytes,2,opt,name=range,proto3" json:"range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Takeout) Reset()         { *m = Takeout{} }
func (m *Takeout) String() string { return proto.CompactTextString(m) }
func (*Takeout) ProtoMessage()    {}
func (*Takeout) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfbd9c9f553f1e16, []int{1}
}
func (m *Takeout) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Takeout.Unmarshal(m, b)
}
func (m *Takeout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Takeout.Marshal(b, m, deterministic)
}
func (m *Takeout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Takeout.Merge(m, src)
}
func (m *Takeout) XXX_Size() int {
	return xxx_messageInfo_Takeout.Size(m)
}
func (m *Takeout) XXX_DiscardUnknown() {
	xxx_messageInfo_Takeout.DiscardUnknown(m)
}

var xxx_messageInfo_Takeout proto.InternalMessageInfo

func (m *Takeout) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Takeout) GetRange() *TakeoutMessageRange {
	if m != nil {
		return m.Range
	}
	return nil
}

type RpcMetadata struct {
	ServerId    string `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	ClientAddr  string `protobuf:"bytes,3,opt,name=client_addr,json=clientAddr,proto3" json:"client_addr,omitempty"`
	AuthId      int64  `protobuf:"varint,4,opt,name=auth_id,json=authId,proto3" json:"auth_id,omitempty"`
	SessionId   int64  `protobuf:"varint,5,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	ReceiveTime int64  `protobuf:"varint,8,opt,name=receive_time,json=receiveTime,proto3" json:"receive_time,omitempty"`
	// 用户ID
	UserId      int64 `protobuf:"varint,11,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ClientMsgId int64 `protobuf:"varint,12,opt,name=client_msg_id,json=clientMsgId,proto3" json:"client_msg_id,omitempty"`
	IsBot       bool  `protobuf:"varint,13,opt,name=is_bot,json=isBot,proto3" json:"is_bot,omitempty"`
	// mtproto
	Layer  int32  `protobuf:"varint,14,opt,name=layer,proto3" json:"layer,omitempty"`
	Client string `protobuf:"bytes,15,opt,name=client,proto3" json:"client,omitempty"`
	// admin
	IsAdmin bool `protobuf:"varint,16,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
	// talkeout
	Takeout *Takeout `protobuf:"bytes,20,opt,name=takeout,proto3" json:"takeout,omitempty"`
	// langpack
	Langpack string `protobuf:"bytes,21,opt,name=langpack,proto3" json:"langpack,omitempty"`
	// perm_auth_key_id
	PermAuthKeyId        int64    `protobuf:"varint,22,opt,name=perm_auth_key_id,json=permAuthKeyId,proto3" json:"perm_auth_key_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RpcMetadata) Reset()         { *m = RpcMetadata{} }
func (m *RpcMetadata) String() string { return proto.CompactTextString(m) }
func (*RpcMetadata) ProtoMessage()    {}
func (*RpcMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfbd9c9f553f1e16, []int{2}
}
func (m *RpcMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RpcMetadata.Unmarshal(m, b)
}
func (m *RpcMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RpcMetadata.Marshal(b, m, deterministic)
}
func (m *RpcMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RpcMetadata.Merge(m, src)
}
func (m *RpcMetadata) XXX_Size() int {
	return xxx_messageInfo_RpcMetadata.Size(m)
}
func (m *RpcMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_RpcMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_RpcMetadata proto.InternalMessageInfo

func (m *RpcMetadata) GetServerId() string {
	if m != nil {
		return m.ServerId
	}
	return ""
}

func (m *RpcMetadata) GetClientAddr() string {
	if m != nil {
		return m.ClientAddr
	}
	return ""
}

func (m *RpcMetadata) GetAuthId() int64 {
	if m != nil {
		return m.AuthId
	}
	return 0
}

func (m *RpcMetadata) GetSessionId() int64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *RpcMetadata) GetReceiveTime() int64 {
	if m != nil {
		return m.ReceiveTime
	}
	return 0
}

func (m *RpcMetadata) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *RpcMetadata) GetClientMsgId() int64 {
	if m != nil {
		return m.ClientMsgId
	}
	return 0
}

func (m *RpcMetadata) GetIsBot() bool {
	if m != nil {
		return m.IsBot
	}
	return false
}

func (m *RpcMetadata) GetLayer() int32 {
	if m != nil {
		return m.Layer
	}
	return 0
}

func (m *RpcMetadata) GetClient() string {
	if m != nil {
		return m.Client
	}
	return ""
}

func (m *RpcMetadata) GetIsAdmin() bool {
	if m != nil {
		return m.IsAdmin
	}
	return false
}

func (m *RpcMetadata) GetTakeout() *Takeout {
	if m != nil {
		return m.Takeout
	}
	return nil
}

func (m *RpcMetadata) GetLangpack() string {
	if m != nil {
		return m.Langpack
	}
	return ""
}

func (m *RpcMetadata) GetPermAuthKeyId() int64 {
	if m != nil {
		return m.PermAuthKeyId
	}
	return 0
}

func init() {
	proto.RegisterType((*TakeoutMessageRange)(nil), "metadata.TakeoutMessageRange")
	proto.RegisterType((*Takeout)(nil), "metadata.Takeout")
	proto.RegisterType((*RpcMetadata)(nil), "metadata.RpcMetadata")
}

func init() { proto.RegisterFile("rpc_metadata.proto", fileDescriptor_dfbd9c9f553f1e16) }

var fileDescriptor_dfbd9c9f553f1e16 = []byte{
	// 428 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x52, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0x55, 0x12, 0x9c, 0x38, 0xe3, 0xa6, 0xb4, 0xdb, 0x0f, 0x16, 0x50, 0x45, 0xc9, 0x85, 0x4a,
	0xa0, 0x1c, 0xe8, 0x2f, 0x48, 0xe0, 0x80, 0x85, 0x82, 0x2a, 0xab, 0x27, 0x2e, 0xd6, 0xc4, 0x3b,
	0x72, 0x57, 0xc9, 0xda, 0xd6, 0xee, 0xba, 0x4a, 0xf8, 0x5f, 0xfc, 0x3f, 0xb4, 0x1f, 0xe1, 0x02,
	0x27, 0xeb, 0xbd, 0x99, 0xf7, 0xfc, 0xe6, 0xd9, 0xc0, 0x74, 0x57, 0x95, 0x8a, 0x2c, 0x0a, 0xb4,
	0xb8, 0xe8, 0x74, 0x6b, 0x5b, 0x96, 0x1e, 0xf1, 0xfc, 0x0b, 0x5c, 0x3c, 0xe2, 0x96, 0xda, 0xde,
	0xae, 0xc9, 0x18, 0xac, 0xa9, 0xc0, 0xa6, 0x26, 0x76, 0x05, 0x63, 0x25, 0x9b, 0x52, 0x0a, 0x3e,
	0xb8, 0x1d, 0xdc, 0x25, 0x45, 0xa2, 0x64, 0x93, 0x0b, 0x4f, 0xe3, 0xde, 0xd1, 0xc3, 0x48, 0xe3,
	0x3e, 0x17, 0xf3, 0x1f, 0x30, 0x89, 0x26, 0xec, 0x14, 0x86, 0x51, 0x34, 0x2a, 0x86, 0x52, 0xb0,
	0x7b, 0x48, 0xb4, 0x73, 0xf4, 0x82, 0xec, 0xf3, 0xcd, 0xe2, 0x6f, 0x92, 0xff, 0xbc, 0xb6, 0x08,
	0xbb, 0xf3, 0xdf, 0x23, 0xc8, 0x8a, 0xae, 0x5a, 0xc7, 0x55, 0xf6, 0x16, 0xa6, 0x86, 0xf4, 0x33,
	0xe9, 0x63, 0xa0, 0x69, 0x91, 0x06, 0x22, 0x17, 0xec, 0x1d, 0x64, 0xd5, 0x4e, 0x52, 0x63, 0x4b,
	0x14, 0x42, 0xf3, 0x91, 0x1f, 0x43, 0xa0, 0x96, 0x42, 0x68, 0xf6, 0x0a, 0x26, 0xd8, 0xdb, 0x27,
	0xa7, 0x7d, 0xe1, 0x73, 0x8d, 0x1d, 0xcc, 0x05, 0xbb, 0x01, 0x30, 0x64, 0x8c, 0x6c, 0xfd, 0xa1,
	0x89, 0x9f, 0x4d, 0x23, 0x93, 0x0b, 0xf6, 0x1e, 0x4e, 0x34, 0x55, 0x24, 0x9f, 0xa9, 0xb4, 0x52,
	0x11, 0x4f, 0xfd, 0x42, 0x16, 0xb9, 0x47, 0xa9, 0xc8, 0x59, 0xf7, 0x26, 0xc4, 0xca, 0x82, 0xb5,
	0x83, 0xb9, 0x60, 0x73, 0x98, 0xc5, 0x50, 0xca, 0xd4, 0x6e, 0x7c, 0x12, 0xc4, 0x81, 0x5c, 0x9b,
	0x3a, 0x94, 0x29, 0x4d, 0xb9, 0x69, 0x2d, 0x9f, 0xdd, 0x0e, 0xee, 0xd2, 0x22, 0x91, 0x66, 0xd5,
	0x5a, 0x76, 0x09, 0xc9, 0x0e, 0x0f, 0xa4, 0xf9, 0x69, 0xa8, 0xd8, 0x03, 0x76, 0x0d, 0xe3, 0xa0,
	0xe5, 0x2f, 0xfd, 0x81, 0x11, 0xb1, 0xd7, 0x90, 0x4a, 0x53, 0xa2, 0x50, 0xb2, 0xe1, 0x67, 0xde,
	0x66, 0x22, 0xcd, 0xd2, 0x41, 0xf6, 0x11, 0x26, 0x36, 0x74, 0xcc, 0x2f, 0x7d, 0xf9, 0xe7, 0xff,
	0x94, 0x5f, 0x1c, 0x37, 0xd8, 0x1b, 0x48, 0x77, 0xd8, 0xd4, 0x1d, 0x56, 0x5b, 0x7e, 0x15, 0x1a,
	0x3e, 0x62, 0xf6, 0x01, 0xce, 0x3a, 0xd2, 0xaa, 0xf4, 0x2d, 0x6e, 0xe9, 0xe0, 0xee, 0xb9, 0xf6,
	0xf7, 0xcc, 0x1c, 0xbf, 0xec, 0xed, 0xd3, 0x77, 0x3a, 0xe4, 0x62, 0xf5, 0x09, 0x2e, 0xaa, 0x56,
	0x2d, 0x1a, 0xda, 0xf4, 0x3b, 0x94, 0x6a, 0xf1, 0xcb, 0xff, 0x6d, 0xab, 0xf3, 0x9f, 0x0f, 0xee,
	0x19, 0xbf, 0xe8, 0x57, 0xb4, 0xf8, 0x6d, 0xf8, 0x30, 0xd8, 0x8c, 0xfd, 0xf4, 0xfe, 0x4f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x97, 0x4e, 0xf7, 0x9a, 0xa1, 0x02, 0x00, 0x00,
}
