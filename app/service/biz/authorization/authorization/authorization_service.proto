syntax = "proto3";

option java_multiple_files = true;
option java_package = "authorization_service";
option java_outer_classname = "ZProtoAuthorizationService";
option optimize_for = CODE_SIZE;
option go_package = "authorization";

import "google/protobuf/any.proto";
import "my_type.proto";

package authorization;

message MData {
  string server_id = 1;
  string client_addr = 2;
  int64 auth_id = 3;
  int64 session_id = 4;
  int64 receive_time = 5;
  int64 user_id = 6;
  int64 client_msg_id = 7;
  bool is_bot = 8;
  int32 layer = 9;
  string client = 10;
  bool is_admin = 11;
  reserved 12;
  string langpack = 13;
  int64 perm_auth_key_id = 14;
}

message AuthSignUpRequest {
  string username = 1;
  string password = 2;
  string gender = 3;
  string date_of_birth = 4;
  string email = 5;
  string phone = 6;
  string type = 7;
  string kind = 8;
  string country_code = 9;
  string avatar = 10;
  string first_name = 11;
  string last_name = 12;
  MData m_data = 13;
}

message AuthSignInRequest {
  string username = 1;
  string password = 2;
  MData m_data = 3;
}

message AuthSignInResponse {
  string predicate_name = 1;
  int32 constructor = 2;
  int32 otherwise_relogin_days = 3;
  google.protobuf.Any tmp_sessions = 4;
  google.protobuf.Any terms_of_service = 5;
  google.protobuf.Any user = 6;
  bool setup_password_required = 7;
}

message AuthSignUpRsp {
  string email = 1;
  int64 confirmation_expire = 2;
}

message ConfirmationRequest {
  string username_or_email = 1;
  string code = 2;
}

message ConfirmationResponse {
  string message = 1;
}

message ForgotPasswordReq {
  string email = 1;
}

message ForgotPasswordRsp {
  bool status = 1;
  string message = 2;
  string email = 3;
  int64 confirmation_expire = 4;
}

message ForgotPasswordConfirmReq {
  string email = 1;
  string code = 2;
  string new_pass = 3;
}

message ForgotPasswordConfirmRsp {
  bool status = 1;
  string message = 2;
}

message Auth_Authorization {}

service RPCAuthorization {
  rpc AuthSignIn(AuthSignInRequest) returns (mtproto.Auth_Authorization);
  rpc AuthSignUp(AuthSignUpRequest) returns (AuthSignUpRsp);
  rpc Confirmation(ConfirmationRequest) returns(ConfirmationResponse);
  rpc ForgotPassword(ForgotPasswordReq) returns(ForgotPasswordRsp);
  rpc ForgotPasswordConfirm(ForgotPasswordConfirmReq) returns(ForgotPasswordConfirmRsp);
}
