// Code generated by goctl. DO NOT EDIT.
// Source: mtproto.proto

package channels_client

import (
	"context"

	"gitlab.com/merehead/elloapp/backend/elloapp_tg_backend/mtproto"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Bool                               = mtproto.Bool
	Channels_AdminLogResults           = mtproto.Channels_AdminLogResults
	Channels_ChannelParticipant        = mtproto.Channels_ChannelParticipant
	Channels_ChannelParticipants       = mtproto.Channels_ChannelParticipants
	ExportedMessageLink                = mtproto.ExportedMessageLink
	Messages_AffectedHistory           = mtproto.Messages_AffectedHistory
	Messages_AffectedMessages          = mtproto.Messages_AffectedMessages
	Messages_ChatFull                  = mtproto.Messages_ChatFull
	Messages_Chats                     = mtproto.Messages_Chats
	Messages_InactiveChats             = mtproto.Messages_InactiveChats
	Messages_Messages                  = mtproto.Messages_Messages
	TLChannelsCreateChannel            = mtproto.TLChannelsCreateChannel
	TLChannelsDeleteChannel            = mtproto.TLChannelsDeleteChannel
	TLChannelsDeleteHistory9BAA9647    = mtproto.TLChannelsDeleteHistory9BAA9647
	TLChannelsDeleteHistoryAF369D42    = mtproto.TLChannelsDeleteHistoryAF369D42
	TLChannelsDeleteMessages           = mtproto.TLChannelsDeleteMessages
	TLChannelsDeleteParticipantHistory = mtproto.TLChannelsDeleteParticipantHistory
	TLChannelsEditAdmin                = mtproto.TLChannelsEditAdmin
	TLChannelsEditBanned               = mtproto.TLChannelsEditBanned
	TLChannelsEditCreator              = mtproto.TLChannelsEditCreator
	TLChannelsEditLocation             = mtproto.TLChannelsEditLocation
	TLChannelsEditPhoto                = mtproto.TLChannelsEditPhoto
	TLChannelsEditTitle                = mtproto.TLChannelsEditTitle
	TLChannelsExportMessageLink        = mtproto.TLChannelsExportMessageLink
	TLChannelsGetAdminLog              = mtproto.TLChannelsGetAdminLog
	TLChannelsGetAdminedPublicChannels = mtproto.TLChannelsGetAdminedPublicChannels
	TLChannelsGetChannels              = mtproto.TLChannelsGetChannels
	TLChannelsGetFullChannel           = mtproto.TLChannelsGetFullChannel
	TLChannelsGetGroupsForDiscussion   = mtproto.TLChannelsGetGroupsForDiscussion
	TLChannelsGetInactiveChannels      = mtproto.TLChannelsGetInactiveChannels
	TLChannelsGetMessages              = mtproto.TLChannelsGetMessages
	TLChannelsGetParticipant           = mtproto.TLChannelsGetParticipant
	TLChannelsGetParticipants          = mtproto.TLChannelsGetParticipants
	TLChannelsInviteToChannel          = mtproto.TLChannelsInviteToChannel
	TLChannelsJoinChannel              = mtproto.TLChannelsJoinChannel
	TLChannelsLeaveChannel             = mtproto.TLChannelsLeaveChannel
	TLChannelsReadHistory              = mtproto.TLChannelsReadHistory
	TLChannelsReadMessageContents      = mtproto.TLChannelsReadMessageContents
	TLChannelsSetDiscussionGroup       = mtproto.TLChannelsSetDiscussionGroup
	TLChannelsSetStickers              = mtproto.TLChannelsSetStickers
	TLChannelsTogglePreHistoryHidden   = mtproto.TLChannelsTogglePreHistoryHidden
	TLChannelsToggleSignatures         = mtproto.TLChannelsToggleSignatures
	TLChannelsToggleSlowMode           = mtproto.TLChannelsToggleSlowMode
	Updates                            = mtproto.Updates

	ChannelsClient interface {
		ChannelsReadHistory(ctx context.Context, in *TLChannelsReadHistory, opts ...grpc.CallOption) (*Bool, error)
		ChannelsDeleteMessages(ctx context.Context, in *TLChannelsDeleteMessages, opts ...grpc.CallOption) (*Messages_AffectedMessages, error)
		ChannelsGetMessages(ctx context.Context, in *TLChannelsGetMessages, opts ...grpc.CallOption) (*Messages_Messages, error)
		ChannelsGetParticipants(ctx context.Context, in *TLChannelsGetParticipants, opts ...grpc.CallOption) (*Channels_ChannelParticipants, error)
		ChannelsGetParticipant(ctx context.Context, in *TLChannelsGetParticipant, opts ...grpc.CallOption) (*Channels_ChannelParticipant, error)
		ChannelsGetChannels(ctx context.Context, in *TLChannelsGetChannels, opts ...grpc.CallOption) (*Messages_Chats, error)
		ChannelsGetFullChannel(ctx context.Context, in *TLChannelsGetFullChannel, opts ...grpc.CallOption) (*Messages_ChatFull, error)
		ChannelsCreateChannel(ctx context.Context, in *TLChannelsCreateChannel, opts ...grpc.CallOption) (*Updates, error)
		ChannelsEditAdmin(ctx context.Context, in *TLChannelsEditAdmin, opts ...grpc.CallOption) (*Updates, error)
		ChannelsEditTitle(ctx context.Context, in *TLChannelsEditTitle, opts ...grpc.CallOption) (*Updates, error)
		ChannelsEditPhoto(ctx context.Context, in *TLChannelsEditPhoto, opts ...grpc.CallOption) (*Updates, error)
		ChannelsJoinChannel(ctx context.Context, in *TLChannelsJoinChannel, opts ...grpc.CallOption) (*Updates, error)
		ChannelsLeaveChannel(ctx context.Context, in *TLChannelsLeaveChannel, opts ...grpc.CallOption) (*Updates, error)
		ChannelsInviteToChannel(ctx context.Context, in *TLChannelsInviteToChannel, opts ...grpc.CallOption) (*Updates, error)
		ChannelsDeleteChannel(ctx context.Context, in *TLChannelsDeleteChannel, opts ...grpc.CallOption) (*Updates, error)
		ChannelsExportMessageLink(ctx context.Context, in *TLChannelsExportMessageLink, opts ...grpc.CallOption) (*ExportedMessageLink, error)
		ChannelsToggleSignatures(ctx context.Context, in *TLChannelsToggleSignatures, opts ...grpc.CallOption) (*Updates, error)
		ChannelsGetAdminedPublicChannels(ctx context.Context, in *TLChannelsGetAdminedPublicChannels, opts ...grpc.CallOption) (*Messages_Chats, error)
		ChannelsEditBanned(ctx context.Context, in *TLChannelsEditBanned, opts ...grpc.CallOption) (*Updates, error)
		ChannelsGetAdminLog(ctx context.Context, in *TLChannelsGetAdminLog, opts ...grpc.CallOption) (*Channels_AdminLogResults, error)
		ChannelsSetStickers(ctx context.Context, in *TLChannelsSetStickers, opts ...grpc.CallOption) (*Bool, error)
		ChannelsReadMessageContents(ctx context.Context, in *TLChannelsReadMessageContents, opts ...grpc.CallOption) (*Bool, error)
		ChannelsDeleteHistory9BAA9647(ctx context.Context, in *TLChannelsDeleteHistory9BAA9647, opts ...grpc.CallOption) (*Updates, error)
		ChannelsTogglePreHistoryHidden(ctx context.Context, in *TLChannelsTogglePreHistoryHidden, opts ...grpc.CallOption) (*Updates, error)
		ChannelsGetGroupsForDiscussion(ctx context.Context, in *TLChannelsGetGroupsForDiscussion, opts ...grpc.CallOption) (*Messages_Chats, error)
		ChannelsSetDiscussionGroup(ctx context.Context, in *TLChannelsSetDiscussionGroup, opts ...grpc.CallOption) (*Bool, error)
		ChannelsEditCreator(ctx context.Context, in *TLChannelsEditCreator, opts ...grpc.CallOption) (*Updates, error)
		ChannelsEditLocation(ctx context.Context, in *TLChannelsEditLocation, opts ...grpc.CallOption) (*Bool, error)
		ChannelsToggleSlowMode(ctx context.Context, in *TLChannelsToggleSlowMode, opts ...grpc.CallOption) (*Updates, error)
		ChannelsGetInactiveChannels(ctx context.Context, in *TLChannelsGetInactiveChannels, opts ...grpc.CallOption) (*Messages_InactiveChats, error)
		ChannelsDeleteParticipantHistory(ctx context.Context, in *TLChannelsDeleteParticipantHistory, opts ...grpc.CallOption) (*Messages_AffectedHistory, error)
		ChannelsDeleteHistoryAF369D42(ctx context.Context, in *TLChannelsDeleteHistoryAF369D42, opts ...grpc.CallOption) (*Bool, error)
	}

	defaultChannelsClient struct {
		cli zrpc.Client
	}
)

func NewChannelsClient(cli zrpc.Client) ChannelsClient {
	return &defaultChannelsClient{
		cli: cli,
	}
}

func (m *defaultChannelsClient) ChannelsReadHistory(ctx context.Context, in *TLChannelsReadHistory, opts ...grpc.CallOption) (*Bool, error) {
	client := mtproto.NewRPCChannelsClient(m.cli.Conn())
	return client.ChannelsReadHistory(ctx, in, opts...)
}

func (m *defaultChannelsClient) ChannelsDeleteMessages(ctx context.Context, in *TLChannelsDeleteMessages, opts ...grpc.CallOption) (*Messages_AffectedMessages, error) {
	client := mtproto.NewRPCChannelsClient(m.cli.Conn())
	return client.ChannelsDeleteMessages(ctx, in, opts...)
}

func (m *defaultChannelsClient) ChannelsGetMessages(ctx context.Context, in *TLChannelsGetMessages, opts ...grpc.CallOption) (*Messages_Messages, error) {
	client := mtproto.NewRPCChannelsClient(m.cli.Conn())
	return client.ChannelsGetMessages(ctx, in, opts...)
}

func (m *defaultChannelsClient) ChannelsGetParticipants(ctx context.Context, in *TLChannelsGetParticipants, opts ...grpc.CallOption) (*Channels_ChannelParticipants, error) {
	client := mtproto.NewRPCChannelsClient(m.cli.Conn())
	return client.ChannelsGetParticipants(ctx, in, opts...)
}

func (m *defaultChannelsClient) ChannelsGetParticipant(ctx context.Context, in *TLChannelsGetParticipant, opts ...grpc.CallOption) (*Channels_ChannelParticipant, error) {
	client := mtproto.NewRPCChannelsClient(m.cli.Conn())
	return client.ChannelsGetParticipant(ctx, in, opts...)
}

func (m *defaultChannelsClient) ChannelsGetChannels(ctx context.Context, in *TLChannelsGetChannels, opts ...grpc.CallOption) (*Messages_Chats, error) {
	client := mtproto.NewRPCChannelsClient(m.cli.Conn())
	return client.ChannelsGetChannels(ctx, in, opts...)
}

func (m *defaultChannelsClient) ChannelsGetFullChannel(ctx context.Context, in *TLChannelsGetFullChannel, opts ...grpc.CallOption) (*Messages_ChatFull, error) {
	client := mtproto.NewRPCChannelsClient(m.cli.Conn())
	return client.ChannelsGetFullChannel(ctx, in, opts...)
}

func (m *defaultChannelsClient) ChannelsCreateChannel(ctx context.Context, in *TLChannelsCreateChannel, opts ...grpc.CallOption) (*Updates, error) {
	client := mtproto.NewRPCChannelsClient(m.cli.Conn())
	return client.ChannelsCreateChannel(ctx, in, opts...)
}

func (m *defaultChannelsClient) ChannelsEditAdmin(ctx context.Context, in *TLChannelsEditAdmin, opts ...grpc.CallOption) (*Updates, error) {
	client := mtproto.NewRPCChannelsClient(m.cli.Conn())
	return client.ChannelsEditAdmin(ctx, in, opts...)
}

func (m *defaultChannelsClient) ChannelsEditTitle(ctx context.Context, in *TLChannelsEditTitle, opts ...grpc.CallOption) (*Updates, error) {
	client := mtproto.NewRPCChannelsClient(m.cli.Conn())
	return client.ChannelsEditTitle(ctx, in, opts...)
}

func (m *defaultChannelsClient) ChannelsEditPhoto(ctx context.Context, in *TLChannelsEditPhoto, opts ...grpc.CallOption) (*Updates, error) {
	client := mtproto.NewRPCChannelsClient(m.cli.Conn())
	return client.ChannelsEditPhoto(ctx, in, opts...)
}

func (m *defaultChannelsClient) ChannelsJoinChannel(ctx context.Context, in *TLChannelsJoinChannel, opts ...grpc.CallOption) (*Updates, error) {
	client := mtproto.NewRPCChannelsClient(m.cli.Conn())
	return client.ChannelsJoinChannel(ctx, in, opts...)
}

func (m *defaultChannelsClient) ChannelsLeaveChannel(ctx context.Context, in *TLChannelsLeaveChannel, opts ...grpc.CallOption) (*Updates, error) {
	client := mtproto.NewRPCChannelsClient(m.cli.Conn())
	return client.ChannelsLeaveChannel(ctx, in, opts...)
}

func (m *defaultChannelsClient) ChannelsInviteToChannel(ctx context.Context, in *TLChannelsInviteToChannel, opts ...grpc.CallOption) (*Updates, error) {
	client := mtproto.NewRPCChannelsClient(m.cli.Conn())
	return client.ChannelsInviteToChannel(ctx, in, opts...)
}

func (m *defaultChannelsClient) ChannelsDeleteChannel(ctx context.Context, in *TLChannelsDeleteChannel, opts ...grpc.CallOption) (*Updates, error) {
	client := mtproto.NewRPCChannelsClient(m.cli.Conn())
	return client.ChannelsDeleteChannel(ctx, in, opts...)
}

func (m *defaultChannelsClient) ChannelsExportMessageLink(ctx context.Context, in *TLChannelsExportMessageLink, opts ...grpc.CallOption) (*ExportedMessageLink, error) {
	client := mtproto.NewRPCChannelsClient(m.cli.Conn())
	return client.ChannelsExportMessageLink(ctx, in, opts...)
}

func (m *defaultChannelsClient) ChannelsToggleSignatures(ctx context.Context, in *TLChannelsToggleSignatures, opts ...grpc.CallOption) (*Updates, error) {
	client := mtproto.NewRPCChannelsClient(m.cli.Conn())
	return client.ChannelsToggleSignatures(ctx, in, opts...)
}

func (m *defaultChannelsClient) ChannelsGetAdminedPublicChannels(ctx context.Context, in *TLChannelsGetAdminedPublicChannels, opts ...grpc.CallOption) (*Messages_Chats, error) {
	client := mtproto.NewRPCChannelsClient(m.cli.Conn())
	return client.ChannelsGetAdminedPublicChannels(ctx, in, opts...)
}

func (m *defaultChannelsClient) ChannelsEditBanned(ctx context.Context, in *TLChannelsEditBanned, opts ...grpc.CallOption) (*Updates, error) {
	client := mtproto.NewRPCChannelsClient(m.cli.Conn())
	return client.ChannelsEditBanned(ctx, in, opts...)
}

func (m *defaultChannelsClient) ChannelsGetAdminLog(ctx context.Context, in *TLChannelsGetAdminLog, opts ...grpc.CallOption) (*Channels_AdminLogResults, error) {
	client := mtproto.NewRPCChannelsClient(m.cli.Conn())
	return client.ChannelsGetAdminLog(ctx, in, opts...)
}

func (m *defaultChannelsClient) ChannelsSetStickers(ctx context.Context, in *TLChannelsSetStickers, opts ...grpc.CallOption) (*Bool, error) {
	client := mtproto.NewRPCChannelsClient(m.cli.Conn())
	return client.ChannelsSetStickers(ctx, in, opts...)
}

func (m *defaultChannelsClient) ChannelsReadMessageContents(ctx context.Context, in *TLChannelsReadMessageContents, opts ...grpc.CallOption) (*Bool, error) {
	client := mtproto.NewRPCChannelsClient(m.cli.Conn())
	return client.ChannelsReadMessageContents(ctx, in, opts...)
}

func (m *defaultChannelsClient) ChannelsDeleteHistory9BAA9647(ctx context.Context, in *TLChannelsDeleteHistory9BAA9647, opts ...grpc.CallOption) (*Updates, error) {
	client := mtproto.NewRPCChannelsClient(m.cli.Conn())
	return client.ChannelsDeleteHistory9BAA9647(ctx, in, opts...)
}

func (m *defaultChannelsClient) ChannelsTogglePreHistoryHidden(ctx context.Context, in *TLChannelsTogglePreHistoryHidden, opts ...grpc.CallOption) (*Updates, error) {
	client := mtproto.NewRPCChannelsClient(m.cli.Conn())
	return client.ChannelsTogglePreHistoryHidden(ctx, in, opts...)
}

func (m *defaultChannelsClient) ChannelsGetGroupsForDiscussion(ctx context.Context, in *TLChannelsGetGroupsForDiscussion, opts ...grpc.CallOption) (*Messages_Chats, error) {
	client := mtproto.NewRPCChannelsClient(m.cli.Conn())
	return client.ChannelsGetGroupsForDiscussion(ctx, in, opts...)
}

func (m *defaultChannelsClient) ChannelsSetDiscussionGroup(ctx context.Context, in *TLChannelsSetDiscussionGroup, opts ...grpc.CallOption) (*Bool, error) {
	client := mtproto.NewRPCChannelsClient(m.cli.Conn())
	return client.ChannelsSetDiscussionGroup(ctx, in, opts...)
}

func (m *defaultChannelsClient) ChannelsEditCreator(ctx context.Context, in *TLChannelsEditCreator, opts ...grpc.CallOption) (*Updates, error) {
	client := mtproto.NewRPCChannelsClient(m.cli.Conn())
	return client.ChannelsEditCreator(ctx, in, opts...)
}

func (m *defaultChannelsClient) ChannelsEditLocation(ctx context.Context, in *TLChannelsEditLocation, opts ...grpc.CallOption) (*Bool, error) {
	client := mtproto.NewRPCChannelsClient(m.cli.Conn())
	return client.ChannelsEditLocation(ctx, in, opts...)
}

func (m *defaultChannelsClient) ChannelsToggleSlowMode(ctx context.Context, in *TLChannelsToggleSlowMode, opts ...grpc.CallOption) (*Updates, error) {
	client := mtproto.NewRPCChannelsClient(m.cli.Conn())
	return client.ChannelsToggleSlowMode(ctx, in, opts...)
}

func (m *defaultChannelsClient) ChannelsGetInactiveChannels(ctx context.Context, in *TLChannelsGetInactiveChannels, opts ...grpc.CallOption) (*Messages_InactiveChats, error) {
	client := mtproto.NewRPCChannelsClient(m.cli.Conn())
	return client.ChannelsGetInactiveChannels(ctx, in, opts...)
}

func (m *defaultChannelsClient) ChannelsDeleteParticipantHistory(ctx context.Context, in *TLChannelsDeleteParticipantHistory, opts ...grpc.CallOption) (*Messages_AffectedHistory, error) {
	client := mtproto.NewRPCChannelsClient(m.cli.Conn())
	return client.ChannelsDeleteParticipantHistory(ctx, in, opts...)
}

func (m *defaultChannelsClient) ChannelsDeleteHistoryAF369D42(ctx context.Context, in *TLChannelsDeleteHistoryAF369D42, opts ...grpc.CallOption) (*Bool, error) {
	client := mtproto.NewRPCChannelsClient(m.cli.Conn())
	return client.ChannelsDeleteHistoryAF369D42(ctx, in, opts...)
}
