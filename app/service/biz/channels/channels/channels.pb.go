// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: channels.proto

package channels

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	mtproto "gitlab.com/merehead/elloapp/backend/elloapp_tg_backend/mtproto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ChannelParticipant struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ChannelId            int32    `protobuf:"varint,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	UserId               int32    `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ParticipantType      int32    `protobuf:"varint,4,opt,name=participant_type,json=participantType,proto3" json:"participant_type,omitempty"`
	InviterUserId        int32    `protobuf:"varint,5,opt,name=inviter_user_id,json=inviterUserId,proto3" json:"inviter_user_id,omitempty"`
	InvitedAt            int32    `protobuf:"varint,6,opt,name=invited_at,json=invitedAt,proto3" json:"invited_at,omitempty"`
	JoinedAt             int32    `protobuf:"varint,7,opt,name=joined_at,json=joinedAt,proto3" json:"joined_at,omitempty"`
	State                int32    `protobuf:"varint,8,opt,name=state,proto3" json:"state,omitempty"`
	CreatedAt            string   `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string   `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelParticipant) Reset()         { *m = ChannelParticipant{} }
func (m *ChannelParticipant) String() string { return proto.CompactTextString(m) }
func (*ChannelParticipant) ProtoMessage()    {}
func (*ChannelParticipant) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{0}
}
func (m *ChannelParticipant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelParticipant.Unmarshal(m, b)
}
func (m *ChannelParticipant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelParticipant.Marshal(b, m, deterministic)
}
func (m *ChannelParticipant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelParticipant.Merge(m, src)
}
func (m *ChannelParticipant) XXX_Size() int {
	return xxx_messageInfo_ChannelParticipant.Size(m)
}
func (m *ChannelParticipant) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelParticipant.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelParticipant proto.InternalMessageInfo

func (m *ChannelParticipant) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ChannelParticipant) GetChannelId() int32 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

func (m *ChannelParticipant) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ChannelParticipant) GetParticipantType() int32 {
	if m != nil {
		return m.ParticipantType
	}
	return 0
}

func (m *ChannelParticipant) GetInviterUserId() int32 {
	if m != nil {
		return m.InviterUserId
	}
	return 0
}

func (m *ChannelParticipant) GetInvitedAt() int32 {
	if m != nil {
		return m.InvitedAt
	}
	return 0
}

func (m *ChannelParticipant) GetJoinedAt() int32 {
	if m != nil {
		return m.JoinedAt
	}
	return 0
}

func (m *ChannelParticipant) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *ChannelParticipant) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *ChannelParticipant) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

type Channel struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatorUserId        int32    `protobuf:"varint,2,opt,name=creator_user_id,json=creatorUserId,proto3" json:"creator_user_id,omitempty"`
	AccessHash           int64    `protobuf:"varint,3,opt,name=access_hash,json=accessHash,proto3" json:"access_hash,omitempty"`
	RandomId             int64    `protobuf:"varint,4,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	ParticipantCount     int32    `protobuf:"varint,5,opt,name=participant_count,json=participantCount,proto3" json:"participant_count,omitempty"`
	Title                string   `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	About                string   `protobuf:"bytes,7,opt,name=about,proto3" json:"about,omitempty"`
	PhotoId              int64    `protobuf:"varint,8,opt,name=photo_id,json=photoId,proto3" json:"photo_id,omitempty"`
	Link                 string   `protobuf:"bytes,9,opt,name=link,proto3" json:"link,omitempty"`
	AdminsEnabled        int32    `protobuf:"varint,10,opt,name=admins_enabled,json=adminsEnabled,proto3" json:"admins_enabled,omitempty"`
	Deactivated          int32    `protobuf:"varint,11,opt,name=deactivated,proto3" json:"deactivated,omitempty"`
	Version              int32    `protobuf:"varint,12,opt,name=version,proto3" json:"version,omitempty"`
	Date                 int32    `protobuf:"varint,13,opt,name=date,proto3" json:"date,omitempty"`
	CreatedAt            string   `protobuf:"bytes,14,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string   `protobuf:"bytes,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Channel) Reset()         { *m = Channel{} }
func (m *Channel) String() string { return proto.CompactTextString(m) }
func (*Channel) ProtoMessage()    {}
func (*Channel) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{1}
}
func (m *Channel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Channel.Unmarshal(m, b)
}
func (m *Channel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Channel.Marshal(b, m, deterministic)
}
func (m *Channel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Channel.Merge(m, src)
}
func (m *Channel) XXX_Size() int {
	return xxx_messageInfo_Channel.Size(m)
}
func (m *Channel) XXX_DiscardUnknown() {
	xxx_messageInfo_Channel.DiscardUnknown(m)
}

var xxx_messageInfo_Channel proto.InternalMessageInfo

func (m *Channel) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Channel) GetCreatorUserId() int32 {
	if m != nil {
		return m.CreatorUserId
	}
	return 0
}

func (m *Channel) GetAccessHash() int64 {
	if m != nil {
		return m.AccessHash
	}
	return 0
}

func (m *Channel) GetRandomId() int64 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

func (m *Channel) GetParticipantCount() int32 {
	if m != nil {
		return m.ParticipantCount
	}
	return 0
}

func (m *Channel) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Channel) GetAbout() string {
	if m != nil {
		return m.About
	}
	return ""
}

func (m *Channel) GetPhotoId() int64 {
	if m != nil {
		return m.PhotoId
	}
	return 0
}

func (m *Channel) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *Channel) GetAdminsEnabled() int32 {
	if m != nil {
		return m.AdminsEnabled
	}
	return 0
}

func (m *Channel) GetDeactivated() int32 {
	if m != nil {
		return m.Deactivated
	}
	return 0
}

func (m *Channel) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Channel) GetDate() int32 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *Channel) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Channel) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

type ChannelParticipantRes struct {
	Participant          *mtproto.ChannelParticipant `protobuf:"bytes,1,opt,name=participant,proto3" json:"participant,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ChannelParticipantRes) Reset()         { *m = ChannelParticipantRes{} }
func (m *ChannelParticipantRes) String() string { return proto.CompactTextString(m) }
func (*ChannelParticipantRes) ProtoMessage()    {}
func (*ChannelParticipantRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{2}
}
func (m *ChannelParticipantRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelParticipantRes.Unmarshal(m, b)
}
func (m *ChannelParticipantRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelParticipantRes.Marshal(b, m, deterministic)
}
func (m *ChannelParticipantRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelParticipantRes.Merge(m, src)
}
func (m *ChannelParticipantRes) XXX_Size() int {
	return xxx_messageInfo_ChannelParticipantRes.Size(m)
}
func (m *ChannelParticipantRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelParticipantRes.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelParticipantRes proto.InternalMessageInfo

func (m *ChannelParticipantRes) GetParticipant() *mtproto.ChannelParticipant {
	if m != nil {
		return m.Participant
	}
	return nil
}

type ChannelCoreByIdReq struct {
	SelfId               int32               `protobuf:"varint,1,opt,name=self_id,json=selfId,proto3" json:"self_id,omitempty"`
	Participant          *ChannelParticipant `protobuf:"bytes,2,opt,name=participant,proto3" json:"participant,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ChannelCoreByIdReq) Reset()         { *m = ChannelCoreByIdReq{} }
func (m *ChannelCoreByIdReq) String() string { return proto.CompactTextString(m) }
func (*ChannelCoreByIdReq) ProtoMessage()    {}
func (*ChannelCoreByIdReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{3}
}
func (m *ChannelCoreByIdReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelCoreByIdReq.Unmarshal(m, b)
}
func (m *ChannelCoreByIdReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelCoreByIdReq.Marshal(b, m, deterministic)
}
func (m *ChannelCoreByIdReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelCoreByIdReq.Merge(m, src)
}
func (m *ChannelCoreByIdReq) XXX_Size() int {
	return xxx_messageInfo_ChannelCoreByIdReq.Size(m)
}
func (m *ChannelCoreByIdReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelCoreByIdReq.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelCoreByIdReq proto.InternalMessageInfo

func (m *ChannelCoreByIdReq) GetSelfId() int32 {
	if m != nil {
		return m.SelfId
	}
	return 0
}

func (m *ChannelCoreByIdReq) GetParticipant() *ChannelParticipant {
	if m != nil {
		return m.Participant
	}
	return nil
}

type ChannelCoreByCreateChannelReq struct {
	CreatorId            int32    `protobuf:"varint,1,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	UserIdList           []int32  `protobuf:"varint,2,rep,packed,name=user_id_list,json=userIdList,proto3" json:"user_id_list,omitempty"`
	Title                string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	About                string   `protobuf:"bytes,4,opt,name=about,proto3" json:"about,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelCoreByCreateChannelReq) Reset()         { *m = ChannelCoreByCreateChannelReq{} }
func (m *ChannelCoreByCreateChannelReq) String() string { return proto.CompactTextString(m) }
func (*ChannelCoreByCreateChannelReq) ProtoMessage()    {}
func (*ChannelCoreByCreateChannelReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{4}
}
func (m *ChannelCoreByCreateChannelReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelCoreByCreateChannelReq.Unmarshal(m, b)
}
func (m *ChannelCoreByCreateChannelReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelCoreByCreateChannelReq.Marshal(b, m, deterministic)
}
func (m *ChannelCoreByCreateChannelReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelCoreByCreateChannelReq.Merge(m, src)
}
func (m *ChannelCoreByCreateChannelReq) XXX_Size() int {
	return xxx_messageInfo_ChannelCoreByCreateChannelReq.Size(m)
}
func (m *ChannelCoreByCreateChannelReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelCoreByCreateChannelReq.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelCoreByCreateChannelReq proto.InternalMessageInfo

func (m *ChannelCoreByCreateChannelReq) GetCreatorId() int32 {
	if m != nil {
		return m.CreatorId
	}
	return 0
}

func (m *ChannelCoreByCreateChannelReq) GetUserIdList() []int32 {
	if m != nil {
		return m.UserIdList
	}
	return nil
}

func (m *ChannelCoreByCreateChannelReq) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ChannelCoreByCreateChannelReq) GetAbout() string {
	if m != nil {
		return m.About
	}
	return ""
}

type ChannelCoreData struct {
	Channel              *Channel              `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	Participants         []*ChannelParticipant `protobuf:"bytes,2,rep,name=participants,proto3" json:"participants,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ChannelCoreData) Reset()         { *m = ChannelCoreData{} }
func (m *ChannelCoreData) String() string { return proto.CompactTextString(m) }
func (*ChannelCoreData) ProtoMessage()    {}
func (*ChannelCoreData) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{5}
}
func (m *ChannelCoreData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelCoreData.Unmarshal(m, b)
}
func (m *ChannelCoreData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelCoreData.Marshal(b, m, deterministic)
}
func (m *ChannelCoreData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelCoreData.Merge(m, src)
}
func (m *ChannelCoreData) XXX_Size() int {
	return xxx_messageInfo_ChannelCoreData.Size(m)
}
func (m *ChannelCoreData) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelCoreData.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelCoreData proto.InternalMessageInfo

func (m *ChannelCoreData) GetChannel() *Channel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *ChannelCoreData) GetParticipants() []*ChannelParticipant {
	if m != nil {
		return m.Participants
	}
	return nil
}

type ExportedChatInviteResp struct {
	Link                 string   `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExportedChatInviteResp) Reset()         { *m = ExportedChatInviteResp{} }
func (m *ExportedChatInviteResp) String() string { return proto.CompactTextString(m) }
func (*ExportedChatInviteResp) ProtoMessage()    {}
func (*ExportedChatInviteResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{6}
}
func (m *ExportedChatInviteResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExportedChatInviteResp.Unmarshal(m, b)
}
func (m *ExportedChatInviteResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExportedChatInviteResp.Marshal(b, m, deterministic)
}
func (m *ExportedChatInviteResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExportedChatInviteResp.Merge(m, src)
}
func (m *ExportedChatInviteResp) XXX_Size() int {
	return xxx_messageInfo_ExportedChatInviteResp.Size(m)
}
func (m *ExportedChatInviteResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ExportedChatInviteResp.DiscardUnknown(m)
}

var xxx_messageInfo_ExportedChatInviteResp proto.InternalMessageInfo

func (m *ExportedChatInviteResp) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

type CheckUserIsAdministratorReq struct {
	Channel              *ChannelCoreData `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	UserId               int32            `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CheckUserIsAdministratorReq) Reset()         { *m = CheckUserIsAdministratorReq{} }
func (m *CheckUserIsAdministratorReq) String() string { return proto.CompactTextString(m) }
func (*CheckUserIsAdministratorReq) ProtoMessage()    {}
func (*CheckUserIsAdministratorReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{7}
}
func (m *CheckUserIsAdministratorReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckUserIsAdministratorReq.Unmarshal(m, b)
}
func (m *CheckUserIsAdministratorReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckUserIsAdministratorReq.Marshal(b, m, deterministic)
}
func (m *CheckUserIsAdministratorReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckUserIsAdministratorReq.Merge(m, src)
}
func (m *CheckUserIsAdministratorReq) XXX_Size() int {
	return xxx_messageInfo_CheckUserIsAdministratorReq.Size(m)
}
func (m *CheckUserIsAdministratorReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckUserIsAdministratorReq.DiscardUnknown(m)
}

var xxx_messageInfo_CheckUserIsAdministratorReq proto.InternalMessageInfo

func (m *CheckUserIsAdministratorReq) GetChannel() *ChannelCoreData {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *CheckUserIsAdministratorReq) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type CheckUserIsAdministratorResp struct {
	IsAdmin              bool     `protobuf:"varint,1,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckUserIsAdministratorResp) Reset()         { *m = CheckUserIsAdministratorResp{} }
func (m *CheckUserIsAdministratorResp) String() string { return proto.CompactTextString(m) }
func (*CheckUserIsAdministratorResp) ProtoMessage()    {}
func (*CheckUserIsAdministratorResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{8}
}
func (m *CheckUserIsAdministratorResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckUserIsAdministratorResp.Unmarshal(m, b)
}
func (m *CheckUserIsAdministratorResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckUserIsAdministratorResp.Marshal(b, m, deterministic)
}
func (m *CheckUserIsAdministratorResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckUserIsAdministratorResp.Merge(m, src)
}
func (m *CheckUserIsAdministratorResp) XXX_Size() int {
	return xxx_messageInfo_CheckUserIsAdministratorResp.Size(m)
}
func (m *CheckUserIsAdministratorResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckUserIsAdministratorResp.DiscardUnknown(m)
}

var xxx_messageInfo_CheckUserIsAdministratorResp proto.InternalMessageInfo

func (m *CheckUserIsAdministratorResp) GetIsAdmin() bool {
	if m != nil {
		return m.IsAdmin
	}
	return false
}

type GetChannelParticipantListResp struct {
	Participants         []*mtproto.ChannelParticipant `protobuf:"bytes,1,rep,name=participants,proto3" json:"participants,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *GetChannelParticipantListResp) Reset()         { *m = GetChannelParticipantListResp{} }
func (m *GetChannelParticipantListResp) String() string { return proto.CompactTextString(m) }
func (*GetChannelParticipantListResp) ProtoMessage()    {}
func (*GetChannelParticipantListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{9}
}
func (m *GetChannelParticipantListResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChannelParticipantListResp.Unmarshal(m, b)
}
func (m *GetChannelParticipantListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChannelParticipantListResp.Marshal(b, m, deterministic)
}
func (m *GetChannelParticipantListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChannelParticipantListResp.Merge(m, src)
}
func (m *GetChannelParticipantListResp) XXX_Size() int {
	return xxx_messageInfo_GetChannelParticipantListResp.Size(m)
}
func (m *GetChannelParticipantListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChannelParticipantListResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetChannelParticipantListResp proto.InternalMessageInfo

func (m *GetChannelParticipantListResp) GetParticipants() []*mtproto.ChannelParticipant {
	if m != nil {
		return m.Participants
	}
	return nil
}

type GetChannelParticipantIdListResp struct {
	IdList               []int32  `protobuf:"varint,1,rep,packed,name=id_list,json=idList,proto3" json:"id_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetChannelParticipantIdListResp) Reset()         { *m = GetChannelParticipantIdListResp{} }
func (m *GetChannelParticipantIdListResp) String() string { return proto.CompactTextString(m) }
func (*GetChannelParticipantIdListResp) ProtoMessage()    {}
func (*GetChannelParticipantIdListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{10}
}
func (m *GetChannelParticipantIdListResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChannelParticipantIdListResp.Unmarshal(m, b)
}
func (m *GetChannelParticipantIdListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChannelParticipantIdListResp.Marshal(b, m, deterministic)
}
func (m *GetChannelParticipantIdListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChannelParticipantIdListResp.Merge(m, src)
}
func (m *GetChannelParticipantIdListResp) XXX_Size() int {
	return xxx_messageInfo_GetChannelParticipantIdListResp.Size(m)
}
func (m *GetChannelParticipantIdListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChannelParticipantIdListResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetChannelParticipantIdListResp proto.InternalMessageInfo

func (m *GetChannelParticipantIdListResp) GetIdList() []int32 {
	if m != nil {
		return m.IdList
	}
	return nil
}

type AddChannelUserReq struct {
	Channel              *ChannelCoreData `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	InviterId            int32            `protobuf:"varint,2,opt,name=inviterId,proto3" json:"inviterId,omitempty"`
	UserId               int32            `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *AddChannelUserReq) Reset()         { *m = AddChannelUserReq{} }
func (m *AddChannelUserReq) String() string { return proto.CompactTextString(m) }
func (*AddChannelUserReq) ProtoMessage()    {}
func (*AddChannelUserReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{11}
}
func (m *AddChannelUserReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddChannelUserReq.Unmarshal(m, b)
}
func (m *AddChannelUserReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddChannelUserReq.Marshal(b, m, deterministic)
}
func (m *AddChannelUserReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddChannelUserReq.Merge(m, src)
}
func (m *AddChannelUserReq) XXX_Size() int {
	return xxx_messageInfo_AddChannelUserReq.Size(m)
}
func (m *AddChannelUserReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddChannelUserReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddChannelUserReq proto.InternalMessageInfo

func (m *AddChannelUserReq) GetChannel() *ChannelCoreData {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *AddChannelUserReq) GetInviterId() int32 {
	if m != nil {
		return m.InviterId
	}
	return 0
}

func (m *AddChannelUserReq) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type AddChannelUserResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddChannelUserResp) Reset()         { *m = AddChannelUserResp{} }
func (m *AddChannelUserResp) String() string { return proto.CompactTextString(m) }
func (*AddChannelUserResp) ProtoMessage()    {}
func (*AddChannelUserResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{12}
}
func (m *AddChannelUserResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddChannelUserResp.Unmarshal(m, b)
}
func (m *AddChannelUserResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddChannelUserResp.Marshal(b, m, deterministic)
}
func (m *AddChannelUserResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddChannelUserResp.Merge(m, src)
}
func (m *AddChannelUserResp) XXX_Size() int {
	return xxx_messageInfo_AddChannelUserResp.Size(m)
}
func (m *AddChannelUserResp) XXX_DiscardUnknown() {
	xxx_messageInfo_AddChannelUserResp.DiscardUnknown(m)
}

var xxx_messageInfo_AddChannelUserResp proto.InternalMessageInfo

type CheckDeleteChannelUserReq struct {
	Channel              *ChannelCoreData `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	OperatorId           int32            `protobuf:"varint,2,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
	DeleteUserId         int32            `protobuf:"varint,3,opt,name=deleteUserId,proto3" json:"deleteUserId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CheckDeleteChannelUserReq) Reset()         { *m = CheckDeleteChannelUserReq{} }
func (m *CheckDeleteChannelUserReq) String() string { return proto.CompactTextString(m) }
func (*CheckDeleteChannelUserReq) ProtoMessage()    {}
func (*CheckDeleteChannelUserReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{13}
}
func (m *CheckDeleteChannelUserReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckDeleteChannelUserReq.Unmarshal(m, b)
}
func (m *CheckDeleteChannelUserReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckDeleteChannelUserReq.Marshal(b, m, deterministic)
}
func (m *CheckDeleteChannelUserReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckDeleteChannelUserReq.Merge(m, src)
}
func (m *CheckDeleteChannelUserReq) XXX_Size() int {
	return xxx_messageInfo_CheckDeleteChannelUserReq.Size(m)
}
func (m *CheckDeleteChannelUserReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckDeleteChannelUserReq.DiscardUnknown(m)
}

var xxx_messageInfo_CheckDeleteChannelUserReq proto.InternalMessageInfo

func (m *CheckDeleteChannelUserReq) GetChannel() *ChannelCoreData {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *CheckDeleteChannelUserReq) GetOperatorId() int32 {
	if m != nil {
		return m.OperatorId
	}
	return 0
}

func (m *CheckDeleteChannelUserReq) GetDeleteUserId() int32 {
	if m != nil {
		return m.DeleteUserId
	}
	return 0
}

type CheckDeleteChannelUserResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckDeleteChannelUserResp) Reset()         { *m = CheckDeleteChannelUserResp{} }
func (m *CheckDeleteChannelUserResp) String() string { return proto.CompactTextString(m) }
func (*CheckDeleteChannelUserResp) ProtoMessage()    {}
func (*CheckDeleteChannelUserResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{14}
}
func (m *CheckDeleteChannelUserResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckDeleteChannelUserResp.Unmarshal(m, b)
}
func (m *CheckDeleteChannelUserResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckDeleteChannelUserResp.Marshal(b, m, deterministic)
}
func (m *CheckDeleteChannelUserResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckDeleteChannelUserResp.Merge(m, src)
}
func (m *CheckDeleteChannelUserResp) XXX_Size() int {
	return xxx_messageInfo_CheckDeleteChannelUserResp.Size(m)
}
func (m *CheckDeleteChannelUserResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckDeleteChannelUserResp.DiscardUnknown(m)
}

var xxx_messageInfo_CheckDeleteChannelUserResp proto.InternalMessageInfo

type DeleteChannelUserReq struct {
	Channel              *ChannelCoreData `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	OperatorId           int32            `protobuf:"varint,2,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
	DeleteUserId         int32            `protobuf:"varint,3,opt,name=deleteUserId,proto3" json:"deleteUserId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *DeleteChannelUserReq) Reset()         { *m = DeleteChannelUserReq{} }
func (m *DeleteChannelUserReq) String() string { return proto.CompactTextString(m) }
func (*DeleteChannelUserReq) ProtoMessage()    {}
func (*DeleteChannelUserReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{15}
}
func (m *DeleteChannelUserReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteChannelUserReq.Unmarshal(m, b)
}
func (m *DeleteChannelUserReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteChannelUserReq.Marshal(b, m, deterministic)
}
func (m *DeleteChannelUserReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteChannelUserReq.Merge(m, src)
}
func (m *DeleteChannelUserReq) XXX_Size() int {
	return xxx_messageInfo_DeleteChannelUserReq.Size(m)
}
func (m *DeleteChannelUserReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteChannelUserReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteChannelUserReq proto.InternalMessageInfo

func (m *DeleteChannelUserReq) GetChannel() *ChannelCoreData {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *DeleteChannelUserReq) GetOperatorId() int32 {
	if m != nil {
		return m.OperatorId
	}
	return 0
}

func (m *DeleteChannelUserReq) GetDeleteUserId() int32 {
	if m != nil {
		return m.DeleteUserId
	}
	return 0
}

type DeleteChannelUserResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteChannelUserResp) Reset()         { *m = DeleteChannelUserResp{} }
func (m *DeleteChannelUserResp) String() string { return proto.CompactTextString(m) }
func (*DeleteChannelUserResp) ProtoMessage()    {}
func (*DeleteChannelUserResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{16}
}
func (m *DeleteChannelUserResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteChannelUserResp.Unmarshal(m, b)
}
func (m *DeleteChannelUserResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteChannelUserResp.Marshal(b, m, deterministic)
}
func (m *DeleteChannelUserResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteChannelUserResp.Merge(m, src)
}
func (m *DeleteChannelUserResp) XXX_Size() int {
	return xxx_messageInfo_DeleteChannelUserResp.Size(m)
}
func (m *DeleteChannelUserResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteChannelUserResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteChannelUserResp proto.InternalMessageInfo

type EditChannelTitleReq struct {
	Channel              *ChannelCoreData `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	EditUserId           int32            `protobuf:"varint,2,opt,name=editUserId,proto3" json:"editUserId,omitempty"`
	Title                string           `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *EditChannelTitleReq) Reset()         { *m = EditChannelTitleReq{} }
func (m *EditChannelTitleReq) String() string { return proto.CompactTextString(m) }
func (*EditChannelTitleReq) ProtoMessage()    {}
func (*EditChannelTitleReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{17}
}
func (m *EditChannelTitleReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EditChannelTitleReq.Unmarshal(m, b)
}
func (m *EditChannelTitleReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EditChannelTitleReq.Marshal(b, m, deterministic)
}
func (m *EditChannelTitleReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditChannelTitleReq.Merge(m, src)
}
func (m *EditChannelTitleReq) XXX_Size() int {
	return xxx_messageInfo_EditChannelTitleReq.Size(m)
}
func (m *EditChannelTitleReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EditChannelTitleReq.DiscardUnknown(m)
}

var xxx_messageInfo_EditChannelTitleReq proto.InternalMessageInfo

func (m *EditChannelTitleReq) GetChannel() *ChannelCoreData {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *EditChannelTitleReq) GetEditUserId() int32 {
	if m != nil {
		return m.EditUserId
	}
	return 0
}

func (m *EditChannelTitleReq) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type EditChannelTitleResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EditChannelTitleResp) Reset()         { *m = EditChannelTitleResp{} }
func (m *EditChannelTitleResp) String() string { return proto.CompactTextString(m) }
func (*EditChannelTitleResp) ProtoMessage()    {}
func (*EditChannelTitleResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{18}
}
func (m *EditChannelTitleResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EditChannelTitleResp.Unmarshal(m, b)
}
func (m *EditChannelTitleResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EditChannelTitleResp.Marshal(b, m, deterministic)
}
func (m *EditChannelTitleResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditChannelTitleResp.Merge(m, src)
}
func (m *EditChannelTitleResp) XXX_Size() int {
	return xxx_messageInfo_EditChannelTitleResp.Size(m)
}
func (m *EditChannelTitleResp) XXX_DiscardUnknown() {
	xxx_messageInfo_EditChannelTitleResp.DiscardUnknown(m)
}

var xxx_messageInfo_EditChannelTitleResp proto.InternalMessageInfo

type EditChannelPhotoReq struct {
	Channel              *ChannelCoreData `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	EditUserId           int32            `protobuf:"varint,2,opt,name=editUserId,proto3" json:"editUserId,omitempty"`
	PhotoId              int64            `protobuf:"varint,3,opt,name=photoId,proto3" json:"photoId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *EditChannelPhotoReq) Reset()         { *m = EditChannelPhotoReq{} }
func (m *EditChannelPhotoReq) String() string { return proto.CompactTextString(m) }
func (*EditChannelPhotoReq) ProtoMessage()    {}
func (*EditChannelPhotoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{19}
}
func (m *EditChannelPhotoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EditChannelPhotoReq.Unmarshal(m, b)
}
func (m *EditChannelPhotoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EditChannelPhotoReq.Marshal(b, m, deterministic)
}
func (m *EditChannelPhotoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditChannelPhotoReq.Merge(m, src)
}
func (m *EditChannelPhotoReq) XXX_Size() int {
	return xxx_messageInfo_EditChannelPhotoReq.Size(m)
}
func (m *EditChannelPhotoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EditChannelPhotoReq.DiscardUnknown(m)
}

var xxx_messageInfo_EditChannelPhotoReq proto.InternalMessageInfo

func (m *EditChannelPhotoReq) GetChannel() *ChannelCoreData {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *EditChannelPhotoReq) GetEditUserId() int32 {
	if m != nil {
		return m.EditUserId
	}
	return 0
}

func (m *EditChannelPhotoReq) GetPhotoId() int64 {
	if m != nil {
		return m.PhotoId
	}
	return 0
}

type EditChannelPhotoResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EditChannelPhotoResp) Reset()         { *m = EditChannelPhotoResp{} }
func (m *EditChannelPhotoResp) String() string { return proto.CompactTextString(m) }
func (*EditChannelPhotoResp) ProtoMessage()    {}
func (*EditChannelPhotoResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{20}
}
func (m *EditChannelPhotoResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EditChannelPhotoResp.Unmarshal(m, b)
}
func (m *EditChannelPhotoResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EditChannelPhotoResp.Marshal(b, m, deterministic)
}
func (m *EditChannelPhotoResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditChannelPhotoResp.Merge(m, src)
}
func (m *EditChannelPhotoResp) XXX_Size() int {
	return xxx_messageInfo_EditChannelPhotoResp.Size(m)
}
func (m *EditChannelPhotoResp) XXX_DiscardUnknown() {
	xxx_messageInfo_EditChannelPhotoResp.DiscardUnknown(m)
}

var xxx_messageInfo_EditChannelPhotoResp proto.InternalMessageInfo

type EditChannelAdminReq struct {
	Channel              *ChannelCoreData `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	OperatorId           int32            `protobuf:"varint,2,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
	EditChannelAdminId   int32            `protobuf:"varint,3,opt,name=editChannelAdminId,proto3" json:"editChannelAdminId,omitempty"`
	IsAdmin              bool             `protobuf:"varint,4,opt,name=isAdmin,proto3" json:"isAdmin,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *EditChannelAdminReq) Reset()         { *m = EditChannelAdminReq{} }
func (m *EditChannelAdminReq) String() string { return proto.CompactTextString(m) }
func (*EditChannelAdminReq) ProtoMessage()    {}
func (*EditChannelAdminReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{21}
}
func (m *EditChannelAdminReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EditChannelAdminReq.Unmarshal(m, b)
}
func (m *EditChannelAdminReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EditChannelAdminReq.Marshal(b, m, deterministic)
}
func (m *EditChannelAdminReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditChannelAdminReq.Merge(m, src)
}
func (m *EditChannelAdminReq) XXX_Size() int {
	return xxx_messageInfo_EditChannelAdminReq.Size(m)
}
func (m *EditChannelAdminReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EditChannelAdminReq.DiscardUnknown(m)
}

var xxx_messageInfo_EditChannelAdminReq proto.InternalMessageInfo

func (m *EditChannelAdminReq) GetChannel() *ChannelCoreData {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *EditChannelAdminReq) GetOperatorId() int32 {
	if m != nil {
		return m.OperatorId
	}
	return 0
}

func (m *EditChannelAdminReq) GetEditChannelAdminId() int32 {
	if m != nil {
		return m.EditChannelAdminId
	}
	return 0
}

func (m *EditChannelAdminReq) GetIsAdmin() bool {
	if m != nil {
		return m.IsAdmin
	}
	return false
}

type EditChannelAdminResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EditChannelAdminResp) Reset()         { *m = EditChannelAdminResp{} }
func (m *EditChannelAdminResp) String() string { return proto.CompactTextString(m) }
func (*EditChannelAdminResp) ProtoMessage()    {}
func (*EditChannelAdminResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{22}
}
func (m *EditChannelAdminResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EditChannelAdminResp.Unmarshal(m, b)
}
func (m *EditChannelAdminResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EditChannelAdminResp.Marshal(b, m, deterministic)
}
func (m *EditChannelAdminResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditChannelAdminResp.Merge(m, src)
}
func (m *EditChannelAdminResp) XXX_Size() int {
	return xxx_messageInfo_EditChannelAdminResp.Size(m)
}
func (m *EditChannelAdminResp) XXX_DiscardUnknown() {
	xxx_messageInfo_EditChannelAdminResp.DiscardUnknown(m)
}

var xxx_messageInfo_EditChannelAdminResp proto.InternalMessageInfo

type ToggleChannelAdminsReq struct {
	Channel              *ChannelCoreData `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	UserId               int32            `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	AdminsEnabled        bool             `protobuf:"varint,3,opt,name=adminsEnabled,proto3" json:"adminsEnabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ToggleChannelAdminsReq) Reset()         { *m = ToggleChannelAdminsReq{} }
func (m *ToggleChannelAdminsReq) String() string { return proto.CompactTextString(m) }
func (*ToggleChannelAdminsReq) ProtoMessage()    {}
func (*ToggleChannelAdminsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{23}
}
func (m *ToggleChannelAdminsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ToggleChannelAdminsReq.Unmarshal(m, b)
}
func (m *ToggleChannelAdminsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ToggleChannelAdminsReq.Marshal(b, m, deterministic)
}
func (m *ToggleChannelAdminsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ToggleChannelAdminsReq.Merge(m, src)
}
func (m *ToggleChannelAdminsReq) XXX_Size() int {
	return xxx_messageInfo_ToggleChannelAdminsReq.Size(m)
}
func (m *ToggleChannelAdminsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ToggleChannelAdminsReq.DiscardUnknown(m)
}

var xxx_messageInfo_ToggleChannelAdminsReq proto.InternalMessageInfo

func (m *ToggleChannelAdminsReq) GetChannel() *ChannelCoreData {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *ToggleChannelAdminsReq) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ToggleChannelAdminsReq) GetAdminsEnabled() bool {
	if m != nil {
		return m.AdminsEnabled
	}
	return false
}

type ToggleChannelAdminsResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ToggleChannelAdminsResp) Reset()         { *m = ToggleChannelAdminsResp{} }
func (m *ToggleChannelAdminsResp) String() string { return proto.CompactTextString(m) }
func (*ToggleChannelAdminsResp) ProtoMessage()    {}
func (*ToggleChannelAdminsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{24}
}
func (m *ToggleChannelAdminsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ToggleChannelAdminsResp.Unmarshal(m, b)
}
func (m *ToggleChannelAdminsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ToggleChannelAdminsResp.Marshal(b, m, deterministic)
}
func (m *ToggleChannelAdminsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ToggleChannelAdminsResp.Merge(m, src)
}
func (m *ToggleChannelAdminsResp) XXX_Size() int {
	return xxx_messageInfo_ToggleChannelAdminsResp.Size(m)
}
func (m *ToggleChannelAdminsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ToggleChannelAdminsResp.DiscardUnknown(m)
}

var xxx_messageInfo_ToggleChannelAdminsResp proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ChannelParticipant)(nil), "channels.ChannelParticipant")
	proto.RegisterType((*Channel)(nil), "channels.Channel")
	proto.RegisterType((*ChannelParticipantRes)(nil), "channels.ChannelParticipantRes")
	proto.RegisterType((*ChannelCoreByIdReq)(nil), "channels.ChannelCoreByIdReq")
	proto.RegisterType((*ChannelCoreByCreateChannelReq)(nil), "channels.ChannelCoreByCreateChannelReq")
	proto.RegisterType((*ChannelCoreData)(nil), "channels.ChannelCoreData")
	proto.RegisterType((*ExportedChatInviteResp)(nil), "channels.ExportedChatInviteResp")
	proto.RegisterType((*CheckUserIsAdministratorReq)(nil), "channels.CheckUserIsAdministratorReq")
	proto.RegisterType((*CheckUserIsAdministratorResp)(nil), "channels.CheckUserIsAdministratorResp")
	proto.RegisterType((*GetChannelParticipantListResp)(nil), "channels.GetChannelParticipantListResp")
	proto.RegisterType((*GetChannelParticipantIdListResp)(nil), "channels.GetChannelParticipantIdListResp")
	proto.RegisterType((*AddChannelUserReq)(nil), "channels.AddChannelUserReq")
	proto.RegisterType((*AddChannelUserResp)(nil), "channels.AddChannelUserResp")
	proto.RegisterType((*CheckDeleteChannelUserReq)(nil), "channels.CheckDeleteChannelUserReq")
	proto.RegisterType((*CheckDeleteChannelUserResp)(nil), "channels.CheckDeleteChannelUserResp")
	proto.RegisterType((*DeleteChannelUserReq)(nil), "channels.DeleteChannelUserReq")
	proto.RegisterType((*DeleteChannelUserResp)(nil), "channels.DeleteChannelUserResp")
	proto.RegisterType((*EditChannelTitleReq)(nil), "channels.EditChannelTitleReq")
	proto.RegisterType((*EditChannelTitleResp)(nil), "channels.EditChannelTitleResp")
	proto.RegisterType((*EditChannelPhotoReq)(nil), "channels.EditChannelPhotoReq")
	proto.RegisterType((*EditChannelPhotoResp)(nil), "channels.EditChannelPhotoResp")
	proto.RegisterType((*EditChannelAdminReq)(nil), "channels.EditChannelAdminReq")
	proto.RegisterType((*EditChannelAdminResp)(nil), "channels.EditChannelAdminResp")
	proto.RegisterType((*ToggleChannelAdminsReq)(nil), "channels.ToggleChannelAdminsReq")
	proto.RegisterType((*ToggleChannelAdminsResp)(nil), "channels.ToggleChannelAdminsResp")
}

func init() { proto.RegisterFile("channels.proto", fileDescriptor_6eb5b11d5b15e5ec) }

var fileDescriptor_6eb5b11d5b15e5ec = []byte{
	// 1197 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0x4b, 0x6f, 0xdb, 0x46,
	0x10, 0x06, 0xe5, 0x87, 0xa4, 0xf1, 0x2b, 0xde, 0x38, 0x36, 0x2d, 0x59, 0xb1, 0xcb, 0x26, 0xa9,
	0x83, 0x14, 0x3e, 0x38, 0xa7, 0x16, 0xe8, 0x43, 0x96, 0x8d, 0x56, 0xe8, 0xcb, 0x61, 0x9d, 0x1e,
	0x82, 0x02, 0x2a, 0x2d, 0x6e, 0xa3, 0xad, 0x65, 0x92, 0xe5, 0xae, 0xdd, 0xba, 0x87, 0x22, 0x87,
	0xde, 0x52, 0xa0, 0x97, 0xfe, 0x94, 0x1e, 0x0b, 0xf4, 0xaf, 0x15, 0x3b, 0xbb, 0xa4, 0x96, 0x2f,
	0xa9, 0x48, 0x10, 0xa0, 0x37, 0xed, 0x37, 0xcb, 0x99, 0x6f, 0xbe, 0x9d, 0x9d, 0x59, 0x08, 0x56,
	0x87, 0x23, 0x2f, 0x08, 0xe8, 0x98, 0x1f, 0x44, 0x71, 0x28, 0x42, 0xd2, 0x48, 0xd6, 0xad, 0x95,
	0xcb, 0x9b, 0x81, 0xb8, 0x89, 0xa8, 0x32, 0x38, 0xff, 0xd4, 0x80, 0xf4, 0x94, 0xed, 0xd4, 0x8b,
	0x05, 0x1b, 0xb2, 0xc8, 0x0b, 0x04, 0x59, 0x85, 0x1a, 0xf3, 0x6d, 0x6b, 0xcf, 0xda, 0x5f, 0x70,
	0x6b, 0xcc, 0x27, 0x1d, 0x00, 0xed, 0x61, 0xc0, 0x7c, 0xbb, 0x86, 0x78, 0x53, 0x23, 0x7d, 0x9f,
	0x6c, 0x41, 0xfd, 0x8a, 0xd3, 0x58, 0xda, 0xe6, 0xd0, 0xb6, 0x28, 0x97, 0x7d, 0x9f, 0x3c, 0x84,
	0x5b, 0xd1, 0xc4, 0x2d, 0x06, 0xb6, 0xe7, 0x71, 0xc7, 0x9a, 0x81, 0x9f, 0xdd, 0x44, 0x94, 0x3c,
	0x80, 0x35, 0x16, 0x5c, 0x33, 0x41, 0xe3, 0x41, 0xe2, 0x6b, 0x01, 0x77, 0xae, 0x68, 0xf8, 0xa9,
	0x72, 0xd9, 0x01, 0x50, 0x80, 0x3f, 0xf0, 0x84, 0xbd, 0xa8, 0xa8, 0x68, 0xa4, 0x2b, 0x48, 0x1b,
	0x9a, 0x3f, 0x84, 0x2c, 0x50, 0xd6, 0x3a, 0x5a, 0x1b, 0x0a, 0xe8, 0x0a, 0xb2, 0x01, 0x0b, 0x5c,
	0x78, 0x82, 0xda, 0x0d, 0x34, 0xa8, 0x05, 0x26, 0x17, 0x53, 0x4f, 0x7b, 0x6c, 0xee, 0x59, 0xfb,
	0x4d, 0xb7, 0xa9, 0x91, 0xae, 0x90, 0xe6, 0xab, 0xc8, 0x4f, 0xcc, 0xa0, 0xcc, 0x1a, 0xe9, 0x0a,
	0xe7, 0xef, 0x39, 0xa8, 0x6b, 0x05, 0x0b, 0xb2, 0x3d, 0x80, 0x35, 0xf4, 0x13, 0x4e, 0x72, 0x52,
	0xda, 0xad, 0x68, 0x58, 0xe7, 0xb4, 0x0b, 0x4b, 0xde, 0x70, 0x48, 0x39, 0x1f, 0x8c, 0x3c, 0x3e,
	0x42, 0x0d, 0xe7, 0x5c, 0x50, 0xd0, 0xa7, 0x1e, 0x1f, 0xc9, 0xac, 0x62, 0x2f, 0xf0, 0xc3, 0x4b,
	0xe9, 0x62, 0x1e, 0xcd, 0x0d, 0x05, 0xf4, 0x7d, 0xf2, 0x08, 0xd6, 0x4d, 0x91, 0x87, 0xe1, 0x55,
	0x20, 0xb4, 0x76, 0xa6, 0xfa, 0x3d, 0x89, 0x4b, 0x09, 0x04, 0x13, 0x63, 0x8a, 0xca, 0x35, 0x5d,
	0xb5, 0x90, 0xa8, 0x77, 0x1e, 0x5e, 0x29, 0xc5, 0x9a, 0xae, 0x5a, 0x90, 0x6d, 0x68, 0x44, 0xa3,
	0x50, 0x84, 0x32, 0x68, 0x03, 0x83, 0xd6, 0x71, 0xdd, 0xf7, 0x09, 0x81, 0xf9, 0x31, 0x0b, 0x2e,
	0xb4, 0x5a, 0xf8, 0x9b, 0xdc, 0x87, 0x55, 0xcf, 0xbf, 0x64, 0x01, 0x1f, 0xd0, 0xc0, 0x3b, 0x1f,
	0x53, 0x1f, 0xc5, 0x5a, 0x70, 0x57, 0x14, 0x7a, 0xa2, 0x40, 0xb2, 0x07, 0x4b, 0x3e, 0xf5, 0x86,
	0x82, 0x5d, 0x4b, 0x05, 0xed, 0x25, 0xdc, 0x63, 0x42, 0xc4, 0x86, 0xfa, 0x35, 0x8d, 0x39, 0x0b,
	0x03, 0x7b, 0x19, 0xad, 0xc9, 0x52, 0x86, 0x95, 0xba, 0xdb, 0x2b, 0x08, 0xe3, 0xef, 0xdc, 0xf1,
	0xad, 0x4e, 0x3f, 0xbe, 0xb5, 0xfc, 0xf1, 0x7d, 0x03, 0x77, 0x8a, 0xf5, 0xef, 0x52, 0x4e, 0x3e,
	0x80, 0x25, 0x43, 0x3c, 0x3c, 0xd4, 0xa5, 0xc3, 0xf6, 0xc1, 0xa5, 0xc0, 0x8b, 0x73, 0x50, 0xf2,
	0x91, 0xb9, 0xdf, 0xb9, 0x4c, 0xef, 0x55, 0x2f, 0x8c, 0xe9, 0xd1, 0x4d, 0xdf, 0x77, 0xe9, 0x8f,
	0xf2, 0xa2, 0x70, 0x3a, 0xfe, 0x7e, 0x90, 0x56, 0xc9, 0xa2, 0x5c, 0xf6, 0x7d, 0xf2, 0x61, 0x36,
	0x5a, 0x0d, 0xa3, 0xed, 0x1c, 0xa4, 0xd7, 0x78, 0x56, 0xb8, 0xdf, 0x2d, 0xe8, 0x64, 0xe2, 0xf5,
	0x50, 0x00, 0x0d, 0xc9, 0xd0, 0x89, 0x4c, 0x61, 0x3c, 0x89, 0xde, 0xd4, 0x48, 0x5f, 0x9e, 0xca,
	0xb2, 0x2e, 0xd1, 0xc1, 0x98, 0x71, 0xc9, 0x60, 0x6e, 0x7f, 0xc1, 0x05, 0x75, 0x8f, 0x3f, 0x67,
	0xdc, 0xa8, 0x9c, 0xb9, 0xd2, 0xca, 0x99, 0x37, 0x2a, 0xc7, 0x79, 0x61, 0xc1, 0x9a, 0x41, 0xe7,
	0xd8, 0x13, 0x1e, 0x79, 0x04, 0x75, 0x9d, 0x8e, 0x16, 0x73, 0xbd, 0x90, 0x9e, 0x9b, 0xec, 0x20,
	0x1f, 0xc3, 0xb2, 0x91, 0x1e, 0x47, 0x3a, 0xb3, 0x04, 0xc9, 0x7c, 0xe1, 0xbc, 0x0b, 0x9b, 0x27,
	0x3f, 0x47, 0x61, 0x2c, 0xa8, 0xdf, 0x1b, 0x79, 0xa2, 0x8f, 0x1d, 0xc2, 0xa5, 0x3c, 0x4a, 0x6b,
	0xd7, 0x9a, 0xd4, 0xae, 0x73, 0x01, 0xed, 0xde, 0x88, 0x0e, 0x2f, 0xf0, 0x42, 0xf2, 0xae, 0x2c,
	0x58, 0xc6, 0x45, 0x2c, 0xc5, 0x91, 0xe2, 0x3d, 0xce, 0x73, 0xdf, 0x2e, 0x30, 0x49, 0xf2, 0x9c,
	0xe4, 0x60, 0x74, 0xc5, 0x9a, 0xd9, 0x15, 0x9d, 0xf7, 0x60, 0xa7, 0x3a, 0x18, 0x8f, 0xe4, 0xbd,
	0x63, 0x7c, 0x80, 0xb7, 0x06, 0xc3, 0x35, 0xdc, 0x3a, 0x53, 0xdb, 0x9c, 0xef, 0xa0, 0xf3, 0x09,
	0x15, 0xc5, 0xe4, 0xe5, 0x09, 0xe1, 0xb7, 0x1f, 0xe5, 0x84, 0xb3, 0x50, 0xb8, 0xa9, 0x75, 0x9b,
	0xd5, 0xed, 0x7d, 0xd8, 0x2d, 0x8d, 0xa0, 0xaa, 0x00, 0x63, 0x6c, 0x41, 0x3d, 0x29, 0x13, 0x0b,
	0xcb, 0x64, 0x91, 0xa1, 0xd1, 0xf9, 0x15, 0xd6, 0xbb, 0xbe, 0xaf, 0xbf, 0x95, 0xd9, 0xbd, 0xb2,
	0x76, 0x3b, 0xa0, 0x7b, 0x7a, 0xdc, 0x4f, 0xe7, 0x4d, 0x0a, 0x90, 0x4d, 0xd0, 0x52, 0x66, 0xc7,
	0x8d, 0xb3, 0x01, 0x24, 0x1f, 0x9f, 0x47, 0xce, 0x9f, 0x16, 0x6c, 0xa3, 0xde, 0xc7, 0x74, 0x4c,
	0xd3, 0x3b, 0xf1, 0x5a, 0xf4, 0xee, 0x02, 0x84, 0x11, 0x8d, 0xd5, 0xdd, 0xd1, 0xfc, 0x0c, 0x84,
	0x38, 0xb0, 0xec, 0x63, 0xb0, 0xa7, 0x26, 0xcd, 0x0c, 0xe6, 0xec, 0x40, 0xab, 0x8a, 0x15, 0x8f,
	0x9c, 0x3f, 0x2c, 0xd8, 0xf8, 0x7f, 0xf1, 0xdd, 0x82, 0x3b, 0xe5, 0x54, 0x5f, 0x58, 0x70, 0xfb,
	0xc4, 0x67, 0x49, 0xcd, 0x9c, 0xc9, 0xbe, 0xf0, 0x3a, 0x4c, 0xa9, 0xcf, 0x84, 0xe6, 0xa1, 0x99,
	0x4e, 0x90, 0xf2, 0x2e, 0xe4, 0x6c, 0xc2, 0x46, 0x91, 0x01, 0x8f, 0x9c, 0xdf, 0xb2, 0xd4, 0x4e,
	0xe5, 0xf4, 0x7a, 0x63, 0xd4, 0x6c, 0x48, 0xc6, 0xa3, 0x9e, 0xe0, 0xc9, 0x32, 0x47, 0x4f, 0xb3,
	0xe0, 0x91, 0xf3, 0x57, 0x96, 0x1e, 0x5e, 0xf1, 0x37, 0x76, 0xc6, 0x07, 0x40, 0x68, 0x2e, 0x56,
	0x7a, 0xd2, 0x25, 0x16, 0x99, 0x8e, 0xee, 0x3a, 0xd8, 0xdb, 0x8d, 0x26, 0x94, 0x4d, 0x47, 0xb3,
	0xe6, 0x91, 0xf3, 0xd2, 0x82, 0xcd, 0xb3, 0xf0, 0xf9, 0xf3, 0x31, 0x35, 0x4d, 0xfc, 0x95, 0x33,
	0x9a, 0x5c, 0xf3, 0x4c, 0xff, 0x24, 0xf7, 0x20, 0xfb, 0xa4, 0xc0, 0x24, 0x1a, 0xb9, 0x77, 0x86,
	0xb3, 0x0d, 0x5b, 0xa5, 0x64, 0x78, 0x74, 0xf8, 0x12, 0xe0, 0x96, 0x7b, 0xda, 0xeb, 0x5e, 0x89,
	0x51, 0x18, 0xb3, 0x5f, 0x3c, 0x21, 0xdf, 0x16, 0xdf, 0x42, 0xfb, 0x0b, 0xef, 0x82, 0x16, 0x3b,
	0xdf, 0xe1, 0xd1, 0xcd, 0xf1, 0x57, 0x64, 0xea, 0xec, 0x69, 0xed, 0x4e, 0x9d, 0x4c, 0x94, 0x93,
	0xaf, 0x81, 0x7c, 0x49, 0x7f, 0xca, 0x3d, 0x09, 0x4a, 0x9c, 0x1a, 0xaf, 0x85, 0xd9, 0x4e, 0x87,
	0xd0, 0xc9, 0x3b, 0xcd, 0xcc, 0x7d, 0xf2, 0x4e, 0x85, 0xff, 0xfc, 0xeb, 0xa0, 0x55, 0x7d, 0x1c,
	0xe4, 0x09, 0x90, 0xe2, 0x20, 0x25, 0xd5, 0x1f, 0xb4, 0xf6, 0x26, 0xa6, 0x8a, 0x09, 0xcc, 0xc0,
	0xae, 0x1a, 0x80, 0xe4, 0xbe, 0xe9, 0xb8, 0x72, 0x22, 0xb7, 0x1e, 0xfc, 0x97, 0x6d, 0x3c, 0x22,
	0x03, 0xd8, 0xae, 0x1c, 0x98, 0xd3, 0x92, 0x30, 0x94, 0x9b, 0x3e, 0x70, 0x87, 0xd0, 0x9e, 0x32,
	0x2f, 0xa7, 0x85, 0x78, 0x38, 0x23, 0x84, 0x31, 0x71, 0x3f, 0x83, 0xd5, 0xec, 0x60, 0x23, 0xed,
	0xc9, 0xc7, 0x85, 0x91, 0xdb, 0xda, 0xa9, 0x36, 0x22, 0xe3, 0xcd, 0xf2, 0xc1, 0x43, 0xde, 0xce,
	0x89, 0x5a, 0x36, 0x80, 0x5a, 0xf7, 0x66, 0x6f, 0xe2, 0x11, 0x39, 0x83, 0xf5, 0xa2, 0xff, 0xbb,
	0x93, 0x4f, 0x4b, 0x5d, 0xef, 0x4e, 0xb5, 0xf3, 0x88, 0x3c, 0x81, 0x5b, 0xf9, 0x3e, 0x4f, 0x3a,
	0x46, 0xb9, 0x15, 0xa7, 0x50, 0xeb, 0xee, 0x34, 0x73, 0xc1, 0x25, 0xf6, 0xe6, 0x0a, 0x97, 0xc9,
	0xf4, 0xa8, 0x70, 0x99, 0xb6, 0xf5, 0x9c, 0x4b, 0xac, 0xc9, 0x0a, 0x97, 0x49, 0xc7, 0xaf, 0x70,
	0x99, 0xb6, 0x56, 0xf2, 0x0c, 0x6e, 0x97, 0x34, 0x33, 0x62, 0x5c, 0xb5, 0xf2, 0xc6, 0xdb, 0x7a,
	0x6b, 0xc6, 0x0e, 0x1e, 0x1d, 0xc1, 0xb3, 0xf4, 0xef, 0x81, 0xf3, 0x45, 0x7c, 0x25, 0x3e, 0xfe,
	0x37, 0x00, 0x00, 0xff, 0xff, 0xc9, 0x6a, 0xa6, 0x01, 0x41, 0x10, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RPCAuthorizationClient is the client API for RPCAuthorization service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCAuthorizationClient interface {
	MakeChannelParticipant2ByDO(ctx context.Context, in *ChannelParticipant, opts ...grpc.CallOption) (*ChannelParticipantRes, error)
	NewChannelCoreById(ctx context.Context, in *ChannelCoreByIdReq, opts ...grpc.CallOption) (*ChannelParticipantRes, error)
	NewChannelCoreByCreateChannel(ctx context.Context, in *ChannelCoreByCreateChannelReq, opts ...grpc.CallOption) (*ChannelCoreData, error)
	ExportedChatInvite(ctx context.Context, in *ChannelCoreData, opts ...grpc.CallOption) (*ExportedChatInviteResp, error)
	CheckUserIsAdministrator(ctx context.Context, in *CheckUserIsAdministratorReq, opts ...grpc.CallOption) (*CheckUserIsAdministratorResp, error)
	GetChannelParticipantList(ctx context.Context, in *ChannelCoreData, opts ...grpc.CallOption) (*GetChannelParticipantListResp, error)
	GetChannelParticipantIdList(ctx context.Context, in *ChannelCoreData, opts ...grpc.CallOption) (*GetChannelParticipantIdListResp, error)
	AddChannelUser(ctx context.Context, in *AddChannelUserReq, opts ...grpc.CallOption) (*AddChannelUserResp, error)
	CheckDeleteChannelUser(ctx context.Context, in *CheckDeleteChannelUserReq, opts ...grpc.CallOption) (*CheckDeleteChannelUserResp, error)
	DeleteChannelUser(ctx context.Context, in *DeleteChannelUserReq, opts ...grpc.CallOption) (*DeleteChannelUserResp, error)
	EditChannelTitle(ctx context.Context, in *EditChannelTitleReq, opts ...grpc.CallOption) (*EditChannelTitleResp, error)
	EditChannelPhoto(ctx context.Context, in *EditChannelPhotoReq, opts ...grpc.CallOption) (*EditChannelPhotoResp, error)
	EditChannelAdmin(ctx context.Context, in *EditChannelAdminReq, opts ...grpc.CallOption) (*EditChannelAdminResp, error)
	ToggleChannelAdmins(ctx context.Context, in *ToggleChannelAdminsReq, opts ...grpc.CallOption) (*ToggleChannelAdminsResp, error)
}

type rPCAuthorizationClient struct {
	cc *grpc.ClientConn
}

func NewRPCAuthorizationClient(cc *grpc.ClientConn) RPCAuthorizationClient {
	return &rPCAuthorizationClient{cc}
}

func (c *rPCAuthorizationClient) MakeChannelParticipant2ByDO(ctx context.Context, in *ChannelParticipant, opts ...grpc.CallOption) (*ChannelParticipantRes, error) {
	out := new(ChannelParticipantRes)
	err := c.cc.Invoke(ctx, "/channels.RPCAuthorization/MakeChannelParticipant2ByDO", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthorizationClient) NewChannelCoreById(ctx context.Context, in *ChannelCoreByIdReq, opts ...grpc.CallOption) (*ChannelParticipantRes, error) {
	out := new(ChannelParticipantRes)
	err := c.cc.Invoke(ctx, "/channels.RPCAuthorization/NewChannelCoreById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthorizationClient) NewChannelCoreByCreateChannel(ctx context.Context, in *ChannelCoreByCreateChannelReq, opts ...grpc.CallOption) (*ChannelCoreData, error) {
	out := new(ChannelCoreData)
	err := c.cc.Invoke(ctx, "/channels.RPCAuthorization/NewChannelCoreByCreateChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthorizationClient) ExportedChatInvite(ctx context.Context, in *ChannelCoreData, opts ...grpc.CallOption) (*ExportedChatInviteResp, error) {
	out := new(ExportedChatInviteResp)
	err := c.cc.Invoke(ctx, "/channels.RPCAuthorization/ExportedChatInvite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthorizationClient) CheckUserIsAdministrator(ctx context.Context, in *CheckUserIsAdministratorReq, opts ...grpc.CallOption) (*CheckUserIsAdministratorResp, error) {
	out := new(CheckUserIsAdministratorResp)
	err := c.cc.Invoke(ctx, "/channels.RPCAuthorization/CheckUserIsAdministrator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthorizationClient) GetChannelParticipantList(ctx context.Context, in *ChannelCoreData, opts ...grpc.CallOption) (*GetChannelParticipantListResp, error) {
	out := new(GetChannelParticipantListResp)
	err := c.cc.Invoke(ctx, "/channels.RPCAuthorization/GetChannelParticipantList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthorizationClient) GetChannelParticipantIdList(ctx context.Context, in *ChannelCoreData, opts ...grpc.CallOption) (*GetChannelParticipantIdListResp, error) {
	out := new(GetChannelParticipantIdListResp)
	err := c.cc.Invoke(ctx, "/channels.RPCAuthorization/GetChannelParticipantIdList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthorizationClient) AddChannelUser(ctx context.Context, in *AddChannelUserReq, opts ...grpc.CallOption) (*AddChannelUserResp, error) {
	out := new(AddChannelUserResp)
	err := c.cc.Invoke(ctx, "/channels.RPCAuthorization/AddChannelUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthorizationClient) CheckDeleteChannelUser(ctx context.Context, in *CheckDeleteChannelUserReq, opts ...grpc.CallOption) (*CheckDeleteChannelUserResp, error) {
	out := new(CheckDeleteChannelUserResp)
	err := c.cc.Invoke(ctx, "/channels.RPCAuthorization/CheckDeleteChannelUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthorizationClient) DeleteChannelUser(ctx context.Context, in *DeleteChannelUserReq, opts ...grpc.CallOption) (*DeleteChannelUserResp, error) {
	out := new(DeleteChannelUserResp)
	err := c.cc.Invoke(ctx, "/channels.RPCAuthorization/DeleteChannelUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthorizationClient) EditChannelTitle(ctx context.Context, in *EditChannelTitleReq, opts ...grpc.CallOption) (*EditChannelTitleResp, error) {
	out := new(EditChannelTitleResp)
	err := c.cc.Invoke(ctx, "/channels.RPCAuthorization/EditChannelTitle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthorizationClient) EditChannelPhoto(ctx context.Context, in *EditChannelPhotoReq, opts ...grpc.CallOption) (*EditChannelPhotoResp, error) {
	out := new(EditChannelPhotoResp)
	err := c.cc.Invoke(ctx, "/channels.RPCAuthorization/EditChannelPhoto", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthorizationClient) EditChannelAdmin(ctx context.Context, in *EditChannelAdminReq, opts ...grpc.CallOption) (*EditChannelAdminResp, error) {
	out := new(EditChannelAdminResp)
	err := c.cc.Invoke(ctx, "/channels.RPCAuthorization/EditChannelAdmin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthorizationClient) ToggleChannelAdmins(ctx context.Context, in *ToggleChannelAdminsReq, opts ...grpc.CallOption) (*ToggleChannelAdminsResp, error) {
	out := new(ToggleChannelAdminsResp)
	err := c.cc.Invoke(ctx, "/channels.RPCAuthorization/ToggleChannelAdmins", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCAuthorizationServer is the server API for RPCAuthorization service.
type RPCAuthorizationServer interface {
	MakeChannelParticipant2ByDO(context.Context, *ChannelParticipant) (*ChannelParticipantRes, error)
	NewChannelCoreById(context.Context, *ChannelCoreByIdReq) (*ChannelParticipantRes, error)
	NewChannelCoreByCreateChannel(context.Context, *ChannelCoreByCreateChannelReq) (*ChannelCoreData, error)
	ExportedChatInvite(context.Context, *ChannelCoreData) (*ExportedChatInviteResp, error)
	CheckUserIsAdministrator(context.Context, *CheckUserIsAdministratorReq) (*CheckUserIsAdministratorResp, error)
	GetChannelParticipantList(context.Context, *ChannelCoreData) (*GetChannelParticipantListResp, error)
	GetChannelParticipantIdList(context.Context, *ChannelCoreData) (*GetChannelParticipantIdListResp, error)
	AddChannelUser(context.Context, *AddChannelUserReq) (*AddChannelUserResp, error)
	CheckDeleteChannelUser(context.Context, *CheckDeleteChannelUserReq) (*CheckDeleteChannelUserResp, error)
	DeleteChannelUser(context.Context, *DeleteChannelUserReq) (*DeleteChannelUserResp, error)
	EditChannelTitle(context.Context, *EditChannelTitleReq) (*EditChannelTitleResp, error)
	EditChannelPhoto(context.Context, *EditChannelPhotoReq) (*EditChannelPhotoResp, error)
	EditChannelAdmin(context.Context, *EditChannelAdminReq) (*EditChannelAdminResp, error)
	ToggleChannelAdmins(context.Context, *ToggleChannelAdminsReq) (*ToggleChannelAdminsResp, error)
}

// UnimplementedRPCAuthorizationServer can be embedded to have forward compatible implementations.
type UnimplementedRPCAuthorizationServer struct {
}

func (*UnimplementedRPCAuthorizationServer) MakeChannelParticipant2ByDO(ctx context.Context, req *ChannelParticipant) (*ChannelParticipantRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MakeChannelParticipant2ByDO not implemented")
}
func (*UnimplementedRPCAuthorizationServer) NewChannelCoreById(ctx context.Context, req *ChannelCoreByIdReq) (*ChannelParticipantRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewChannelCoreById not implemented")
}
func (*UnimplementedRPCAuthorizationServer) NewChannelCoreByCreateChannel(ctx context.Context, req *ChannelCoreByCreateChannelReq) (*ChannelCoreData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewChannelCoreByCreateChannel not implemented")
}
func (*UnimplementedRPCAuthorizationServer) ExportedChatInvite(ctx context.Context, req *ChannelCoreData) (*ExportedChatInviteResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExportedChatInvite not implemented")
}
func (*UnimplementedRPCAuthorizationServer) CheckUserIsAdministrator(ctx context.Context, req *CheckUserIsAdministratorReq) (*CheckUserIsAdministratorResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckUserIsAdministrator not implemented")
}
func (*UnimplementedRPCAuthorizationServer) GetChannelParticipantList(ctx context.Context, req *ChannelCoreData) (*GetChannelParticipantListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChannelParticipantList not implemented")
}
func (*UnimplementedRPCAuthorizationServer) GetChannelParticipantIdList(ctx context.Context, req *ChannelCoreData) (*GetChannelParticipantIdListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChannelParticipantIdList not implemented")
}
func (*UnimplementedRPCAuthorizationServer) AddChannelUser(ctx context.Context, req *AddChannelUserReq) (*AddChannelUserResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddChannelUser not implemented")
}
func (*UnimplementedRPCAuthorizationServer) CheckDeleteChannelUser(ctx context.Context, req *CheckDeleteChannelUserReq) (*CheckDeleteChannelUserResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckDeleteChannelUser not implemented")
}
func (*UnimplementedRPCAuthorizationServer) DeleteChannelUser(ctx context.Context, req *DeleteChannelUserReq) (*DeleteChannelUserResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteChannelUser not implemented")
}
func (*UnimplementedRPCAuthorizationServer) EditChannelTitle(ctx context.Context, req *EditChannelTitleReq) (*EditChannelTitleResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditChannelTitle not implemented")
}
func (*UnimplementedRPCAuthorizationServer) EditChannelPhoto(ctx context.Context, req *EditChannelPhotoReq) (*EditChannelPhotoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditChannelPhoto not implemented")
}
func (*UnimplementedRPCAuthorizationServer) EditChannelAdmin(ctx context.Context, req *EditChannelAdminReq) (*EditChannelAdminResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditChannelAdmin not implemented")
}
func (*UnimplementedRPCAuthorizationServer) ToggleChannelAdmins(ctx context.Context, req *ToggleChannelAdminsReq) (*ToggleChannelAdminsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ToggleChannelAdmins not implemented")
}

func RegisterRPCAuthorizationServer(s *grpc.Server, srv RPCAuthorizationServer) {
	s.RegisterService(&_RPCAuthorization_serviceDesc, srv)
}

func _RPCAuthorization_MakeChannelParticipant2ByDO_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChannelParticipant)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthorizationServer).MakeChannelParticipant2ByDO(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCAuthorization/MakeChannelParticipant2ByDO",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthorizationServer).MakeChannelParticipant2ByDO(ctx, req.(*ChannelParticipant))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuthorization_NewChannelCoreById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChannelCoreByIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthorizationServer).NewChannelCoreById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCAuthorization/NewChannelCoreById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthorizationServer).NewChannelCoreById(ctx, req.(*ChannelCoreByIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuthorization_NewChannelCoreByCreateChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChannelCoreByCreateChannelReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthorizationServer).NewChannelCoreByCreateChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCAuthorization/NewChannelCoreByCreateChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthorizationServer).NewChannelCoreByCreateChannel(ctx, req.(*ChannelCoreByCreateChannelReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuthorization_ExportedChatInvite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChannelCoreData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthorizationServer).ExportedChatInvite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCAuthorization/ExportedChatInvite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthorizationServer).ExportedChatInvite(ctx, req.(*ChannelCoreData))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuthorization_CheckUserIsAdministrator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckUserIsAdministratorReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthorizationServer).CheckUserIsAdministrator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCAuthorization/CheckUserIsAdministrator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthorizationServer).CheckUserIsAdministrator(ctx, req.(*CheckUserIsAdministratorReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuthorization_GetChannelParticipantList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChannelCoreData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthorizationServer).GetChannelParticipantList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCAuthorization/GetChannelParticipantList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthorizationServer).GetChannelParticipantList(ctx, req.(*ChannelCoreData))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuthorization_GetChannelParticipantIdList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChannelCoreData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthorizationServer).GetChannelParticipantIdList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCAuthorization/GetChannelParticipantIdList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthorizationServer).GetChannelParticipantIdList(ctx, req.(*ChannelCoreData))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuthorization_AddChannelUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddChannelUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthorizationServer).AddChannelUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCAuthorization/AddChannelUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthorizationServer).AddChannelUser(ctx, req.(*AddChannelUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuthorization_CheckDeleteChannelUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckDeleteChannelUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthorizationServer).CheckDeleteChannelUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCAuthorization/CheckDeleteChannelUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthorizationServer).CheckDeleteChannelUser(ctx, req.(*CheckDeleteChannelUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuthorization_DeleteChannelUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteChannelUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthorizationServer).DeleteChannelUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCAuthorization/DeleteChannelUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthorizationServer).DeleteChannelUser(ctx, req.(*DeleteChannelUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuthorization_EditChannelTitle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditChannelTitleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthorizationServer).EditChannelTitle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCAuthorization/EditChannelTitle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthorizationServer).EditChannelTitle(ctx, req.(*EditChannelTitleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuthorization_EditChannelPhoto_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditChannelPhotoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthorizationServer).EditChannelPhoto(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCAuthorization/EditChannelPhoto",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthorizationServer).EditChannelPhoto(ctx, req.(*EditChannelPhotoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuthorization_EditChannelAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditChannelAdminReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthorizationServer).EditChannelAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCAuthorization/EditChannelAdmin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthorizationServer).EditChannelAdmin(ctx, req.(*EditChannelAdminReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuthorization_ToggleChannelAdmins_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ToggleChannelAdminsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthorizationServer).ToggleChannelAdmins(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCAuthorization/ToggleChannelAdmins",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthorizationServer).ToggleChannelAdmins(ctx, req.(*ToggleChannelAdminsReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCAuthorization_serviceDesc = grpc.ServiceDesc{
	ServiceName: "channels.RPCAuthorization",
	HandlerType: (*RPCAuthorizationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MakeChannelParticipant2ByDO",
			Handler:    _RPCAuthorization_MakeChannelParticipant2ByDO_Handler,
		},
		{
			MethodName: "NewChannelCoreById",
			Handler:    _RPCAuthorization_NewChannelCoreById_Handler,
		},
		{
			MethodName: "NewChannelCoreByCreateChannel",
			Handler:    _RPCAuthorization_NewChannelCoreByCreateChannel_Handler,
		},
		{
			MethodName: "ExportedChatInvite",
			Handler:    _RPCAuthorization_ExportedChatInvite_Handler,
		},
		{
			MethodName: "CheckUserIsAdministrator",
			Handler:    _RPCAuthorization_CheckUserIsAdministrator_Handler,
		},
		{
			MethodName: "GetChannelParticipantList",
			Handler:    _RPCAuthorization_GetChannelParticipantList_Handler,
		},
		{
			MethodName: "GetChannelParticipantIdList",
			Handler:    _RPCAuthorization_GetChannelParticipantIdList_Handler,
		},
		{
			MethodName: "AddChannelUser",
			Handler:    _RPCAuthorization_AddChannelUser_Handler,
		},
		{
			MethodName: "CheckDeleteChannelUser",
			Handler:    _RPCAuthorization_CheckDeleteChannelUser_Handler,
		},
		{
			MethodName: "DeleteChannelUser",
			Handler:    _RPCAuthorization_DeleteChannelUser_Handler,
		},
		{
			MethodName: "EditChannelTitle",
			Handler:    _RPCAuthorization_EditChannelTitle_Handler,
		},
		{
			MethodName: "EditChannelPhoto",
			Handler:    _RPCAuthorization_EditChannelPhoto_Handler,
		},
		{
			MethodName: "EditChannelAdmin",
			Handler:    _RPCAuthorization_EditChannelAdmin_Handler,
		},
		{
			MethodName: "ToggleChannelAdmins",
			Handler:    _RPCAuthorization_ToggleChannelAdmins_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "channels.proto",
}
