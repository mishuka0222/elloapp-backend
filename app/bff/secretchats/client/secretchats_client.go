// Code generated by goctl. DO NOT EDIT.
// Source: mtproto.proto

package secretchats_client

import (
	"context"
	"gitlab.com/merehead/elloapp/backend/elloapp_tg_backend/mtproto"


	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Bool                           = mtproto.Bool
	EncryptedChat                  = mtproto.EncryptedChat
	Messages_DhConfig              = mtproto.Messages_DhConfig
	Messages_SentEncryptedMessage  = mtproto.Messages_SentEncryptedMessage
	TLMessagesAcceptEncryption     = mtproto.TLMessagesAcceptEncryption
	TLMessagesDiscardEncryption    = mtproto.TLMessagesDiscardEncryption
	TLMessagesGetDhConfig          = mtproto.TLMessagesGetDhConfig
	TLMessagesReadEncryptedHistory = mtproto.TLMessagesReadEncryptedHistory
	TLMessagesReceivedQueue        = mtproto.TLMessagesReceivedQueue
	TLMessagesRequestEncryption    = mtproto.TLMessagesRequestEncryption
	TLMessagesSendEncrypted        = mtproto.TLMessagesSendEncrypted
	TLMessagesSendEncryptedFile    = mtproto.TLMessagesSendEncryptedFile
	TLMessagesSendEncryptedService = mtproto.TLMessagesSendEncryptedService
	TLMessagesSetEncryptedTyping   = mtproto.TLMessagesSetEncryptedTyping
	Vector_Long                    = mtproto.Vector_Long

	SecretchatsClient interface {
		MessagesGetDhConfig(ctx context.Context, in *TLMessagesGetDhConfig, opts ...grpc.CallOption) (*Messages_DhConfig, error)
		MessagesRequestEncryption(ctx context.Context, in *TLMessagesRequestEncryption, opts ...grpc.CallOption) (*EncryptedChat, error)
		MessagesAcceptEncryption(ctx context.Context, in *TLMessagesAcceptEncryption, opts ...grpc.CallOption) (*EncryptedChat, error)
		MessagesDiscardEncryption(ctx context.Context, in *TLMessagesDiscardEncryption, opts ...grpc.CallOption) (*Bool, error)
		MessagesSetEncryptedTyping(ctx context.Context, in *TLMessagesSetEncryptedTyping, opts ...grpc.CallOption) (*Bool, error)
		MessagesReadEncryptedHistory(ctx context.Context, in *TLMessagesReadEncryptedHistory, opts ...grpc.CallOption) (*Bool, error)
		MessagesSendEncrypted(ctx context.Context, in *TLMessagesSendEncrypted, opts ...grpc.CallOption) (*Messages_SentEncryptedMessage, error)
		MessagesSendEncryptedFile(ctx context.Context, in *TLMessagesSendEncryptedFile, opts ...grpc.CallOption) (*Messages_SentEncryptedMessage, error)
		MessagesSendEncryptedService(ctx context.Context, in *TLMessagesSendEncryptedService, opts ...grpc.CallOption) (*Messages_SentEncryptedMessage, error)
		MessagesReceivedQueue(ctx context.Context, in *TLMessagesReceivedQueue, opts ...grpc.CallOption) (*Vector_Long, error)
	}

	defaultSecretchatsClient struct {
		cli zrpc.Client
	}
)

func NewSecretchatsClient(cli zrpc.Client) SecretchatsClient {
	return &defaultSecretchatsClient{
		cli: cli,
	}
}

func (m *defaultSecretchatsClient) MessagesGetDhConfig(ctx context.Context, in *TLMessagesGetDhConfig, opts ...grpc.CallOption) (*Messages_DhConfig, error) {
	client := mtproto.NewRPCSecretChatsClient(m.cli.Conn())
	return client.MessagesGetDhConfig(ctx, in, opts...)
}

func (m *defaultSecretchatsClient) MessagesRequestEncryption(ctx context.Context, in *TLMessagesRequestEncryption, opts ...grpc.CallOption) (*EncryptedChat, error) {
	client := mtproto.NewRPCSecretChatsClient(m.cli.Conn())
	return client.MessagesRequestEncryption(ctx, in, opts...)
}

func (m *defaultSecretchatsClient) MessagesAcceptEncryption(ctx context.Context, in *TLMessagesAcceptEncryption, opts ...grpc.CallOption) (*EncryptedChat, error) {
	client := mtproto.NewRPCSecretChatsClient(m.cli.Conn())
	return client.MessagesAcceptEncryption(ctx, in, opts...)
}

func (m *defaultSecretchatsClient) MessagesDiscardEncryption(ctx context.Context, in *TLMessagesDiscardEncryption, opts ...grpc.CallOption) (*Bool, error) {
	client := mtproto.NewRPCSecretChatsClient(m.cli.Conn())
	return client.MessagesDiscardEncryption(ctx, in, opts...)
}

func (m *defaultSecretchatsClient) MessagesSetEncryptedTyping(ctx context.Context, in *TLMessagesSetEncryptedTyping, opts ...grpc.CallOption) (*Bool, error) {
	client := mtproto.NewRPCSecretChatsClient(m.cli.Conn())
	return client.MessagesSetEncryptedTyping(ctx, in, opts...)
}

func (m *defaultSecretchatsClient) MessagesReadEncryptedHistory(ctx context.Context, in *TLMessagesReadEncryptedHistory, opts ...grpc.CallOption) (*Bool, error) {
	client := mtproto.NewRPCSecretChatsClient(m.cli.Conn())
	return client.MessagesReadEncryptedHistory(ctx, in, opts...)
}

func (m *defaultSecretchatsClient) MessagesSendEncrypted(ctx context.Context, in *TLMessagesSendEncrypted, opts ...grpc.CallOption) (*Messages_SentEncryptedMessage, error) {
	client := mtproto.NewRPCSecretChatsClient(m.cli.Conn())
	return client.MessagesSendEncrypted(ctx, in, opts...)
}

func (m *defaultSecretchatsClient) MessagesSendEncryptedFile(ctx context.Context, in *TLMessagesSendEncryptedFile, opts ...grpc.CallOption) (*Messages_SentEncryptedMessage, error) {
	client := mtproto.NewRPCSecretChatsClient(m.cli.Conn())
	return client.MessagesSendEncryptedFile(ctx, in, opts...)
}

func (m *defaultSecretchatsClient) MessagesSendEncryptedService(ctx context.Context, in *TLMessagesSendEncryptedService, opts ...grpc.CallOption) (*Messages_SentEncryptedMessage, error) {
	client := mtproto.NewRPCSecretChatsClient(m.cli.Conn())
	return client.MessagesSendEncryptedService(ctx, in, opts...)
}

func (m *defaultSecretchatsClient) MessagesReceivedQueue(ctx context.Context, in *TLMessagesReceivedQueue, opts ...grpc.CallOption) (*Vector_Long, error) {
	client := mtproto.NewRPCSecretChatsClient(m.cli.Conn())
	return client.MessagesReceivedQueue(ctx, in, opts...)
}
