// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: phonecall.proto

package phonecall

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	mtproto "gitlab.com/merehead/elloapp/backend/elloapp_tg_backend/mtproto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type PhoneCallSession struct {
	Id                    int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AdminId               int64    `protobuf:"varint,2,opt,name=admin_id,json=adminId,proto3" json:"admin_id,omitempty"`
	AdminAccessHash       int64    `protobuf:"varint,3,opt,name=admin_access_hash,json=adminAccessHash,proto3" json:"admin_access_hash,omitempty"`
	ParticipantId         int64    `protobuf:"varint,4,opt,name=participant_id,json=participantId,proto3" json:"participant_id,omitempty"`
	ParticipantAccessHash int64    `protobuf:"varint,5,opt,name=participant_access_hash,json=participantAccessHash,proto3" json:"participant_access_hash,omitempty"`
	UdpP2P                bool     `protobuf:"varint,6,opt,name=udp_p2p,json=udpP2p,proto3" json:"udp_p2p,omitempty"`
	UdpReflector          bool     `protobuf:"varint,7,opt,name=udp_reflector,json=udpReflector,proto3" json:"udp_reflector,omitempty"`
	MinLayer              int32    `protobuf:"varint,8,opt,name=min_layer,json=minLayer,proto3" json:"min_layer,omitempty"`
	MaxLayer              int32    `protobuf:"varint,9,opt,name=max_layer,json=maxLayer,proto3" json:"max_layer,omitempty"`
	GA                    []byte   `protobuf:"bytes,10,opt,name=g_a,json=gA,proto3" json:"g_a,omitempty"`
	GB                    []byte   `protobuf:"bytes,11,opt,name=g_b,json=gB,proto3" json:"g_b,omitempty"`
	State                 int32    `protobuf:"varint,12,opt,name=state,proto3" json:"state,omitempty"`
	Date                  int64    `protobuf:"varint,13,opt,name=date,proto3" json:"date,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *PhoneCallSession) Reset()         { *m = PhoneCallSession{} }
func (m *PhoneCallSession) String() string { return proto.CompactTextString(m) }
func (*PhoneCallSession) ProtoMessage()    {}
func (*PhoneCallSession) Descriptor() ([]byte, []int) {
	return fileDescriptor_68e245dd4547dc78, []int{0}
}
func (m *PhoneCallSession) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PhoneCallSession.Unmarshal(m, b)
}
func (m *PhoneCallSession) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PhoneCallSession.Marshal(b, m, deterministic)
}
func (m *PhoneCallSession) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhoneCallSession.Merge(m, src)
}
func (m *PhoneCallSession) XXX_Size() int {
	return xxx_messageInfo_PhoneCallSession.Size(m)
}
func (m *PhoneCallSession) XXX_DiscardUnknown() {
	xxx_messageInfo_PhoneCallSession.DiscardUnknown(m)
}

var xxx_messageInfo_PhoneCallSession proto.InternalMessageInfo

func (m *PhoneCallSession) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PhoneCallSession) GetAdminId() int64 {
	if m != nil {
		return m.AdminId
	}
	return 0
}

func (m *PhoneCallSession) GetAdminAccessHash() int64 {
	if m != nil {
		return m.AdminAccessHash
	}
	return 0
}

func (m *PhoneCallSession) GetParticipantId() int64 {
	if m != nil {
		return m.ParticipantId
	}
	return 0
}

func (m *PhoneCallSession) GetParticipantAccessHash() int64 {
	if m != nil {
		return m.ParticipantAccessHash
	}
	return 0
}

func (m *PhoneCallSession) GetUdpP2P() bool {
	if m != nil {
		return m.UdpP2P
	}
	return false
}

func (m *PhoneCallSession) GetUdpReflector() bool {
	if m != nil {
		return m.UdpReflector
	}
	return false
}

func (m *PhoneCallSession) GetMinLayer() int32 {
	if m != nil {
		return m.MinLayer
	}
	return 0
}

func (m *PhoneCallSession) GetMaxLayer() int32 {
	if m != nil {
		return m.MaxLayer
	}
	return 0
}

func (m *PhoneCallSession) GetGA() []byte {
	if m != nil {
		return m.GA
	}
	return nil
}

func (m *PhoneCallSession) GetGB() []byte {
	if m != nil {
		return m.GB
	}
	return nil
}

func (m *PhoneCallSession) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *PhoneCallSession) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

type TLMakePhoneCallSession struct {
	AdminId              int64                        `protobuf:"varint,1,opt,name=admin_id,json=adminId,proto3" json:"admin_id,omitempty"`
	ParticipantId        int64                        `protobuf:"varint,2,opt,name=participant_id,json=participantId,proto3" json:"participant_id,omitempty"`
	Ga                   []byte                       `protobuf:"bytes,3,opt,name=ga,proto3" json:"ga,omitempty"`
	Protocol             *mtproto.TLPhoneCallProtocol `protobuf:"bytes,4,opt,name=protocol,proto3" json:"protocol,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *TLMakePhoneCallSession) Reset()         { *m = TLMakePhoneCallSession{} }
func (m *TLMakePhoneCallSession) String() string { return proto.CompactTextString(m) }
func (*TLMakePhoneCallSession) ProtoMessage()    {}
func (*TLMakePhoneCallSession) Descriptor() ([]byte, []int) {
	return fileDescriptor_68e245dd4547dc78, []int{1}
}
func (m *TLMakePhoneCallSession) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLMakePhoneCallSession.Unmarshal(m, b)
}
func (m *TLMakePhoneCallSession) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLMakePhoneCallSession.Marshal(b, m, deterministic)
}
func (m *TLMakePhoneCallSession) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMakePhoneCallSession.Merge(m, src)
}
func (m *TLMakePhoneCallSession) XXX_Size() int {
	return xxx_messageInfo_TLMakePhoneCallSession.Size(m)
}
func (m *TLMakePhoneCallSession) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMakePhoneCallSession.DiscardUnknown(m)
}

var xxx_messageInfo_TLMakePhoneCallSession proto.InternalMessageInfo

func (m *TLMakePhoneCallSession) GetAdminId() int64 {
	if m != nil {
		return m.AdminId
	}
	return 0
}

func (m *TLMakePhoneCallSession) GetParticipantId() int64 {
	if m != nil {
		return m.ParticipantId
	}
	return 0
}

func (m *TLMakePhoneCallSession) GetGa() []byte {
	if m != nil {
		return m.Ga
	}
	return nil
}

func (m *TLMakePhoneCallSession) GetProtocol() *mtproto.TLPhoneCallProtocol {
	if m != nil {
		return m.Protocol
	}
	return nil
}

type TLMakePhoneCallSessionByLoad struct {
	SessionId            int64    `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMakePhoneCallSessionByLoad) Reset()         { *m = TLMakePhoneCallSessionByLoad{} }
func (m *TLMakePhoneCallSessionByLoad) String() string { return proto.CompactTextString(m) }
func (*TLMakePhoneCallSessionByLoad) ProtoMessage()    {}
func (*TLMakePhoneCallSessionByLoad) Descriptor() ([]byte, []int) {
	return fileDescriptor_68e245dd4547dc78, []int{2}
}
func (m *TLMakePhoneCallSessionByLoad) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLMakePhoneCallSessionByLoad.Unmarshal(m, b)
}
func (m *TLMakePhoneCallSessionByLoad) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLMakePhoneCallSessionByLoad.Marshal(b, m, deterministic)
}
func (m *TLMakePhoneCallSessionByLoad) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMakePhoneCallSessionByLoad.Merge(m, src)
}
func (m *TLMakePhoneCallSessionByLoad) XXX_Size() int {
	return xxx_messageInfo_TLMakePhoneCallSessionByLoad.Size(m)
}
func (m *TLMakePhoneCallSessionByLoad) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMakePhoneCallSessionByLoad.DiscardUnknown(m)
}

var xxx_messageInfo_TLMakePhoneCallSessionByLoad proto.InternalMessageInfo

func (m *TLMakePhoneCallSessionByLoad) GetSessionId() int64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func init() {
	proto.RegisterType((*PhoneCallSession)(nil), "phonecall.PhoneCallSession")
	proto.RegisterType((*TLMakePhoneCallSession)(nil), "phonecall.TLMakePhoneCallSession")
	proto.RegisterType((*TLMakePhoneCallSessionByLoad)(nil), "phonecall.TLMakePhoneCallSessionByLoad")
}

func init() { proto.RegisterFile("phonecall.proto", fileDescriptor_68e245dd4547dc78) }

var fileDescriptor_68e245dd4547dc78 = []byte{
	// 527 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x93, 0xcb, 0x6e, 0xda, 0x40,
	0x14, 0x86, 0x65, 0x93, 0x0b, 0x9c, 0x70, 0x49, 0x47, 0xd0, 0x38, 0x4e, 0x22, 0x11, 0xaa, 0xaa,
	0xa8, 0x0b, 0x2f, 0x88, 0x54, 0xa9, 0x8b, 0x2e, 0x92, 0x6c, 0x8a, 0x44, 0x25, 0xe4, 0x46, 0xdd,
	0x5a, 0x87, 0x99, 0x29, 0xb6, 0x62, 0x3c, 0xa3, 0x99, 0xa1, 0x0a, 0xef, 0xd0, 0xd7, 0xe8, 0xcb,
	0xf4, 0xa9, 0x2a, 0x8f, 0x0d, 0x38, 0x01, 0xa5, 0x3b, 0xce, 0xf7, 0xff, 0x67, 0xce, 0x0d, 0x43,
	0x47, 0xc6, 0x22, 0xe3, 0x14, 0xd3, 0x34, 0x90, 0x4a, 0x18, 0x41, 0x1a, 0x1b, 0xe0, 0xf7, 0x94,
	0xa4, 0x11, 0x57, 0x4a, 0xa8, 0x88, 0x0a, 0xc6, 0x75, 0xe1, 0xf0, 0x7d, 0x4d, 0x63, 0xbe, 0xc0,
	0xc0, 0xa4, 0x01, 0x15, 0x8a, 0x47, 0x66, 0x25, 0x37, 0x5a, 0xaf, 0xa2, 0x29, 0x7a, 0x33, 0x2a,
	0xf1, 0xf9, 0x16, 0xc7, 0x98, 0x31, 0x1d, 0xe3, 0x23, 0x2f, 0xa5, 0xeb, 0x3d, 0x52, 0xa4, 0xb9,
	0xfa, 0x95, 0xd0, 0xb5, 0xa5, 0xbb, 0xb5, 0xe8, 0x55, 0x46, 0x4b, 0x7a, 0xf9, 0x9c, 0xbe, 0xc8,
	0xa9, 0x54, 0x34, 0x0a, 0x33, 0x2d, 0x85, 0x32, 0xbb, 0x15, 0x37, 0xd2, 0x8b, 0xec, 0xd3, 0x75,
	0x68, 0xca, 0xb5, 0xf8, 0xad, 0xc5, 0xca, 0x0e, 0x5a, 0x84, 0x83, 0xdf, 0x35, 0x38, 0x9d, 0xe6,
	0x8b, 0xba, 0xc7, 0x34, 0xfd, 0xce, 0xb5, 0x4e, 0x44, 0x46, 0xda, 0xe0, 0x26, 0xcc, 0x73, 0xfa,
	0xce, 0xb0, 0x16, 0xba, 0x09, 0x23, 0xe7, 0x50, 0x47, 0xb6, 0x48, 0xb2, 0x28, 0x61, 0x9e, 0x6b,
	0xe9, 0xb1, 0x8d, 0xc7, 0x8c, 0x7c, 0x84, 0x37, 0x85, 0x84, 0x94, 0x72, 0xad, 0xa3, 0x18, 0x75,
	0xec, 0xd5, 0xac, 0xa7, 0x63, 0x85, 0x5b, 0xcb, 0xbf, 0xa2, 0x8e, 0xc9, 0x7b, 0x68, 0x4b, 0x54,
	0x26, 0xa1, 0x89, 0xc4, 0xcc, 0xe4, 0x8f, 0x1d, 0x58, 0x63, 0xab, 0x42, 0xc7, 0x8c, 0x7c, 0x82,
	0xb3, 0xaa, 0xad, 0xfa, 0xf0, 0xa1, 0xf5, 0xf7, 0x2a, 0x72, 0xe5, 0xf9, 0x33, 0x38, 0x5e, 0x32,
	0x19, 0xc9, 0x91, 0xf4, 0x8e, 0xfa, 0xce, 0xb0, 0x1e, 0x1e, 0x2d, 0x99, 0x9c, 0x8e, 0x24, 0x79,
	0x07, 0xad, 0x5c, 0x50, 0xfc, 0x67, 0xca, 0xa9, 0x11, 0xca, 0x3b, 0xb6, 0x72, 0x73, 0xc9, 0x64,
	0xb8, 0x66, 0xe4, 0x02, 0x1a, 0xf9, 0x18, 0x29, 0xae, 0xb8, 0xf2, 0xea, 0x7d, 0x67, 0x78, 0x18,
	0xd6, 0x17, 0x49, 0x36, 0xc9, 0x63, 0x2b, 0xe2, 0x53, 0x29, 0x36, 0x4a, 0x11, 0x9f, 0x0a, 0xb1,
	0x03, 0xb5, 0x79, 0x84, 0x1e, 0xf4, 0x9d, 0x61, 0x33, 0x74, 0xe7, 0xb7, 0x05, 0x98, 0x79, 0x27,
	0x25, 0xb8, 0x23, 0x5d, 0x38, 0xd4, 0x06, 0x0d, 0xf7, 0x9a, 0x36, 0xb5, 0x08, 0x08, 0x81, 0x03,
	0x96, 0xc3, 0x96, 0x1d, 0xca, 0xfe, 0x1e, 0xfc, 0x71, 0xe0, 0xed, 0xc3, 0xe4, 0x1b, 0x3e, 0xf2,
	0x9d, 0xa3, 0x54, 0x8f, 0xe0, 0x3c, 0x3f, 0xc2, 0xee, 0x62, 0xdd, 0x7d, 0x8b, 0x6d, 0x83, 0x3b,
	0x47, 0x7b, 0x9c, 0xbc, 0x2d, 0x24, 0x9f, 0xa1, 0x6e, 0xff, 0x04, 0x54, 0xa4, 0xf6, 0x12, 0x27,
	0xa3, 0xab, 0x60, 0x61, 0x2c, 0x0a, 0x1e, 0x26, 0x91, 0x5c, 0x77, 0x30, 0x2d, 0x4d, 0xe1, 0xc6,
	0x3e, 0xf8, 0x02, 0x97, 0xfb, 0xdb, 0xbc, 0x5b, 0x4d, 0x04, 0x32, 0x72, 0x05, 0xa0, 0x0b, 0xb0,
	0x6d, 0xb7, 0x51, 0x92, 0x31, 0x1b, 0xfd, 0x75, 0xa0, 0x19, 0x4e, 0xef, 0x37, 0xc9, 0xe4, 0x07,
	0x74, 0xf7, 0x0e, 0x7d, 0x1d, 0x6c, 0x3f, 0xeb, 0xfd, 0x05, 0xfd, 0x8b, 0x8a, 0x65, 0x27, 0x7f,
	0x06, 0xfe, 0x2b, 0x5d, 0x7e, 0xf8, 0xef, 0xeb, 0x85, 0xf1, 0xd5, 0x1a, 0xb3, 0x23, 0xbb, 0x95,
	0x9b, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x79, 0xc9, 0x8d, 0xec, 0x82, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RPCPhoneCallClient is the client API for RPCPhoneCall service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCPhoneCallClient interface {
	MakePhoneCallSession(ctx context.Context, in *TLMakePhoneCallSession, opts ...grpc.CallOption) (*PhoneCallSession, error)
	MakePhoneCallSessionByLoad(ctx context.Context, in *TLMakePhoneCallSessionByLoad, opts ...grpc.CallOption) (*PhoneCallSession, error)
}

type rPCPhoneCallClient struct {
	cc *grpc.ClientConn
}

func NewRPCPhoneCallClient(cc *grpc.ClientConn) RPCPhoneCallClient {
	return &rPCPhoneCallClient{cc}
}

func (c *rPCPhoneCallClient) MakePhoneCallSession(ctx context.Context, in *TLMakePhoneCallSession, opts ...grpc.CallOption) (*PhoneCallSession, error) {
	out := new(PhoneCallSession)
	err := c.cc.Invoke(ctx, "/phonecall.RPCPhoneCall/MakePhoneCallSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPhoneCallClient) MakePhoneCallSessionByLoad(ctx context.Context, in *TLMakePhoneCallSessionByLoad, opts ...grpc.CallOption) (*PhoneCallSession, error) {
	out := new(PhoneCallSession)
	err := c.cc.Invoke(ctx, "/phonecall.RPCPhoneCall/MakePhoneCallSessionByLoad", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCPhoneCallServer is the server API for RPCPhoneCall service.
type RPCPhoneCallServer interface {
	MakePhoneCallSession(context.Context, *TLMakePhoneCallSession) (*PhoneCallSession, error)
	MakePhoneCallSessionByLoad(context.Context, *TLMakePhoneCallSessionByLoad) (*PhoneCallSession, error)
}

// UnimplementedRPCPhoneCallServer can be embedded to have forward compatible implementations.
type UnimplementedRPCPhoneCallServer struct {
}

func (*UnimplementedRPCPhoneCallServer) MakePhoneCallSession(ctx context.Context, req *TLMakePhoneCallSession) (*PhoneCallSession, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MakePhoneCallSession not implemented")
}
func (*UnimplementedRPCPhoneCallServer) MakePhoneCallSessionByLoad(ctx context.Context, req *TLMakePhoneCallSessionByLoad) (*PhoneCallSession, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MakePhoneCallSessionByLoad not implemented")
}

func RegisterRPCPhoneCallServer(s *grpc.Server, srv RPCPhoneCallServer) {
	s.RegisterService(&_RPCPhoneCall_serviceDesc, srv)
}

func _RPCPhoneCall_MakePhoneCallSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMakePhoneCallSession)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPhoneCallServer).MakePhoneCallSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/phonecall.RPCPhoneCall/MakePhoneCallSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPhoneCallServer).MakePhoneCallSession(ctx, req.(*TLMakePhoneCallSession))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPhoneCall_MakePhoneCallSessionByLoad_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMakePhoneCallSessionByLoad)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPhoneCallServer).MakePhoneCallSessionByLoad(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/phonecall.RPCPhoneCall/MakePhoneCallSessionByLoad",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPhoneCallServer).MakePhoneCallSessionByLoad(ctx, req.(*TLMakePhoneCallSessionByLoad))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCPhoneCall_serviceDesc = grpc.ServiceDesc{
	ServiceName: "phonecall.RPCPhoneCall",
	HandlerType: (*RPCPhoneCallServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MakePhoneCallSession",
			Handler:    _RPCPhoneCall_MakePhoneCallSession_Handler,
		},
		{
			MethodName: "MakePhoneCallSessionByLoad",
			Handler:    _RPCPhoneCall_MakePhoneCallSessionByLoad_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "phonecall.proto",
}
