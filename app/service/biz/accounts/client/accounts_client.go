// Code generated by goctl. DO NOT EDIT.
// Source: accounts.proto

package accounts_client

import (
	"context"

	"gitlab.com/merehead/elloapp/backend/elloapp_tg_backend/app/service/biz/accounts/accounts"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ChangeAccountEmailReq     = accounts.ChangeAccountEmailReq
	ChangeAccountEmailResp    = accounts.ChangeAccountEmailResp
	ChangeAccountInfoReq      = accounts.ChangeAccountInfoReq
	ChangeAccountInfoResp     = accounts.ChangeAccountInfoResp
	ChangeAccountPasswordReq  = accounts.ChangeAccountPasswordReq
	ChangeAccountPasswordResp = accounts.ChangeAccountPasswordResp
	DeleteAccountReq          = accounts.DeleteAccountReq
	DeleteAccountResp         = accounts.DeleteAccountResp
	ForgotAccountPassReq      = accounts.ForgotAccountPassReq
	ForgotAccountPassResp     = accounts.ForgotAccountPassResp

	AccountsClient interface {
		AccountsDelete(ctx context.Context, in *DeleteAccountReq, opts ...grpc.CallOption) (*DeleteAccountResp, error)
		AccountsChangePassword(ctx context.Context, in *ChangeAccountPasswordReq, opts ...grpc.CallOption) (*ChangeAccountPasswordResp, error)
		AccountsChangeEmail(ctx context.Context, in *ChangeAccountEmailReq, opts ...grpc.CallOption) (*ChangeAccountEmailResp, error)
		AccountsChangeProfile(ctx context.Context, in *ChangeAccountInfoReq, opts ...grpc.CallOption) (*ChangeAccountInfoResp, error)
		AccountsForgotPassword(ctx context.Context, in *ForgotAccountPassReq, opts ...grpc.CallOption) (*ForgotAccountPassResp, error)
	}

	defaultAccountsClient struct {
		cli zrpc.Client
	}
)

func NewAccountsClient(cli zrpc.Client) AccountsClient {
	return &defaultAccountsClient{
		cli: cli,
	}
}

func (m *defaultAccountsClient) AccountsDelete(ctx context.Context, in *DeleteAccountReq, opts ...grpc.CallOption) (*DeleteAccountResp, error) {
	client := accounts.NewRPCAccountsClient(m.cli.Conn())
	return client.AccountsDelete(ctx, in, opts...)
}

func (m *defaultAccountsClient) AccountsChangePassword(ctx context.Context, in *ChangeAccountPasswordReq, opts ...grpc.CallOption) (*ChangeAccountPasswordResp, error) {
	client := accounts.NewRPCAccountsClient(m.cli.Conn())
	return client.AccountsChangePassword(ctx, in, opts...)
}

func (m *defaultAccountsClient) AccountsChangeEmail(ctx context.Context, in *ChangeAccountEmailReq, opts ...grpc.CallOption) (*ChangeAccountEmailResp, error) {
	client := accounts.NewRPCAccountsClient(m.cli.Conn())
	return client.AccountsChangeEmail(ctx, in, opts...)
}

func (m *defaultAccountsClient) AccountsChangeProfile(ctx context.Context, in *ChangeAccountInfoReq, opts ...grpc.CallOption) (*ChangeAccountInfoResp, error) {
	client := accounts.NewRPCAccountsClient(m.cli.Conn())
	return client.AccountsChangeProfile(ctx, in, opts...)
}

func (m *defaultAccountsClient) AccountsForgotPassword(ctx context.Context, in *ForgotAccountPassReq, opts ...grpc.CallOption) (*ForgotAccountPassResp, error) {
	client := accounts.NewRPCAccountsClient(m.cli.Conn())
	return client.AccountsForgotPassword(ctx, in, opts...)
}
