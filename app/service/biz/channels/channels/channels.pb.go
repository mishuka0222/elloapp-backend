// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: channels.proto

package channels

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	mtproto "gitlab.com/merehead/elloapp/backend/elloapp_tg_backend/mtproto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Void struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Void) Reset()         { *m = Void{} }
func (m *Void) String() string { return proto.CompactTextString(m) }
func (*Void) ProtoMessage()    {}
func (*Void) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{0}
}
func (m *Void) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Void.Unmarshal(m, b)
}
func (m *Void) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Void.Marshal(b, m, deterministic)
}
func (m *Void) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Void.Merge(m, src)
}
func (m *Void) XXX_Size() int {
	return xxx_messageInfo_Void.Size(m)
}
func (m *Void) XXX_DiscardUnknown() {
	xxx_messageInfo_Void.DiscardUnknown(m)
}

var xxx_messageInfo_Void proto.InternalMessageInfo

type ChannelParticipant struct {
	Id                   int64                    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ChannelId            int64                    `protobuf:"varint,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	UserId               int64                    `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ParticipantType      int32                    `protobuf:"varint,4,opt,name=participant_type,json=participantType,proto3" json:"participant_type,omitempty"`
	InviterUserId        int64                    `protobuf:"varint,5,opt,name=inviter_user_id,json=inviterUserId,proto3" json:"inviter_user_id,omitempty"`
	InvitedAt            int32                    `protobuf:"varint,6,opt,name=invited_at,json=invitedAt,proto3" json:"invited_at,omitempty"`
	JoinedAt             int32                    `protobuf:"varint,7,opt,name=joined_at,json=joinedAt,proto3" json:"joined_at,omitempty"`
	State                int32                    `protobuf:"varint,8,opt,name=state,proto3" json:"state,omitempty"`
	CreatedAt            string                   `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string                   `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	KickedAt             int32                    `protobuf:"varint,11,opt,name=kicked_at,json=kickedAt,proto3" json:"kicked_at,omitempty"`
	LeftAt               int32                    `protobuf:"varint,12,opt,name=left_at,json=leftAt,proto3" json:"left_at,omitempty"`
	AdminRights          *mtproto.ChatAdminRights `protobuf:"bytes,13,opt,name=admin_rights,json=adminRights,proto3" json:"admin_rights,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ChannelParticipant) Reset()         { *m = ChannelParticipant{} }
func (m *ChannelParticipant) String() string { return proto.CompactTextString(m) }
func (*ChannelParticipant) ProtoMessage()    {}
func (*ChannelParticipant) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{1}
}
func (m *ChannelParticipant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelParticipant.Unmarshal(m, b)
}
func (m *ChannelParticipant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelParticipant.Marshal(b, m, deterministic)
}
func (m *ChannelParticipant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelParticipant.Merge(m, src)
}
func (m *ChannelParticipant) XXX_Size() int {
	return xxx_messageInfo_ChannelParticipant.Size(m)
}
func (m *ChannelParticipant) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelParticipant.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelParticipant proto.InternalMessageInfo

func (m *ChannelParticipant) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ChannelParticipant) GetChannelId() int64 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

func (m *ChannelParticipant) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ChannelParticipant) GetParticipantType() int32 {
	if m != nil {
		return m.ParticipantType
	}
	return 0
}

func (m *ChannelParticipant) GetInviterUserId() int64 {
	if m != nil {
		return m.InviterUserId
	}
	return 0
}

func (m *ChannelParticipant) GetInvitedAt() int32 {
	if m != nil {
		return m.InvitedAt
	}
	return 0
}

func (m *ChannelParticipant) GetJoinedAt() int32 {
	if m != nil {
		return m.JoinedAt
	}
	return 0
}

func (m *ChannelParticipant) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *ChannelParticipant) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *ChannelParticipant) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *ChannelParticipant) GetKickedAt() int32 {
	if m != nil {
		return m.KickedAt
	}
	return 0
}

func (m *ChannelParticipant) GetLeftAt() int32 {
	if m != nil {
		return m.LeftAt
	}
	return 0
}

func (m *ChannelParticipant) GetAdminRights() *mtproto.ChatAdminRights {
	if m != nil {
		return m.AdminRights
	}
	return nil
}

type Channel struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatorUserId        int64    `protobuf:"varint,2,opt,name=creator_user_id,json=creatorUserId,proto3" json:"creator_user_id,omitempty"`
	AccessHash           int64    `protobuf:"varint,3,opt,name=access_hash,json=accessHash,proto3" json:"access_hash,omitempty"`
	RandomId             int64    `protobuf:"varint,4,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	ParticipantCount     int32    `protobuf:"varint,5,opt,name=participant_count,json=participantCount,proto3" json:"participant_count,omitempty"`
	Title                string   `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	About                string   `protobuf:"bytes,7,opt,name=about,proto3" json:"about,omitempty"`
	PhotoId              int64    `protobuf:"varint,8,opt,name=photo_id,json=photoId,proto3" json:"photo_id,omitempty"`
	Link                 string   `protobuf:"bytes,9,opt,name=link,proto3" json:"link,omitempty"`
	Username             string   `protobuf:"bytes,10,opt,name=username,proto3" json:"username,omitempty"`
	AdminsEnabled        bool     `protobuf:"varint,11,opt,name=admins_enabled,json=adminsEnabled,proto3" json:"admins_enabled,omitempty"`
	Deactivated          bool     `protobuf:"varint,12,opt,name=deactivated,proto3" json:"deactivated,omitempty"`
	Version              int32    `protobuf:"varint,13,opt,name=version,proto3" json:"version,omitempty"`
	Date                 int32    `protobuf:"varint,14,opt,name=date,proto3" json:"date,omitempty"`
	CreatedAt            string   `protobuf:"bytes,15,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string   `protobuf:"bytes,16,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Channel) Reset()         { *m = Channel{} }
func (m *Channel) String() string { return proto.CompactTextString(m) }
func (*Channel) ProtoMessage()    {}
func (*Channel) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{2}
}
func (m *Channel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Channel.Unmarshal(m, b)
}
func (m *Channel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Channel.Marshal(b, m, deterministic)
}
func (m *Channel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Channel.Merge(m, src)
}
func (m *Channel) XXX_Size() int {
	return xxx_messageInfo_Channel.Size(m)
}
func (m *Channel) XXX_DiscardUnknown() {
	xxx_messageInfo_Channel.DiscardUnknown(m)
}

var xxx_messageInfo_Channel proto.InternalMessageInfo

func (m *Channel) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Channel) GetCreatorUserId() int64 {
	if m != nil {
		return m.CreatorUserId
	}
	return 0
}

func (m *Channel) GetAccessHash() int64 {
	if m != nil {
		return m.AccessHash
	}
	return 0
}

func (m *Channel) GetRandomId() int64 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

func (m *Channel) GetParticipantCount() int32 {
	if m != nil {
		return m.ParticipantCount
	}
	return 0
}

func (m *Channel) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Channel) GetAbout() string {
	if m != nil {
		return m.About
	}
	return ""
}

func (m *Channel) GetPhotoId() int64 {
	if m != nil {
		return m.PhotoId
	}
	return 0
}

func (m *Channel) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *Channel) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Channel) GetAdminsEnabled() bool {
	if m != nil {
		return m.AdminsEnabled
	}
	return false
}

func (m *Channel) GetDeactivated() bool {
	if m != nil {
		return m.Deactivated
	}
	return false
}

func (m *Channel) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Channel) GetDate() int32 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *Channel) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Channel) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

type MakeChannelParticipant2ByDOReq struct {
	Participant          *ChannelParticipant `protobuf:"bytes,1,opt,name=participant,proto3" json:"participant,omitempty"`
	SelfId               int64               `protobuf:"varint,2,opt,name=selfId,proto3" json:"selfId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *MakeChannelParticipant2ByDOReq) Reset()         { *m = MakeChannelParticipant2ByDOReq{} }
func (m *MakeChannelParticipant2ByDOReq) String() string { return proto.CompactTextString(m) }
func (*MakeChannelParticipant2ByDOReq) ProtoMessage()    {}
func (*MakeChannelParticipant2ByDOReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{3}
}
func (m *MakeChannelParticipant2ByDOReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MakeChannelParticipant2ByDOReq.Unmarshal(m, b)
}
func (m *MakeChannelParticipant2ByDOReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MakeChannelParticipant2ByDOReq.Marshal(b, m, deterministic)
}
func (m *MakeChannelParticipant2ByDOReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MakeChannelParticipant2ByDOReq.Merge(m, src)
}
func (m *MakeChannelParticipant2ByDOReq) XXX_Size() int {
	return xxx_messageInfo_MakeChannelParticipant2ByDOReq.Size(m)
}
func (m *MakeChannelParticipant2ByDOReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MakeChannelParticipant2ByDOReq.DiscardUnknown(m)
}

var xxx_messageInfo_MakeChannelParticipant2ByDOReq proto.InternalMessageInfo

func (m *MakeChannelParticipant2ByDOReq) GetParticipant() *ChannelParticipant {
	if m != nil {
		return m.Participant
	}
	return nil
}

func (m *MakeChannelParticipant2ByDOReq) GetSelfId() int64 {
	if m != nil {
		return m.SelfId
	}
	return 0
}

type ChannelParticipantRes struct {
	Participant          *mtproto.ChannelParticipant `protobuf:"bytes,1,opt,name=participant,proto3" json:"participant,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ChannelParticipantRes) Reset()         { *m = ChannelParticipantRes{} }
func (m *ChannelParticipantRes) String() string { return proto.CompactTextString(m) }
func (*ChannelParticipantRes) ProtoMessage()    {}
func (*ChannelParticipantRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{4}
}
func (m *ChannelParticipantRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelParticipantRes.Unmarshal(m, b)
}
func (m *ChannelParticipantRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelParticipantRes.Marshal(b, m, deterministic)
}
func (m *ChannelParticipantRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelParticipantRes.Merge(m, src)
}
func (m *ChannelParticipantRes) XXX_Size() int {
	return xxx_messageInfo_ChannelParticipantRes.Size(m)
}
func (m *ChannelParticipantRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelParticipantRes.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelParticipantRes proto.InternalMessageInfo

func (m *ChannelParticipantRes) GetParticipant() *mtproto.ChannelParticipant {
	if m != nil {
		return m.Participant
	}
	return nil
}

type ChannelDataByIdReq struct {
	ChannelId            int64    `protobuf:"varint,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelDataByIdReq) Reset()         { *m = ChannelDataByIdReq{} }
func (m *ChannelDataByIdReq) String() string { return proto.CompactTextString(m) }
func (*ChannelDataByIdReq) ProtoMessage()    {}
func (*ChannelDataByIdReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{5}
}
func (m *ChannelDataByIdReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelDataByIdReq.Unmarshal(m, b)
}
func (m *ChannelDataByIdReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelDataByIdReq.Marshal(b, m, deterministic)
}
func (m *ChannelDataByIdReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelDataByIdReq.Merge(m, src)
}
func (m *ChannelDataByIdReq) XXX_Size() int {
	return xxx_messageInfo_ChannelDataByIdReq.Size(m)
}
func (m *ChannelDataByIdReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelDataByIdReq.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelDataByIdReq proto.InternalMessageInfo

func (m *ChannelDataByIdReq) GetChannelId() int64 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

type CreateNewChannelReq struct {
	CreatorId            int64    `protobuf:"varint,1,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	UserIdList           []int64  `protobuf:"varint,2,rep,packed,name=user_id_list,json=userIdList,proto3" json:"user_id_list,omitempty"`
	Title                string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	About                string   `protobuf:"bytes,4,opt,name=about,proto3" json:"about,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateNewChannelReq) Reset()         { *m = CreateNewChannelReq{} }
func (m *CreateNewChannelReq) String() string { return proto.CompactTextString(m) }
func (*CreateNewChannelReq) ProtoMessage()    {}
func (*CreateNewChannelReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{6}
}
func (m *CreateNewChannelReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNewChannelReq.Unmarshal(m, b)
}
func (m *CreateNewChannelReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNewChannelReq.Marshal(b, m, deterministic)
}
func (m *CreateNewChannelReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNewChannelReq.Merge(m, src)
}
func (m *CreateNewChannelReq) XXX_Size() int {
	return xxx_messageInfo_CreateNewChannelReq.Size(m)
}
func (m *CreateNewChannelReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNewChannelReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNewChannelReq proto.InternalMessageInfo

func (m *CreateNewChannelReq) GetCreatorId() int64 {
	if m != nil {
		return m.CreatorId
	}
	return 0
}

func (m *CreateNewChannelReq) GetUserIdList() []int64 {
	if m != nil {
		return m.UserIdList
	}
	return nil
}

func (m *CreateNewChannelReq) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CreateNewChannelReq) GetAbout() string {
	if m != nil {
		return m.About
	}
	return ""
}

type ChannelData struct {
	Channel              *Channel              `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	Participants         []*ChannelParticipant `protobuf:"bytes,2,rep,name=participants,proto3" json:"participants,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ChannelData) Reset()         { *m = ChannelData{} }
func (m *ChannelData) String() string { return proto.CompactTextString(m) }
func (*ChannelData) ProtoMessage()    {}
func (*ChannelData) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{7}
}
func (m *ChannelData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelData.Unmarshal(m, b)
}
func (m *ChannelData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelData.Marshal(b, m, deterministic)
}
func (m *ChannelData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelData.Merge(m, src)
}
func (m *ChannelData) XXX_Size() int {
	return xxx_messageInfo_ChannelData.Size(m)
}
func (m *ChannelData) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelData.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelData proto.InternalMessageInfo

func (m *ChannelData) GetChannel() *Channel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *ChannelData) GetParticipants() []*ChannelParticipant {
	if m != nil {
		return m.Participants
	}
	return nil
}

type UpdateChannelLinkReq struct {
	ChannelId            int64    `protobuf:"varint,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	Link                 string   `protobuf:"bytes,2,opt,name=link,proto3" json:"link,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateChannelLinkReq) Reset()         { *m = UpdateChannelLinkReq{} }
func (m *UpdateChannelLinkReq) String() string { return proto.CompactTextString(m) }
func (*UpdateChannelLinkReq) ProtoMessage()    {}
func (*UpdateChannelLinkReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{8}
}
func (m *UpdateChannelLinkReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateChannelLinkReq.Unmarshal(m, b)
}
func (m *UpdateChannelLinkReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateChannelLinkReq.Marshal(b, m, deterministic)
}
func (m *UpdateChannelLinkReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateChannelLinkReq.Merge(m, src)
}
func (m *UpdateChannelLinkReq) XXX_Size() int {
	return xxx_messageInfo_UpdateChannelLinkReq.Size(m)
}
func (m *UpdateChannelLinkReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateChannelLinkReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateChannelLinkReq proto.InternalMessageInfo

func (m *UpdateChannelLinkReq) GetChannelId() int64 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

func (m *UpdateChannelLinkReq) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

type UpdateChannelLinkResp struct {
	Link                 string   `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateChannelLinkResp) Reset()         { *m = UpdateChannelLinkResp{} }
func (m *UpdateChannelLinkResp) String() string { return proto.CompactTextString(m) }
func (*UpdateChannelLinkResp) ProtoMessage()    {}
func (*UpdateChannelLinkResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{9}
}
func (m *UpdateChannelLinkResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateChannelLinkResp.Unmarshal(m, b)
}
func (m *UpdateChannelLinkResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateChannelLinkResp.Marshal(b, m, deterministic)
}
func (m *UpdateChannelLinkResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateChannelLinkResp.Merge(m, src)
}
func (m *UpdateChannelLinkResp) XXX_Size() int {
	return xxx_messageInfo_UpdateChannelLinkResp.Size(m)
}
func (m *UpdateChannelLinkResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateChannelLinkResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateChannelLinkResp proto.InternalMessageInfo

func (m *UpdateChannelLinkResp) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

type CheckUserIsAdministratorReq struct {
	ChannelId            int64    `protobuf:"varint,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	UserId               int64    `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckUserIsAdministratorReq) Reset()         { *m = CheckUserIsAdministratorReq{} }
func (m *CheckUserIsAdministratorReq) String() string { return proto.CompactTextString(m) }
func (*CheckUserIsAdministratorReq) ProtoMessage()    {}
func (*CheckUserIsAdministratorReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{10}
}
func (m *CheckUserIsAdministratorReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckUserIsAdministratorReq.Unmarshal(m, b)
}
func (m *CheckUserIsAdministratorReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckUserIsAdministratorReq.Marshal(b, m, deterministic)
}
func (m *CheckUserIsAdministratorReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckUserIsAdministratorReq.Merge(m, src)
}
func (m *CheckUserIsAdministratorReq) XXX_Size() int {
	return xxx_messageInfo_CheckUserIsAdministratorReq.Size(m)
}
func (m *CheckUserIsAdministratorReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckUserIsAdministratorReq.DiscardUnknown(m)
}

var xxx_messageInfo_CheckUserIsAdministratorReq proto.InternalMessageInfo

func (m *CheckUserIsAdministratorReq) GetChannelId() int64 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

func (m *CheckUserIsAdministratorReq) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type CheckUserIsAdministratorResp struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckUserIsAdministratorResp) Reset()         { *m = CheckUserIsAdministratorResp{} }
func (m *CheckUserIsAdministratorResp) String() string { return proto.CompactTextString(m) }
func (*CheckUserIsAdministratorResp) ProtoMessage()    {}
func (*CheckUserIsAdministratorResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{11}
}
func (m *CheckUserIsAdministratorResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckUserIsAdministratorResp.Unmarshal(m, b)
}
func (m *CheckUserIsAdministratorResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckUserIsAdministratorResp.Marshal(b, m, deterministic)
}
func (m *CheckUserIsAdministratorResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckUserIsAdministratorResp.Merge(m, src)
}
func (m *CheckUserIsAdministratorResp) XXX_Size() int {
	return xxx_messageInfo_CheckUserIsAdministratorResp.Size(m)
}
func (m *CheckUserIsAdministratorResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckUserIsAdministratorResp.DiscardUnknown(m)
}

var xxx_messageInfo_CheckUserIsAdministratorResp proto.InternalMessageInfo

func (m *CheckUserIsAdministratorResp) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

type ChannelParticipantListReq struct {
	ChannelId            int64    `protobuf:"varint,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelParticipantListReq) Reset()         { *m = ChannelParticipantListReq{} }
func (m *ChannelParticipantListReq) String() string { return proto.CompactTextString(m) }
func (*ChannelParticipantListReq) ProtoMessage()    {}
func (*ChannelParticipantListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{12}
}
func (m *ChannelParticipantListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelParticipantListReq.Unmarshal(m, b)
}
func (m *ChannelParticipantListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelParticipantListReq.Marshal(b, m, deterministic)
}
func (m *ChannelParticipantListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelParticipantListReq.Merge(m, src)
}
func (m *ChannelParticipantListReq) XXX_Size() int {
	return xxx_messageInfo_ChannelParticipantListReq.Size(m)
}
func (m *ChannelParticipantListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelParticipantListReq.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelParticipantListReq proto.InternalMessageInfo

func (m *ChannelParticipantListReq) GetChannelId() int64 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

type ChannelParticipantListResp struct {
	Participants         []*mtproto.ChannelParticipant `protobuf:"bytes,1,rep,name=participants,proto3" json:"participants,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ChannelParticipantListResp) Reset()         { *m = ChannelParticipantListResp{} }
func (m *ChannelParticipantListResp) String() string { return proto.CompactTextString(m) }
func (*ChannelParticipantListResp) ProtoMessage()    {}
func (*ChannelParticipantListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{13}
}
func (m *ChannelParticipantListResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelParticipantListResp.Unmarshal(m, b)
}
func (m *ChannelParticipantListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelParticipantListResp.Marshal(b, m, deterministic)
}
func (m *ChannelParticipantListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelParticipantListResp.Merge(m, src)
}
func (m *ChannelParticipantListResp) XXX_Size() int {
	return xxx_messageInfo_ChannelParticipantListResp.Size(m)
}
func (m *ChannelParticipantListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelParticipantListResp.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelParticipantListResp proto.InternalMessageInfo

func (m *ChannelParticipantListResp) GetParticipants() []*mtproto.ChannelParticipant {
	if m != nil {
		return m.Participants
	}
	return nil
}

type GetChannelParticipantIdListResp struct {
	IdList               []int64  `protobuf:"varint,1,rep,packed,name=id_list,json=idList,proto3" json:"id_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetChannelParticipantIdListResp) Reset()         { *m = GetChannelParticipantIdListResp{} }
func (m *GetChannelParticipantIdListResp) String() string { return proto.CompactTextString(m) }
func (*GetChannelParticipantIdListResp) ProtoMessage()    {}
func (*GetChannelParticipantIdListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{14}
}
func (m *GetChannelParticipantIdListResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChannelParticipantIdListResp.Unmarshal(m, b)
}
func (m *GetChannelParticipantIdListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChannelParticipantIdListResp.Marshal(b, m, deterministic)
}
func (m *GetChannelParticipantIdListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChannelParticipantIdListResp.Merge(m, src)
}
func (m *GetChannelParticipantIdListResp) XXX_Size() int {
	return xxx_messageInfo_GetChannelParticipantIdListResp.Size(m)
}
func (m *GetChannelParticipantIdListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChannelParticipantIdListResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetChannelParticipantIdListResp proto.InternalMessageInfo

func (m *GetChannelParticipantIdListResp) GetIdList() []int64 {
	if m != nil {
		return m.IdList
	}
	return nil
}

type ChannelParticipantsReq struct {
	ChannelId            int64    `protobuf:"varint,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelParticipantsReq) Reset()         { *m = ChannelParticipantsReq{} }
func (m *ChannelParticipantsReq) String() string { return proto.CompactTextString(m) }
func (*ChannelParticipantsReq) ProtoMessage()    {}
func (*ChannelParticipantsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{15}
}
func (m *ChannelParticipantsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelParticipantsReq.Unmarshal(m, b)
}
func (m *ChannelParticipantsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelParticipantsReq.Marshal(b, m, deterministic)
}
func (m *ChannelParticipantsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelParticipantsReq.Merge(m, src)
}
func (m *ChannelParticipantsReq) XXX_Size() int {
	return xxx_messageInfo_ChannelParticipantsReq.Size(m)
}
func (m *ChannelParticipantsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelParticipantsReq.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelParticipantsReq proto.InternalMessageInfo

func (m *ChannelParticipantsReq) GetChannelId() int64 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

type GetChannelParticipantsResp struct {
	Participants         *mtproto.TLChannelsChannelParticipants `protobuf:"bytes,1,opt,name=participants,proto3" json:"participants,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *GetChannelParticipantsResp) Reset()         { *m = GetChannelParticipantsResp{} }
func (m *GetChannelParticipantsResp) String() string { return proto.CompactTextString(m) }
func (*GetChannelParticipantsResp) ProtoMessage()    {}
func (*GetChannelParticipantsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{16}
}
func (m *GetChannelParticipantsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChannelParticipantsResp.Unmarshal(m, b)
}
func (m *GetChannelParticipantsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChannelParticipantsResp.Marshal(b, m, deterministic)
}
func (m *GetChannelParticipantsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChannelParticipantsResp.Merge(m, src)
}
func (m *GetChannelParticipantsResp) XXX_Size() int {
	return xxx_messageInfo_GetChannelParticipantsResp.Size(m)
}
func (m *GetChannelParticipantsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChannelParticipantsResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetChannelParticipantsResp proto.InternalMessageInfo

func (m *GetChannelParticipantsResp) GetParticipants() *mtproto.TLChannelsChannelParticipants {
	if m != nil {
		return m.Participants
	}
	return nil
}

type AddChannelParticipantReq struct {
	Channel              *ChannelData `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	InviterId            int64        `protobuf:"varint,2,opt,name=inviterId,proto3" json:"inviterId,omitempty"`
	UserId               int64        `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
	IsAdmin              bool         `protobuf:"varint,4,opt,name=isAdmin,proto3" json:"isAdmin,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *AddChannelParticipantReq) Reset()         { *m = AddChannelParticipantReq{} }
func (m *AddChannelParticipantReq) String() string { return proto.CompactTextString(m) }
func (*AddChannelParticipantReq) ProtoMessage()    {}
func (*AddChannelParticipantReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{17}
}
func (m *AddChannelParticipantReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddChannelParticipantReq.Unmarshal(m, b)
}
func (m *AddChannelParticipantReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddChannelParticipantReq.Marshal(b, m, deterministic)
}
func (m *AddChannelParticipantReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddChannelParticipantReq.Merge(m, src)
}
func (m *AddChannelParticipantReq) XXX_Size() int {
	return xxx_messageInfo_AddChannelParticipantReq.Size(m)
}
func (m *AddChannelParticipantReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddChannelParticipantReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddChannelParticipantReq proto.InternalMessageInfo

func (m *AddChannelParticipantReq) GetChannel() *ChannelData {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *AddChannelParticipantReq) GetInviterId() int64 {
	if m != nil {
		return m.InviterId
	}
	return 0
}

func (m *AddChannelParticipantReq) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *AddChannelParticipantReq) GetIsAdmin() bool {
	if m != nil {
		return m.IsAdmin
	}
	return false
}

type ToChatReq struct {
	Channel              *ChannelData `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	SelfUserId           int64        `protobuf:"varint,2,opt,name=selfUserId,proto3" json:"selfUserId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ToChatReq) Reset()         { *m = ToChatReq{} }
func (m *ToChatReq) String() string { return proto.CompactTextString(m) }
func (*ToChatReq) ProtoMessage()    {}
func (*ToChatReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{18}
}
func (m *ToChatReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ToChatReq.Unmarshal(m, b)
}
func (m *ToChatReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ToChatReq.Marshal(b, m, deterministic)
}
func (m *ToChatReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ToChatReq.Merge(m, src)
}
func (m *ToChatReq) XXX_Size() int {
	return xxx_messageInfo_ToChatReq.Size(m)
}
func (m *ToChatReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ToChatReq.DiscardUnknown(m)
}

var xxx_messageInfo_ToChatReq proto.InternalMessageInfo

func (m *ToChatReq) GetChannel() *ChannelData {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *ToChatReq) GetSelfUserId() int64 {
	if m != nil {
		return m.SelfUserId
	}
	return 0
}

type ToChatResp struct {
	Chat                 *mtproto.Chat `protobuf:"bytes,1,opt,name=chat,proto3" json:"chat,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ToChatResp) Reset()         { *m = ToChatResp{} }
func (m *ToChatResp) String() string { return proto.CompactTextString(m) }
func (*ToChatResp) ProtoMessage()    {}
func (*ToChatResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{19}
}
func (m *ToChatResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ToChatResp.Unmarshal(m, b)
}
func (m *ToChatResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ToChatResp.Marshal(b, m, deterministic)
}
func (m *ToChatResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ToChatResp.Merge(m, src)
}
func (m *ToChatResp) XXX_Size() int {
	return xxx_messageInfo_ToChatResp.Size(m)
}
func (m *ToChatResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ToChatResp.DiscardUnknown(m)
}

var xxx_messageInfo_ToChatResp proto.InternalMessageInfo

func (m *ToChatResp) GetChat() *mtproto.Chat {
	if m != nil {
		return m.Chat
	}
	return nil
}

type CheckDeleteChannelUserReq struct {
	Channel              *ChannelData `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	OperatorId           int64        `protobuf:"varint,2,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
	DeleteUserId         int64        `protobuf:"varint,3,opt,name=deleteUserId,proto3" json:"deleteUserId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CheckDeleteChannelUserReq) Reset()         { *m = CheckDeleteChannelUserReq{} }
func (m *CheckDeleteChannelUserReq) String() string { return proto.CompactTextString(m) }
func (*CheckDeleteChannelUserReq) ProtoMessage()    {}
func (*CheckDeleteChannelUserReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{20}
}
func (m *CheckDeleteChannelUserReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckDeleteChannelUserReq.Unmarshal(m, b)
}
func (m *CheckDeleteChannelUserReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckDeleteChannelUserReq.Marshal(b, m, deterministic)
}
func (m *CheckDeleteChannelUserReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckDeleteChannelUserReq.Merge(m, src)
}
func (m *CheckDeleteChannelUserReq) XXX_Size() int {
	return xxx_messageInfo_CheckDeleteChannelUserReq.Size(m)
}
func (m *CheckDeleteChannelUserReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckDeleteChannelUserReq.DiscardUnknown(m)
}

var xxx_messageInfo_CheckDeleteChannelUserReq proto.InternalMessageInfo

func (m *CheckDeleteChannelUserReq) GetChannel() *ChannelData {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *CheckDeleteChannelUserReq) GetOperatorId() int64 {
	if m != nil {
		return m.OperatorId
	}
	return 0
}

func (m *CheckDeleteChannelUserReq) GetDeleteUserId() int64 {
	if m != nil {
		return m.DeleteUserId
	}
	return 0
}

type DeleteChannelUserReq struct {
	ChannelId            int64    `protobuf:"varint,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	OperatorId           int64    `protobuf:"varint,2,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
	DeleteUserId         int64    `protobuf:"varint,3,opt,name=deleteUserId,proto3" json:"deleteUserId,omitempty"`
	Reason               int32    `protobuf:"varint,4,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteChannelUserReq) Reset()         { *m = DeleteChannelUserReq{} }
func (m *DeleteChannelUserReq) String() string { return proto.CompactTextString(m) }
func (*DeleteChannelUserReq) ProtoMessage()    {}
func (*DeleteChannelUserReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{21}
}
func (m *DeleteChannelUserReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteChannelUserReq.Unmarshal(m, b)
}
func (m *DeleteChannelUserReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteChannelUserReq.Marshal(b, m, deterministic)
}
func (m *DeleteChannelUserReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteChannelUserReq.Merge(m, src)
}
func (m *DeleteChannelUserReq) XXX_Size() int {
	return xxx_messageInfo_DeleteChannelUserReq.Size(m)
}
func (m *DeleteChannelUserReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteChannelUserReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteChannelUserReq proto.InternalMessageInfo

func (m *DeleteChannelUserReq) GetChannelId() int64 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

func (m *DeleteChannelUserReq) GetOperatorId() int64 {
	if m != nil {
		return m.OperatorId
	}
	return 0
}

func (m *DeleteChannelUserReq) GetDeleteUserId() int64 {
	if m != nil {
		return m.DeleteUserId
	}
	return 0
}

func (m *DeleteChannelUserReq) GetReason() int32 {
	if m != nil {
		return m.Reason
	}
	return 0
}

type EditChannelTitleReq struct {
	ChannelId            int64    `protobuf:"varint,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	EditUserId           int64    `protobuf:"varint,2,opt,name=editUserId,proto3" json:"editUserId,omitempty"`
	Title                string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EditChannelTitleReq) Reset()         { *m = EditChannelTitleReq{} }
func (m *EditChannelTitleReq) String() string { return proto.CompactTextString(m) }
func (*EditChannelTitleReq) ProtoMessage()    {}
func (*EditChannelTitleReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{22}
}
func (m *EditChannelTitleReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EditChannelTitleReq.Unmarshal(m, b)
}
func (m *EditChannelTitleReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EditChannelTitleReq.Marshal(b, m, deterministic)
}
func (m *EditChannelTitleReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditChannelTitleReq.Merge(m, src)
}
func (m *EditChannelTitleReq) XXX_Size() int {
	return xxx_messageInfo_EditChannelTitleReq.Size(m)
}
func (m *EditChannelTitleReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EditChannelTitleReq.DiscardUnknown(m)
}

var xxx_messageInfo_EditChannelTitleReq proto.InternalMessageInfo

func (m *EditChannelTitleReq) GetChannelId() int64 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

func (m *EditChannelTitleReq) GetEditUserId() int64 {
	if m != nil {
		return m.EditUserId
	}
	return 0
}

func (m *EditChannelTitleReq) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type EditChannelPhotoReq struct {
	Channel              *ChannelData `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	EditUserId           int64        `protobuf:"varint,2,opt,name=editUserId,proto3" json:"editUserId,omitempty"`
	PhotoId              int64        `protobuf:"varint,3,opt,name=photoId,proto3" json:"photoId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *EditChannelPhotoReq) Reset()         { *m = EditChannelPhotoReq{} }
func (m *EditChannelPhotoReq) String() string { return proto.CompactTextString(m) }
func (*EditChannelPhotoReq) ProtoMessage()    {}
func (*EditChannelPhotoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{23}
}
func (m *EditChannelPhotoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EditChannelPhotoReq.Unmarshal(m, b)
}
func (m *EditChannelPhotoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EditChannelPhotoReq.Marshal(b, m, deterministic)
}
func (m *EditChannelPhotoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditChannelPhotoReq.Merge(m, src)
}
func (m *EditChannelPhotoReq) XXX_Size() int {
	return xxx_messageInfo_EditChannelPhotoReq.Size(m)
}
func (m *EditChannelPhotoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EditChannelPhotoReq.DiscardUnknown(m)
}

var xxx_messageInfo_EditChannelPhotoReq proto.InternalMessageInfo

func (m *EditChannelPhotoReq) GetChannel() *ChannelData {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *EditChannelPhotoReq) GetEditUserId() int64 {
	if m != nil {
		return m.EditUserId
	}
	return 0
}

func (m *EditChannelPhotoReq) GetPhotoId() int64 {
	if m != nil {
		return m.PhotoId
	}
	return 0
}

type EditChannelAdminReq struct {
	ChannelId            int64    `protobuf:"varint,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	OperatorId           int64    `protobuf:"varint,2,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
	EditChannelAdminId   int64    `protobuf:"varint,3,opt,name=editChannelAdminId,proto3" json:"editChannelAdminId,omitempty"`
	IsAdmin              bool     `protobuf:"varint,4,opt,name=isAdmin,proto3" json:"isAdmin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EditChannelAdminReq) Reset()         { *m = EditChannelAdminReq{} }
func (m *EditChannelAdminReq) String() string { return proto.CompactTextString(m) }
func (*EditChannelAdminReq) ProtoMessage()    {}
func (*EditChannelAdminReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{24}
}
func (m *EditChannelAdminReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EditChannelAdminReq.Unmarshal(m, b)
}
func (m *EditChannelAdminReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EditChannelAdminReq.Marshal(b, m, deterministic)
}
func (m *EditChannelAdminReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditChannelAdminReq.Merge(m, src)
}
func (m *EditChannelAdminReq) XXX_Size() int {
	return xxx_messageInfo_EditChannelAdminReq.Size(m)
}
func (m *EditChannelAdminReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EditChannelAdminReq.DiscardUnknown(m)
}

var xxx_messageInfo_EditChannelAdminReq proto.InternalMessageInfo

func (m *EditChannelAdminReq) GetChannelId() int64 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

func (m *EditChannelAdminReq) GetOperatorId() int64 {
	if m != nil {
		return m.OperatorId
	}
	return 0
}

func (m *EditChannelAdminReq) GetEditChannelAdminId() int64 {
	if m != nil {
		return m.EditChannelAdminId
	}
	return 0
}

func (m *EditChannelAdminReq) GetIsAdmin() bool {
	if m != nil {
		return m.IsAdmin
	}
	return false
}

type ToggleChannelAdminsReq struct {
	Channel              *ChannelData `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	UserId               int64        `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	AdminsEnabled        bool         `protobuf:"varint,3,opt,name=adminsEnabled,proto3" json:"adminsEnabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ToggleChannelAdminsReq) Reset()         { *m = ToggleChannelAdminsReq{} }
func (m *ToggleChannelAdminsReq) String() string { return proto.CompactTextString(m) }
func (*ToggleChannelAdminsReq) ProtoMessage()    {}
func (*ToggleChannelAdminsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{25}
}
func (m *ToggleChannelAdminsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ToggleChannelAdminsReq.Unmarshal(m, b)
}
func (m *ToggleChannelAdminsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ToggleChannelAdminsReq.Marshal(b, m, deterministic)
}
func (m *ToggleChannelAdminsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ToggleChannelAdminsReq.Merge(m, src)
}
func (m *ToggleChannelAdminsReq) XXX_Size() int {
	return xxx_messageInfo_ToggleChannelAdminsReq.Size(m)
}
func (m *ToggleChannelAdminsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ToggleChannelAdminsReq.DiscardUnknown(m)
}

var xxx_messageInfo_ToggleChannelAdminsReq proto.InternalMessageInfo

func (m *ToggleChannelAdminsReq) GetChannel() *ChannelData {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *ToggleChannelAdminsReq) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ToggleChannelAdminsReq) GetAdminsEnabled() bool {
	if m != nil {
		return m.AdminsEnabled
	}
	return false
}

// channel_util
type GetChatsListBySelfAndIDListReq struct {
	SelfUserId           int64    `protobuf:"varint,1,opt,name=selfUserId,proto3" json:"selfUserId,omitempty"`
	IdList               []int64  `protobuf:"varint,2,rep,packed,name=idList,proto3" json:"idList,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetChatsListBySelfAndIDListReq) Reset()         { *m = GetChatsListBySelfAndIDListReq{} }
func (m *GetChatsListBySelfAndIDListReq) String() string { return proto.CompactTextString(m) }
func (*GetChatsListBySelfAndIDListReq) ProtoMessage()    {}
func (*GetChatsListBySelfAndIDListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{26}
}
func (m *GetChatsListBySelfAndIDListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChatsListBySelfAndIDListReq.Unmarshal(m, b)
}
func (m *GetChatsListBySelfAndIDListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChatsListBySelfAndIDListReq.Marshal(b, m, deterministic)
}
func (m *GetChatsListBySelfAndIDListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChatsListBySelfAndIDListReq.Merge(m, src)
}
func (m *GetChatsListBySelfAndIDListReq) XXX_Size() int {
	return xxx_messageInfo_GetChatsListBySelfAndIDListReq.Size(m)
}
func (m *GetChatsListBySelfAndIDListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChatsListBySelfAndIDListReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetChatsListBySelfAndIDListReq proto.InternalMessageInfo

func (m *GetChatsListBySelfAndIDListReq) GetSelfUserId() int64 {
	if m != nil {
		return m.SelfUserId
	}
	return 0
}

func (m *GetChatsListBySelfAndIDListReq) GetIdList() []int64 {
	if m != nil {
		return m.IdList
	}
	return nil
}

type GetChatsListBySelfAndIDListResp struct {
	Chats                []*mtproto.Chat `protobuf:"bytes,1,rep,name=chats,proto3" json:"chats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetChatsListBySelfAndIDListResp) Reset()         { *m = GetChatsListBySelfAndIDListResp{} }
func (m *GetChatsListBySelfAndIDListResp) String() string { return proto.CompactTextString(m) }
func (*GetChatsListBySelfAndIDListResp) ProtoMessage()    {}
func (*GetChatsListBySelfAndIDListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{27}
}
func (m *GetChatsListBySelfAndIDListResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChatsListBySelfAndIDListResp.Unmarshal(m, b)
}
func (m *GetChatsListBySelfAndIDListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChatsListBySelfAndIDListResp.Marshal(b, m, deterministic)
}
func (m *GetChatsListBySelfAndIDListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChatsListBySelfAndIDListResp.Merge(m, src)
}
func (m *GetChatsListBySelfAndIDListResp) XXX_Size() int {
	return xxx_messageInfo_GetChatsListBySelfAndIDListResp.Size(m)
}
func (m *GetChatsListBySelfAndIDListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChatsListBySelfAndIDListResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetChatsListBySelfAndIDListResp proto.InternalMessageInfo

func (m *GetChatsListBySelfAndIDListResp) GetChats() []*mtproto.Chat {
	if m != nil {
		return m.Chats
	}
	return nil
}

type CheckChannelUserNameReq struct {
	ChannelId            int64    `protobuf:"varint,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	UserName             string   `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckChannelUserNameReq) Reset()         { *m = CheckChannelUserNameReq{} }
func (m *CheckChannelUserNameReq) String() string { return proto.CompactTextString(m) }
func (*CheckChannelUserNameReq) ProtoMessage()    {}
func (*CheckChannelUserNameReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{28}
}
func (m *CheckChannelUserNameReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckChannelUserNameReq.Unmarshal(m, b)
}
func (m *CheckChannelUserNameReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckChannelUserNameReq.Marshal(b, m, deterministic)
}
func (m *CheckChannelUserNameReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckChannelUserNameReq.Merge(m, src)
}
func (m *CheckChannelUserNameReq) XXX_Size() int {
	return xxx_messageInfo_CheckChannelUserNameReq.Size(m)
}
func (m *CheckChannelUserNameReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckChannelUserNameReq.DiscardUnknown(m)
}

var xxx_messageInfo_CheckChannelUserNameReq proto.InternalMessageInfo

func (m *CheckChannelUserNameReq) GetChannelId() int64 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

func (m *CheckChannelUserNameReq) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

type CheckChannelUserNameResp struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckChannelUserNameResp) Reset()         { *m = CheckChannelUserNameResp{} }
func (m *CheckChannelUserNameResp) String() string { return proto.CompactTextString(m) }
func (*CheckChannelUserNameResp) ProtoMessage()    {}
func (*CheckChannelUserNameResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{29}
}
func (m *CheckChannelUserNameResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckChannelUserNameResp.Unmarshal(m, b)
}
func (m *CheckChannelUserNameResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckChannelUserNameResp.Marshal(b, m, deterministic)
}
func (m *CheckChannelUserNameResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckChannelUserNameResp.Merge(m, src)
}
func (m *CheckChannelUserNameResp) XXX_Size() int {
	return xxx_messageInfo_CheckChannelUserNameResp.Size(m)
}
func (m *CheckChannelUserNameResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckChannelUserNameResp.DiscardUnknown(m)
}

var xxx_messageInfo_CheckChannelUserNameResp proto.InternalMessageInfo

func (m *CheckChannelUserNameResp) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

type GetChannelBySelfIDReq struct {
	SelfUserId           int64    `protobuf:"varint,1,opt,name=selfUserId,proto3" json:"selfUserId,omitempty"`
	ChannelId            int64    `protobuf:"varint,2,opt,name=channelId,proto3" json:"channelId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetChannelBySelfIDReq) Reset()         { *m = GetChannelBySelfIDReq{} }
func (m *GetChannelBySelfIDReq) String() string { return proto.CompactTextString(m) }
func (*GetChannelBySelfIDReq) ProtoMessage()    {}
func (*GetChannelBySelfIDReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{30}
}
func (m *GetChannelBySelfIDReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChannelBySelfIDReq.Unmarshal(m, b)
}
func (m *GetChannelBySelfIDReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChannelBySelfIDReq.Marshal(b, m, deterministic)
}
func (m *GetChannelBySelfIDReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChannelBySelfIDReq.Merge(m, src)
}
func (m *GetChannelBySelfIDReq) XXX_Size() int {
	return xxx_messageInfo_GetChannelBySelfIDReq.Size(m)
}
func (m *GetChannelBySelfIDReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChannelBySelfIDReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetChannelBySelfIDReq proto.InternalMessageInfo

func (m *GetChannelBySelfIDReq) GetSelfUserId() int64 {
	if m != nil {
		return m.SelfUserId
	}
	return 0
}

func (m *GetChannelBySelfIDReq) GetChannelId() int64 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

type GetChannelBySelfIDResp struct {
	Chat                 *mtproto.Chat `protobuf:"bytes,1,opt,name=chat,proto3" json:"chat,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetChannelBySelfIDResp) Reset()         { *m = GetChannelBySelfIDResp{} }
func (m *GetChannelBySelfIDResp) String() string { return proto.CompactTextString(m) }
func (*GetChannelBySelfIDResp) ProtoMessage()    {}
func (*GetChannelBySelfIDResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{31}
}
func (m *GetChannelBySelfIDResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChannelBySelfIDResp.Unmarshal(m, b)
}
func (m *GetChannelBySelfIDResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChannelBySelfIDResp.Marshal(b, m, deterministic)
}
func (m *GetChannelBySelfIDResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChannelBySelfIDResp.Merge(m, src)
}
func (m *GetChannelBySelfIDResp) XXX_Size() int {
	return xxx_messageInfo_GetChannelBySelfIDResp.Size(m)
}
func (m *GetChannelBySelfIDResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChannelBySelfIDResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetChannelBySelfIDResp proto.InternalMessageInfo

func (m *GetChannelBySelfIDResp) GetChat() *mtproto.Chat {
	if m != nil {
		return m.Chat
	}
	return nil
}

type GetChannelParticipantIdListDaoReq struct {
	ChannelId            int64    `protobuf:"varint,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetChannelParticipantIdListDaoReq) Reset()         { *m = GetChannelParticipantIdListDaoReq{} }
func (m *GetChannelParticipantIdListDaoReq) String() string { return proto.CompactTextString(m) }
func (*GetChannelParticipantIdListDaoReq) ProtoMessage()    {}
func (*GetChannelParticipantIdListDaoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{32}
}
func (m *GetChannelParticipantIdListDaoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChannelParticipantIdListDaoReq.Unmarshal(m, b)
}
func (m *GetChannelParticipantIdListDaoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChannelParticipantIdListDaoReq.Marshal(b, m, deterministic)
}
func (m *GetChannelParticipantIdListDaoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChannelParticipantIdListDaoReq.Merge(m, src)
}
func (m *GetChannelParticipantIdListDaoReq) XXX_Size() int {
	return xxx_messageInfo_GetChannelParticipantIdListDaoReq.Size(m)
}
func (m *GetChannelParticipantIdListDaoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChannelParticipantIdListDaoReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetChannelParticipantIdListDaoReq proto.InternalMessageInfo

func (m *GetChannelParticipantIdListDaoReq) GetChannelId() int64 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

type GetChannelParticipantIdListDaoResp struct {
	IdList               []int64  `protobuf:"varint,1,rep,packed,name=idList,proto3" json:"idList,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetChannelParticipantIdListDaoResp) Reset()         { *m = GetChannelParticipantIdListDaoResp{} }
func (m *GetChannelParticipantIdListDaoResp) String() string { return proto.CompactTextString(m) }
func (*GetChannelParticipantIdListDaoResp) ProtoMessage()    {}
func (*GetChannelParticipantIdListDaoResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{33}
}
func (m *GetChannelParticipantIdListDaoResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChannelParticipantIdListDaoResp.Unmarshal(m, b)
}
func (m *GetChannelParticipantIdListDaoResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChannelParticipantIdListDaoResp.Marshal(b, m, deterministic)
}
func (m *GetChannelParticipantIdListDaoResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChannelParticipantIdListDaoResp.Merge(m, src)
}
func (m *GetChannelParticipantIdListDaoResp) XXX_Size() int {
	return xxx_messageInfo_GetChannelParticipantIdListDaoResp.Size(m)
}
func (m *GetChannelParticipantIdListDaoResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChannelParticipantIdListDaoResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetChannelParticipantIdListDaoResp proto.InternalMessageInfo

func (m *GetChannelParticipantIdListDaoResp) GetIdList() []int64 {
	if m != nil {
		return m.IdList
	}
	return nil
}

type GetChannelFullBySelfIdReq struct {
	ChannelData          *ChannelData `protobuf:"bytes,1,opt,name=channelData,proto3" json:"channelData,omitempty"`
	SelfUserId           int64        `protobuf:"varint,2,opt,name=selfUserId,proto3" json:"selfUserId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetChannelFullBySelfIdReq) Reset()         { *m = GetChannelFullBySelfIdReq{} }
func (m *GetChannelFullBySelfIdReq) String() string { return proto.CompactTextString(m) }
func (*GetChannelFullBySelfIdReq) ProtoMessage()    {}
func (*GetChannelFullBySelfIdReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{34}
}
func (m *GetChannelFullBySelfIdReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChannelFullBySelfIdReq.Unmarshal(m, b)
}
func (m *GetChannelFullBySelfIdReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChannelFullBySelfIdReq.Marshal(b, m, deterministic)
}
func (m *GetChannelFullBySelfIdReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChannelFullBySelfIdReq.Merge(m, src)
}
func (m *GetChannelFullBySelfIdReq) XXX_Size() int {
	return xxx_messageInfo_GetChannelFullBySelfIdReq.Size(m)
}
func (m *GetChannelFullBySelfIdReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChannelFullBySelfIdReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetChannelFullBySelfIdReq proto.InternalMessageInfo

func (m *GetChannelFullBySelfIdReq) GetChannelData() *ChannelData {
	if m != nil {
		return m.ChannelData
	}
	return nil
}

func (m *GetChannelFullBySelfIdReq) GetSelfUserId() int64 {
	if m != nil {
		return m.SelfUserId
	}
	return 0
}

type GetChannelFullBySelfIdResp struct {
	Channel              *mtproto.TLChannelFull `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetChannelFullBySelfIdResp) Reset()         { *m = GetChannelFullBySelfIdResp{} }
func (m *GetChannelFullBySelfIdResp) String() string { return proto.CompactTextString(m) }
func (*GetChannelFullBySelfIdResp) ProtoMessage()    {}
func (*GetChannelFullBySelfIdResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{35}
}
func (m *GetChannelFullBySelfIdResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChannelFullBySelfIdResp.Unmarshal(m, b)
}
func (m *GetChannelFullBySelfIdResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChannelFullBySelfIdResp.Marshal(b, m, deterministic)
}
func (m *GetChannelFullBySelfIdResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChannelFullBySelfIdResp.Merge(m, src)
}
func (m *GetChannelFullBySelfIdResp) XXX_Size() int {
	return xxx_messageInfo_GetChannelFullBySelfIdResp.Size(m)
}
func (m *GetChannelFullBySelfIdResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChannelFullBySelfIdResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetChannelFullBySelfIdResp proto.InternalMessageInfo

func (m *GetChannelFullBySelfIdResp) GetChannel() *mtproto.TLChannelFull {
	if m != nil {
		return m.Channel
	}
	return nil
}

func init() {
	proto.RegisterType((*Void)(nil), "channels.Void")
	proto.RegisterType((*ChannelParticipant)(nil), "channels.ChannelParticipant")
	proto.RegisterType((*Channel)(nil), "channels.Channel")
	proto.RegisterType((*MakeChannelParticipant2ByDOReq)(nil), "channels.MakeChannelParticipant2ByDOReq")
	proto.RegisterType((*ChannelParticipantRes)(nil), "channels.ChannelParticipantRes")
	proto.RegisterType((*ChannelDataByIdReq)(nil), "channels.ChannelDataByIdReq")
	proto.RegisterType((*CreateNewChannelReq)(nil), "channels.CreateNewChannelReq")
	proto.RegisterType((*ChannelData)(nil), "channels.ChannelData")
	proto.RegisterType((*UpdateChannelLinkReq)(nil), "channels.UpdateChannelLinkReq")
	proto.RegisterType((*UpdateChannelLinkResp)(nil), "channels.UpdateChannelLinkResp")
	proto.RegisterType((*CheckUserIsAdministratorReq)(nil), "channels.CheckUserIsAdministratorReq")
	proto.RegisterType((*CheckUserIsAdministratorResp)(nil), "channels.CheckUserIsAdministratorResp")
	proto.RegisterType((*ChannelParticipantListReq)(nil), "channels.ChannelParticipantListReq")
	proto.RegisterType((*ChannelParticipantListResp)(nil), "channels.ChannelParticipantListResp")
	proto.RegisterType((*GetChannelParticipantIdListResp)(nil), "channels.GetChannelParticipantIdListResp")
	proto.RegisterType((*ChannelParticipantsReq)(nil), "channels.ChannelParticipantsReq")
	proto.RegisterType((*GetChannelParticipantsResp)(nil), "channels.GetChannelParticipantsResp")
	proto.RegisterType((*AddChannelParticipantReq)(nil), "channels.AddChannelParticipantReq")
	proto.RegisterType((*ToChatReq)(nil), "channels.ToChatReq")
	proto.RegisterType((*ToChatResp)(nil), "channels.ToChatResp")
	proto.RegisterType((*CheckDeleteChannelUserReq)(nil), "channels.CheckDeleteChannelUserReq")
	proto.RegisterType((*DeleteChannelUserReq)(nil), "channels.DeleteChannelUserReq")
	proto.RegisterType((*EditChannelTitleReq)(nil), "channels.EditChannelTitleReq")
	proto.RegisterType((*EditChannelPhotoReq)(nil), "channels.EditChannelPhotoReq")
	proto.RegisterType((*EditChannelAdminReq)(nil), "channels.EditChannelAdminReq")
	proto.RegisterType((*ToggleChannelAdminsReq)(nil), "channels.ToggleChannelAdminsReq")
	proto.RegisterType((*GetChatsListBySelfAndIDListReq)(nil), "channels.GetChatsListBySelfAndIDListReq")
	proto.RegisterType((*GetChatsListBySelfAndIDListResp)(nil), "channels.GetChatsListBySelfAndIDListResp")
	proto.RegisterType((*CheckChannelUserNameReq)(nil), "channels.CheckChannelUserNameReq")
	proto.RegisterType((*CheckChannelUserNameResp)(nil), "channels.CheckChannelUserNameResp")
	proto.RegisterType((*GetChannelBySelfIDReq)(nil), "channels.GetChannelBySelfIDReq")
	proto.RegisterType((*GetChannelBySelfIDResp)(nil), "channels.GetChannelBySelfIDResp")
	proto.RegisterType((*GetChannelParticipantIdListDaoReq)(nil), "channels.GetChannelParticipantIdListDaoReq")
	proto.RegisterType((*GetChannelParticipantIdListDaoResp)(nil), "channels.GetChannelParticipantIdListDaoResp")
	proto.RegisterType((*GetChannelFullBySelfIdReq)(nil), "channels.GetChannelFullBySelfIdReq")
	proto.RegisterType((*GetChannelFullBySelfIdResp)(nil), "channels.GetChannelFullBySelfIdResp")
}

func init() { proto.RegisterFile("channels.proto", fileDescriptor_6eb5b11d5b15e5ec) }

var fileDescriptor_6eb5b11d5b15e5ec = []byte{
	// 1595 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x58, 0x5b, 0x6f, 0x1b, 0x45,
	0x14, 0x96, 0x73, 0xf1, 0xe5, 0x38, 0xd7, 0xc9, 0xa5, 0xdb, 0x4d, 0x9a, 0xb8, 0xdb, 0x36, 0x4a,
	0x15, 0x94, 0xa2, 0x54, 0x2a, 0x82, 0x72, 0x73, 0x92, 0x5e, 0x0c, 0xa5, 0x54, 0xdb, 0xa4, 0x20,
	0x44, 0x65, 0xb6, 0xde, 0x49, 0xbd, 0xc4, 0xd9, 0xdd, 0x7a, 0x26, 0x85, 0x08, 0x1e, 0x10, 0x2f,
	0xbc, 0xf2, 0x8e, 0xf8, 0x13, 0xfc, 0x1a, 0xfe, 0x08, 0xef, 0x68, 0x6e, 0xde, 0xd9, 0xdd, 0xf1,
	0xda, 0x0a, 0xbc, 0x79, 0xce, 0x39, 0x73, 0xce, 0x99, 0x73, 0xfd, 0xd6, 0x30, 0xd7, 0xe9, 0x7a,
	0x61, 0x88, 0x7b, 0x64, 0x37, 0xee, 0x47, 0x34, 0x42, 0x55, 0x75, 0xb6, 0x67, 0xcf, 0x2e, 0xda,
	0xf4, 0x22, 0xc6, 0x82, 0xe1, 0x94, 0x61, 0xea, 0x45, 0x14, 0xf8, 0xce, 0x5f, 0x93, 0x80, 0x0e,
	0x84, 0xcc, 0x33, 0xaf, 0x4f, 0x83, 0x4e, 0x10, 0x7b, 0x21, 0x45, 0x73, 0x30, 0x11, 0xf8, 0x56,
	0xa9, 0x51, 0xda, 0x9e, 0x74, 0x27, 0x02, 0x1f, 0x5d, 0x03, 0x90, 0x9a, 0xda, 0x81, 0x6f, 0x4d,
	0x70, 0x7a, 0x4d, 0x52, 0x5a, 0x3e, 0xba, 0x02, 0x95, 0x73, 0x82, 0xfb, 0x8c, 0x37, 0xc9, 0x79,
	0x65, 0x76, 0x6c, 0xf9, 0xe8, 0x36, 0x2c, 0xc4, 0x89, 0x5a, 0xee, 0x80, 0x35, 0xd5, 0x28, 0x6d,
	0x4f, 0xbb, 0xf3, 0x1a, 0xfd, 0xe8, 0x22, 0xc6, 0x68, 0x0b, 0xe6, 0x83, 0xf0, 0x6d, 0x40, 0x71,
	0xbf, 0xad, 0x74, 0x4d, 0x73, 0x5d, 0xb3, 0x92, 0x7c, 0x2c, 0x54, 0x5e, 0x03, 0x10, 0x04, 0xbf,
	0xed, 0x51, 0xab, 0xcc, 0x95, 0xd5, 0x24, 0xa5, 0x49, 0xd1, 0x1a, 0xd4, 0xbe, 0x8f, 0x82, 0x50,
	0x70, 0x2b, 0x9c, 0x5b, 0x15, 0x84, 0x26, 0x45, 0xcb, 0x30, 0x4d, 0xa8, 0x47, 0xb1, 0x55, 0xe5,
	0x0c, 0x71, 0xe0, 0x8f, 0xeb, 0x63, 0x4f, 0x6a, 0xac, 0x35, 0x4a, 0xdb, 0x35, 0xb7, 0x26, 0x29,
	0x4d, 0xca, 0xd8, 0xe7, 0xb1, 0xaf, 0xd8, 0x20, 0xd8, 0x92, 0x22, 0x0c, 0x9e, 0x06, 0x9d, 0x53,
	0xc1, 0xad, 0x0b, 0x83, 0x82, 0xd0, 0xa4, 0x2c, 0x30, 0x3d, 0x7c, 0x42, 0x19, 0x6b, 0x86, 0xb3,
	0xca, 0xec, 0xd8, 0xa4, 0xe8, 0x3e, 0xcc, 0x78, 0xfe, 0x59, 0x10, 0xb6, 0xfb, 0xc1, 0xeb, 0x2e,
	0x25, 0xd6, 0x6c, 0xa3, 0xb4, 0x5d, 0xdf, 0xb3, 0x76, 0xcf, 0x28, 0xcf, 0xcf, 0xee, 0x41, 0xd7,
	0xa3, 0x4d, 0x26, 0xe0, 0x72, 0xbe, 0x5b, 0xf7, 0x92, 0x83, 0xf3, 0xf7, 0x24, 0x54, 0x64, 0xd2,
	0x72, 0x99, 0xda, 0x82, 0x79, 0xee, 0x7a, 0x94, 0x84, 0x51, 0xa4, 0x6b, 0x56, 0x92, 0x65, 0x18,
	0x37, 0xa1, 0xee, 0x75, 0x3a, 0x98, 0x90, 0x76, 0xd7, 0x23, 0x5d, 0x99, 0x36, 0x10, 0xa4, 0xc7,
	0x1e, 0xe9, 0xb2, 0x77, 0xf5, 0xbd, 0xd0, 0x8f, 0xce, 0x98, 0x8a, 0x29, 0xce, 0xae, 0x0a, 0x42,
	0xcb, 0x47, 0x3b, 0xb0, 0xa8, 0xe7, 0xb5, 0x13, 0x9d, 0x87, 0x94, 0xa7, 0x6b, 0xda, 0xd5, 0x13,
	0x7e, 0xc0, 0xe8, 0x2c, 0xea, 0x34, 0xa0, 0x3d, 0xcc, 0x93, 0x55, 0x73, 0xc5, 0x81, 0x51, 0xbd,
	0x57, 0xd1, 0xb9, 0x48, 0x52, 0xcd, 0x15, 0x07, 0x74, 0x15, 0xaa, 0x71, 0x37, 0xa2, 0x11, 0x33,
	0x5a, 0xe5, 0x46, 0x2b, 0xfc, 0xdc, 0xf2, 0x11, 0x82, 0xa9, 0x5e, 0x10, 0x9e, 0xca, 0x04, 0xf1,
	0xdf, 0xc8, 0x86, 0x2a, 0x7b, 0x65, 0xe8, 0x9d, 0x61, 0x99, 0x99, 0xc1, 0x19, 0xdd, 0x82, 0x39,
	0x1e, 0x34, 0xd2, 0xc6, 0xa1, 0xf7, 0xaa, 0x87, 0x7d, 0x9e, 0x9d, 0xaa, 0x3b, 0x2b, 0xa8, 0x0f,
	0x04, 0x11, 0x35, 0xa0, 0xee, 0x63, 0xaf, 0x43, 0x83, 0xb7, 0x2c, 0xa1, 0x3c, 0x4d, 0x55, 0x57,
	0x27, 0x21, 0x0b, 0x2a, 0x6f, 0x71, 0x9f, 0x04, 0x51, 0xc8, 0xd3, 0x34, 0xed, 0xaa, 0x23, 0x73,
	0x89, 0x95, 0x81, 0x35, 0xc7, 0xc9, 0xfc, 0x77, 0xa6, 0x9a, 0xe6, 0x8b, 0xab, 0x69, 0x21, 0x53,
	0x4d, 0xce, 0x8f, 0xb0, 0xf1, 0x85, 0x77, 0x8a, 0xf3, 0x2d, 0xb9, 0xb7, 0x7f, 0x71, 0xf8, 0xa5,
	0x8b, 0xdf, 0xa0, 0x8f, 0xa1, 0xae, 0x45, 0x98, 0x67, 0xbe, 0xbe, 0xb7, 0xbe, 0x3b, 0x68, 0xfc,
	0xfc, 0x55, 0x57, 0xbf, 0x80, 0x56, 0xa1, 0x4c, 0x70, 0xef, 0xa4, 0xa5, 0xea, 0x42, 0x9e, 0x9c,
	0x17, 0xb0, 0x62, 0xb8, 0x8a, 0x09, 0xfa, 0xc8, 0x64, 0x70, 0x4d, 0xaf, 0xd4, 0x22, 0x7b, 0xce,
	0xde, 0x60, 0xc0, 0x1c, 0x7a, 0xd4, 0xdb, 0xbf, 0x68, 0xf9, 0xec, 0x15, 0xeb, 0x90, 0x8c, 0x0f,
	0x59, 0xbd, 0x09, 0xc1, 0xf9, 0xb5, 0x04, 0x4b, 0x07, 0x3c, 0x64, 0x4f, 0xf1, 0x0f, 0xf2, 0x36,
	0xbb, 0xa5, 0x62, 0x1b, 0xf1, 0xba, 0x56, 0xd7, 0x04, 0xa5, 0xc5, 0x52, 0x39, 0x23, 0x6b, 0xbe,
	0xdd, 0x0b, 0x08, 0xb5, 0x26, 0x1a, 0x93, 0xac, 0xa8, 0xc5, 0x2c, 0x7a, 0x12, 0x10, 0xad, 0x14,
	0x27, 0x8d, 0xa5, 0x38, 0xa5, 0x95, 0xa2, 0xf3, 0x33, 0xd4, 0x35, 0xc7, 0xd1, 0x0e, 0x54, 0xa4,
	0x83, 0x32, 0x04, 0x8b, 0xb9, 0x98, 0xbb, 0x4a, 0x02, 0x7d, 0x0a, 0x33, 0x5a, 0x0c, 0x08, 0xf7,
	0x64, 0x54, 0x96, 0x52, 0x37, 0x9c, 0xc7, 0xb0, 0x7c, 0xcc, 0xab, 0x42, 0x4a, 0x3e, 0x09, 0xc2,
	0xd3, 0x91, 0x81, 0x1b, 0xf4, 0xc8, 0x44, 0xd2, 0x23, 0xce, 0x0e, 0xac, 0x18, 0x34, 0x91, 0x78,
	0x20, 0x5c, 0xd2, 0x84, 0x8f, 0x60, 0xed, 0xa0, 0x8b, 0x3b, 0xa7, 0x7c, 0x4a, 0x10, 0x3e, 0x81,
	0x02, 0x42, 0xfb, 0x2c, 0xc0, 0xa3, 0xad, 0x6b, 0x6b, 0x60, 0x42, 0x5f, 0x03, 0xce, 0x3d, 0x58,
	0x1f, 0xae, 0x95, 0xc4, 0xbc, 0x26, 0xa9, 0x47, 0xcf, 0x09, 0xd7, 0x59, 0x75, 0xe5, 0xc9, 0x79,
	0x1f, 0xae, 0xe6, 0x03, 0xc5, 0x12, 0x39, 0xba, 0x84, 0x5e, 0x82, 0x3d, 0xec, 0x2a, 0x89, 0xd1,
	0x27, 0x99, 0xfc, 0x94, 0x78, 0x7e, 0x0a, 0x8b, 0x3a, 0x9d, 0x9e, 0x0f, 0x60, 0xf3, 0x11, 0xa6,
	0x79, 0x31, 0x51, 0x67, 0xdc, 0xc6, 0x15, 0xa8, 0xa8, 0x42, 0x2c, 0xf1, 0x42, 0x2c, 0x07, 0x9c,
	0xe9, 0xdc, 0x83, 0xd5, 0xfc, 0x45, 0x32, 0xfa, 0x49, 0x5d, 0xb0, 0x8d, 0x36, 0x09, 0x37, 0xf7,
	0x59, 0xee, 0x49, 0xac, 0x48, 0xb7, 0x06, 0x4f, 0x3a, 0x7a, 0x22, 0x6f, 0x12, 0x93, 0x86, 0xf4,
	0xeb, 0xfe, 0x28, 0x81, 0xd5, 0xf4, 0x7d, 0xd3, 0x3c, 0x78, 0x83, 0xee, 0x64, 0x1b, 0x61, 0x25,
	0x57, 0xd6, 0xac, 0x61, 0x92, 0x66, 0x58, 0x07, 0xb9, 0x9f, 0xfb, 0x83, 0xa1, 0x93, 0x10, 0x58,
	0xee, 0x45, 0x95, 0x64, 0xa0, 0x83, 0x05, 0x95, 0x40, 0x94, 0x0a, 0x6f, 0xcb, 0xaa, 0xab, 0x8e,
	0xce, 0xb7, 0x50, 0x3b, 0x8a, 0xd8, 0x82, 0xbc, 0x94, 0x37, 0x1b, 0x00, 0x6c, 0xe2, 0x89, 0x35,
	0x28, 0xdd, 0xd1, 0x28, 0xce, 0x1d, 0x00, 0xa5, 0x9d, 0xc4, 0xe8, 0x3a, 0x4c, 0x75, 0xba, 0x9e,
	0x9a, 0x7a, 0xb3, 0xa9, 0xfd, 0xec, 0x72, 0x96, 0xf3, 0x7b, 0x89, 0x55, 0x29, 0xee, 0x9c, 0x1e,
	0xe2, 0x1e, 0x1e, 0x74, 0x19, 0xd3, 0x76, 0x59, 0xff, 0xa2, 0x18, 0xf7, 0xc5, 0x48, 0x53, 0xfe,
	0x25, 0x14, 0xe4, 0xc0, 0x8c, 0xcf, 0x0d, 0x1d, 0xeb, 0x51, 0x4b, 0xd1, 0x98, 0x4b, 0xcb, 0x46,
	0x6f, 0x8a, 0xfb, 0xf7, 0x7f, 0x30, 0xcd, 0xd2, 0xd9, 0xc7, 0x1e, 0x89, 0x42, 0x89, 0xf3, 0xe4,
	0xc9, 0x09, 0x60, 0xe9, 0x81, 0x1f, 0xa8, 0xea, 0x3d, 0x62, 0x73, 0x77, 0x2c, 0x87, 0xb0, 0x1f,
	0xd0, 0x74, 0xae, 0x12, 0x8a, 0x79, 0x9c, 0x3b, 0xbf, 0x94, 0x52, 0xb6, 0x9e, 0x31, 0xfc, 0x70,
	0xd9, 0x54, 0x14, 0x9a, 0xb7, 0x40, 0x81, 0x13, 0x19, 0x0a, 0x75, 0x74, 0xfe, 0x4c, 0xbb, 0x20,
	0x90, 0xdc, 0x7f, 0x8e, 0xff, 0x2e, 0x20, 0x9c, 0x51, 0x3a, 0x30, 0x6d, 0xe0, 0x14, 0xb4, 0xd0,
	0x6f, 0x25, 0x58, 0x3d, 0x8a, 0x5e, 0xbf, 0xee, 0x61, 0xfd, 0x0a, 0xb9, 0x54, 0x94, 0x92, 0x06,
	0x4e, 0x0d, 0x7d, 0x74, 0x13, 0xd2, 0x48, 0x8b, 0x3b, 0x9a, 0x85, 0x5f, 0xce, 0xd7, 0xb0, 0x21,
	0x86, 0x1a, 0x25, 0x6c, 0x38, 0xee, 0x5f, 0x3c, 0xc7, 0xbd, 0x93, 0x66, 0xe8, 0xb7, 0x0e, 0xd5,
	0x9c, 0x4f, 0x37, 0x6c, 0x29, 0xdb, 0xb0, 0xcc, 0xbe, 0x18, 0xac, 0x72, 0xdf, 0xab, 0x31, 0xfb,
	0x50, 0x8d, 0xe8, 0x21, 0x9a, 0x49, 0x8c, 0x6e, 0xc0, 0x34, 0x6b, 0x61, 0x35, 0xff, 0x33, 0xed,
	0x2d, 0x78, 0xce, 0x73, 0xb8, 0xc2, 0xdb, 0x5b, 0x6b, 0xa5, 0xa7, 0xde, 0xd9, 0x18, 0xd5, 0x2b,
	0xc1, 0x29, 0x13, 0x96, 0x0b, 0x79, 0x70, 0x76, 0xf6, 0xc0, 0x32, 0x2b, 0x2d, 0xd8, 0x86, 0xc7,
	0xb0, 0x92, 0xcc, 0x7f, 0xf1, 0x9c, 0xd6, 0xe1, 0x38, 0x11, 0x4a, 0xb9, 0x99, 0xfd, 0x78, 0x73,
	0xee, 0xc3, 0xaa, 0x49, 0xed, 0x78, 0xc3, 0xaf, 0x09, 0xd7, 0x0b, 0xf6, 0xe0, 0xa1, 0x17, 0x8d,
	0x5e, 0x6b, 0x1f, 0x82, 0x33, 0x4a, 0x85, 0x08, 0x8a, 0xcc, 0x72, 0x7a, 0x99, 0x52, 0xb8, 0x9a,
	0xdc, 0x7e, 0x78, 0xde, 0x53, 0x2f, 0xe0, 0x28, 0xf3, 0x3d, 0xa8, 0x77, 0x92, 0x92, 0x2d, 0xae,
	0x67, 0x5d, 0x72, 0xe4, 0x92, 0x78, 0xaa, 0xaf, 0xe2, 0xb4, 0x55, 0x12, 0xa3, 0x77, 0xb3, 0x2d,
	0xb4, 0x9a, 0xdf, 0xc2, 0xec, 0xd2, 0xa0, 0x87, 0xf6, 0xfe, 0x99, 0x81, 0xba, 0xfb, 0xec, 0x40,
	0x6d, 0x68, 0xd4, 0x02, 0x94, 0xe8, 0x57, 0xb8, 0x19, 0xad, 0x1b, 0x3d, 0x97, 0x90, 0xda, 0x36,
	0xbf, 0x0b, 0x3d, 0x86, 0x85, 0x2c, 0x94, 0x46, 0xd7, 0x34, 0xd1, 0x3c, 0xcc, 0x1e, 0xa6, 0xe9,
	0x73, 0x58, 0x31, 0x82, 0x02, 0xe4, 0x24, 0xf2, 0xc3, 0x50, 0x83, 0x3d, 0x97, 0xc8, 0xbc, 0x88,
	0x02, 0x1f, 0xf5, 0x61, 0xad, 0xa0, 0x3b, 0xd1, 0x76, 0x22, 0x5e, 0x3c, 0x1e, 0xec, 0xdb, 0x63,
	0x4a, 0x92, 0x18, 0x75, 0xf4, 0x4a, 0xd7, 0xb3, 0x86, 0x6e, 0x64, 0x95, 0x18, 0xaa, 0xc9, 0xbe,
	0x39, 0x5a, 0x88, 0xc4, 0xe8, 0x44, 0x2f, 0xc8, 0x0c, 0xf6, 0xd4, 0xed, 0x0c, 0x05, 0xb6, 0xba,
	0x9d, 0x02, 0x08, 0xfb, 0x9d, 0xfe, 0x18, 0x1d, 0xcb, 0xa1, 0x46, 0xd1, 0x7d, 0x32, 0xf4, 0x25,
	0x39, 0x44, 0x79, 0x17, 0xca, 0x02, 0x09, 0xa1, 0xa5, 0x44, 0x7e, 0x80, 0xbc, 0xec, 0xe5, 0x3c,
	0x91, 0xc4, 0xe8, 0x25, 0x2c, 0x9b, 0x06, 0x1b, 0xba, 0xae, 0x3b, 0x65, 0x9c, 0xa6, 0xb6, 0x33,
	0x4a, 0x84, 0xc4, 0xe8, 0x08, 0x16, 0x73, 0x1f, 0x33, 0x68, 0x23, 0xb9, 0x68, 0xfa, 0x66, 0xb2,
	0x37, 0x0b, 0xf9, 0x24, 0x46, 0x81, 0x9c, 0xc6, 0x86, 0xef, 0x13, 0x74, 0x2b, 0xe3, 0x95, 0xf9,
	0xcb, 0xc8, 0xde, 0x1a, 0x47, 0x8c, 0xc4, 0xa8, 0x09, 0x0b, 0x59, 0x60, 0xa0, 0xb7, 0xa3, 0x01,
	0x34, 0xe4, 0x5a, 0xe7, 0x00, 0x16, 0x73, 0xe0, 0x4e, 0x8f, 0x81, 0x09, 0xf9, 0xe5, 0x94, 0xa4,
	0xfd, 0xe0, 0x78, 0x6c, 0x88, 0x1f, 0x0a, 0xab, 0x8d, 0x50, 0xc1, 0x61, 0xd6, 0x10, 0x15, 0x0a,
	0x82, 0xe5, 0x54, 0x3c, 0x82, 0x25, 0x03, 0x0c, 0xd1, 0x2b, 0xd8, 0x8c, 0x52, 0x72, 0x8a, 0xda,
	0x6a, 0x9c, 0x18, 0x97, 0x08, 0x32, 0x4f, 0xb4, 0xfc, 0xec, 0x18, 0xfe, 0x35, 0xf7, 0x95, 0x3e,
	0x91, 0xd5, 0x96, 0x44, 0x9b, 0x26, 0x05, 0xda, 0x6a, 0xb6, 0x1b, 0xc5, 0x02, 0x24, 0x46, 0x3f,
	0x29, 0x00, 0x34, 0x6c, 0xfd, 0xa1, 0x9d, 0xb1, 0xbc, 0x14, 0xbb, 0xd6, 0x7e, 0x67, 0x7c, 0x61,
	0x12, 0xef, 0xc3, 0x37, 0x83, 0x7f, 0x88, 0x5f, 0x95, 0xf9, 0x86, 0xba, 0xfb, 0x6f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x68, 0x05, 0x10, 0xbf, 0x44, 0x16, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RPCChannelsClient is the client API for RPCChannels service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCChannelsClient interface {
	// NEW
	GetChannelDataById(ctx context.Context, in *ChannelDataByIdReq, opts ...grpc.CallOption) (*ChannelData, error)
	CreateNewChannel(ctx context.Context, in *CreateNewChannelReq, opts ...grpc.CallOption) (*ChannelData, error)
	AddChannelParticipant(ctx context.Context, in *AddChannelParticipantReq, opts ...grpc.CallOption) (*Void, error)
	GetChatsListBySelfAndIDList(ctx context.Context, in *GetChatsListBySelfAndIDListReq, opts ...grpc.CallOption) (*GetChatsListBySelfAndIDListResp, error)
	GetChannelFullBySelfId(ctx context.Context, in *GetChannelFullBySelfIdReq, opts ...grpc.CallOption) (*GetChannelFullBySelfIdResp, error)
	GetChannelParticipantList(ctx context.Context, in *ChannelParticipantListReq, opts ...grpc.CallOption) (*ChannelParticipantListResp, error)
	GetChannelParticipants(ctx context.Context, in *ChannelParticipantsReq, opts ...grpc.CallOption) (*GetChannelParticipantsResp, error)
	ToChat(ctx context.Context, in *ToChatReq, opts ...grpc.CallOption) (*ToChatResp, error)
	CheckChannelUserName(ctx context.Context, in *CheckChannelUserNameReq, opts ...grpc.CallOption) (*CheckChannelUserNameResp, error)
	UpdateChannelLink(ctx context.Context, in *UpdateChannelLinkReq, opts ...grpc.CallOption) (*UpdateChannelLinkResp, error)
	CheckUserIsAdministrator(ctx context.Context, in *CheckUserIsAdministratorReq, opts ...grpc.CallOption) (*CheckUserIsAdministratorResp, error)
	EditChannelAdmin(ctx context.Context, in *EditChannelAdminReq, opts ...grpc.CallOption) (*Void, error)
	// In Work
	DeleteChannelUser(ctx context.Context, in *DeleteChannelUserReq, opts ...grpc.CallOption) (*Void, error)
	EditChannelTitle(ctx context.Context, in *EditChannelTitleReq, opts ...grpc.CallOption) (*Void, error)
	EditChannelPhoto(ctx context.Context, in *EditChannelPhotoReq, opts ...grpc.CallOption) (*Void, error)
	// OLD
	ToggleChannelAdmins(ctx context.Context, in *ToggleChannelAdminsReq, opts ...grpc.CallOption) (*Void, error)
	// channel_data
	GetChannelParticipantIdList(ctx context.Context, in *ChannelData, opts ...grpc.CallOption) (*GetChannelParticipantIdListResp, error)
	GetChannelBySelfID(ctx context.Context, in *GetChannelBySelfIDReq, opts ...grpc.CallOption) (*GetChannelBySelfIDResp, error)
	GetChannelParticipantIdListDao(ctx context.Context, in *GetChannelParticipantIdListDaoReq, opts ...grpc.CallOption) (*GetChannelParticipantIdListDaoResp, error)
}

type rPCChannelsClient struct {
	cc *grpc.ClientConn
}

func NewRPCChannelsClient(cc *grpc.ClientConn) RPCChannelsClient {
	return &rPCChannelsClient{cc}
}

func (c *rPCChannelsClient) GetChannelDataById(ctx context.Context, in *ChannelDataByIdReq, opts ...grpc.CallOption) (*ChannelData, error) {
	out := new(ChannelData)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/GetChannelDataById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) CreateNewChannel(ctx context.Context, in *CreateNewChannelReq, opts ...grpc.CallOption) (*ChannelData, error) {
	out := new(ChannelData)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/CreateNewChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) AddChannelParticipant(ctx context.Context, in *AddChannelParticipantReq, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/AddChannelParticipant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) GetChatsListBySelfAndIDList(ctx context.Context, in *GetChatsListBySelfAndIDListReq, opts ...grpc.CallOption) (*GetChatsListBySelfAndIDListResp, error) {
	out := new(GetChatsListBySelfAndIDListResp)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/GetChatsListBySelfAndIDList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) GetChannelFullBySelfId(ctx context.Context, in *GetChannelFullBySelfIdReq, opts ...grpc.CallOption) (*GetChannelFullBySelfIdResp, error) {
	out := new(GetChannelFullBySelfIdResp)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/GetChannelFullBySelfId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) GetChannelParticipantList(ctx context.Context, in *ChannelParticipantListReq, opts ...grpc.CallOption) (*ChannelParticipantListResp, error) {
	out := new(ChannelParticipantListResp)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/GetChannelParticipantList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) GetChannelParticipants(ctx context.Context, in *ChannelParticipantsReq, opts ...grpc.CallOption) (*GetChannelParticipantsResp, error) {
	out := new(GetChannelParticipantsResp)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/GetChannelParticipants", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ToChat(ctx context.Context, in *ToChatReq, opts ...grpc.CallOption) (*ToChatResp, error) {
	out := new(ToChatResp)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/ToChat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) CheckChannelUserName(ctx context.Context, in *CheckChannelUserNameReq, opts ...grpc.CallOption) (*CheckChannelUserNameResp, error) {
	out := new(CheckChannelUserNameResp)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/CheckChannelUserName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) UpdateChannelLink(ctx context.Context, in *UpdateChannelLinkReq, opts ...grpc.CallOption) (*UpdateChannelLinkResp, error) {
	out := new(UpdateChannelLinkResp)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/UpdateChannelLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) CheckUserIsAdministrator(ctx context.Context, in *CheckUserIsAdministratorReq, opts ...grpc.CallOption) (*CheckUserIsAdministratorResp, error) {
	out := new(CheckUserIsAdministratorResp)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/CheckUserIsAdministrator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) EditChannelAdmin(ctx context.Context, in *EditChannelAdminReq, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/EditChannelAdmin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) DeleteChannelUser(ctx context.Context, in *DeleteChannelUserReq, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/DeleteChannelUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) EditChannelTitle(ctx context.Context, in *EditChannelTitleReq, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/EditChannelTitle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) EditChannelPhoto(ctx context.Context, in *EditChannelPhotoReq, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/EditChannelPhoto", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ToggleChannelAdmins(ctx context.Context, in *ToggleChannelAdminsReq, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/ToggleChannelAdmins", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) GetChannelParticipantIdList(ctx context.Context, in *ChannelData, opts ...grpc.CallOption) (*GetChannelParticipantIdListResp, error) {
	out := new(GetChannelParticipantIdListResp)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/GetChannelParticipantIdList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) GetChannelBySelfID(ctx context.Context, in *GetChannelBySelfIDReq, opts ...grpc.CallOption) (*GetChannelBySelfIDResp, error) {
	out := new(GetChannelBySelfIDResp)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/GetChannelBySelfID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) GetChannelParticipantIdListDao(ctx context.Context, in *GetChannelParticipantIdListDaoReq, opts ...grpc.CallOption) (*GetChannelParticipantIdListDaoResp, error) {
	out := new(GetChannelParticipantIdListDaoResp)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/GetChannelParticipantIdListDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCChannelsServer is the server API for RPCChannels service.
type RPCChannelsServer interface {
	// NEW
	GetChannelDataById(context.Context, *ChannelDataByIdReq) (*ChannelData, error)
	CreateNewChannel(context.Context, *CreateNewChannelReq) (*ChannelData, error)
	AddChannelParticipant(context.Context, *AddChannelParticipantReq) (*Void, error)
	GetChatsListBySelfAndIDList(context.Context, *GetChatsListBySelfAndIDListReq) (*GetChatsListBySelfAndIDListResp, error)
	GetChannelFullBySelfId(context.Context, *GetChannelFullBySelfIdReq) (*GetChannelFullBySelfIdResp, error)
	GetChannelParticipantList(context.Context, *ChannelParticipantListReq) (*ChannelParticipantListResp, error)
	GetChannelParticipants(context.Context, *ChannelParticipantsReq) (*GetChannelParticipantsResp, error)
	ToChat(context.Context, *ToChatReq) (*ToChatResp, error)
	CheckChannelUserName(context.Context, *CheckChannelUserNameReq) (*CheckChannelUserNameResp, error)
	UpdateChannelLink(context.Context, *UpdateChannelLinkReq) (*UpdateChannelLinkResp, error)
	CheckUserIsAdministrator(context.Context, *CheckUserIsAdministratorReq) (*CheckUserIsAdministratorResp, error)
	EditChannelAdmin(context.Context, *EditChannelAdminReq) (*Void, error)
	// In Work
	DeleteChannelUser(context.Context, *DeleteChannelUserReq) (*Void, error)
	EditChannelTitle(context.Context, *EditChannelTitleReq) (*Void, error)
	EditChannelPhoto(context.Context, *EditChannelPhotoReq) (*Void, error)
	// OLD
	ToggleChannelAdmins(context.Context, *ToggleChannelAdminsReq) (*Void, error)
	// channel_data
	GetChannelParticipantIdList(context.Context, *ChannelData) (*GetChannelParticipantIdListResp, error)
	GetChannelBySelfID(context.Context, *GetChannelBySelfIDReq) (*GetChannelBySelfIDResp, error)
	GetChannelParticipantIdListDao(context.Context, *GetChannelParticipantIdListDaoReq) (*GetChannelParticipantIdListDaoResp, error)
}

// UnimplementedRPCChannelsServer can be embedded to have forward compatible implementations.
type UnimplementedRPCChannelsServer struct {
}

func (*UnimplementedRPCChannelsServer) GetChannelDataById(ctx context.Context, req *ChannelDataByIdReq) (*ChannelData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChannelDataById not implemented")
}
func (*UnimplementedRPCChannelsServer) CreateNewChannel(ctx context.Context, req *CreateNewChannelReq) (*ChannelData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNewChannel not implemented")
}
func (*UnimplementedRPCChannelsServer) AddChannelParticipant(ctx context.Context, req *AddChannelParticipantReq) (*Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddChannelParticipant not implemented")
}
func (*UnimplementedRPCChannelsServer) GetChatsListBySelfAndIDList(ctx context.Context, req *GetChatsListBySelfAndIDListReq) (*GetChatsListBySelfAndIDListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChatsListBySelfAndIDList not implemented")
}
func (*UnimplementedRPCChannelsServer) GetChannelFullBySelfId(ctx context.Context, req *GetChannelFullBySelfIdReq) (*GetChannelFullBySelfIdResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChannelFullBySelfId not implemented")
}
func (*UnimplementedRPCChannelsServer) GetChannelParticipantList(ctx context.Context, req *ChannelParticipantListReq) (*ChannelParticipantListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChannelParticipantList not implemented")
}
func (*UnimplementedRPCChannelsServer) GetChannelParticipants(ctx context.Context, req *ChannelParticipantsReq) (*GetChannelParticipantsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChannelParticipants not implemented")
}
func (*UnimplementedRPCChannelsServer) ToChat(ctx context.Context, req *ToChatReq) (*ToChatResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ToChat not implemented")
}
func (*UnimplementedRPCChannelsServer) CheckChannelUserName(ctx context.Context, req *CheckChannelUserNameReq) (*CheckChannelUserNameResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckChannelUserName not implemented")
}
func (*UnimplementedRPCChannelsServer) UpdateChannelLink(ctx context.Context, req *UpdateChannelLinkReq) (*UpdateChannelLinkResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateChannelLink not implemented")
}
func (*UnimplementedRPCChannelsServer) CheckUserIsAdministrator(ctx context.Context, req *CheckUserIsAdministratorReq) (*CheckUserIsAdministratorResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckUserIsAdministrator not implemented")
}
func (*UnimplementedRPCChannelsServer) EditChannelAdmin(ctx context.Context, req *EditChannelAdminReq) (*Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditChannelAdmin not implemented")
}
func (*UnimplementedRPCChannelsServer) DeleteChannelUser(ctx context.Context, req *DeleteChannelUserReq) (*Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteChannelUser not implemented")
}
func (*UnimplementedRPCChannelsServer) EditChannelTitle(ctx context.Context, req *EditChannelTitleReq) (*Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditChannelTitle not implemented")
}
func (*UnimplementedRPCChannelsServer) EditChannelPhoto(ctx context.Context, req *EditChannelPhotoReq) (*Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditChannelPhoto not implemented")
}
func (*UnimplementedRPCChannelsServer) ToggleChannelAdmins(ctx context.Context, req *ToggleChannelAdminsReq) (*Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ToggleChannelAdmins not implemented")
}
func (*UnimplementedRPCChannelsServer) GetChannelParticipantIdList(ctx context.Context, req *ChannelData) (*GetChannelParticipantIdListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChannelParticipantIdList not implemented")
}
func (*UnimplementedRPCChannelsServer) GetChannelBySelfID(ctx context.Context, req *GetChannelBySelfIDReq) (*GetChannelBySelfIDResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChannelBySelfID not implemented")
}
func (*UnimplementedRPCChannelsServer) GetChannelParticipantIdListDao(ctx context.Context, req *GetChannelParticipantIdListDaoReq) (*GetChannelParticipantIdListDaoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChannelParticipantIdListDao not implemented")
}

func RegisterRPCChannelsServer(s *grpc.Server, srv RPCChannelsServer) {
	s.RegisterService(&_RPCChannels_serviceDesc, srv)
}

func _RPCChannels_GetChannelDataById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChannelDataByIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).GetChannelDataById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/GetChannelDataById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).GetChannelDataById(ctx, req.(*ChannelDataByIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_CreateNewChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNewChannelReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).CreateNewChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/CreateNewChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).CreateNewChannel(ctx, req.(*CreateNewChannelReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_AddChannelParticipant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddChannelParticipantReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).AddChannelParticipant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/AddChannelParticipant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).AddChannelParticipant(ctx, req.(*AddChannelParticipantReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_GetChatsListBySelfAndIDList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetChatsListBySelfAndIDListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).GetChatsListBySelfAndIDList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/GetChatsListBySelfAndIDList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).GetChatsListBySelfAndIDList(ctx, req.(*GetChatsListBySelfAndIDListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_GetChannelFullBySelfId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetChannelFullBySelfIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).GetChannelFullBySelfId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/GetChannelFullBySelfId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).GetChannelFullBySelfId(ctx, req.(*GetChannelFullBySelfIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_GetChannelParticipantList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChannelParticipantListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).GetChannelParticipantList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/GetChannelParticipantList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).GetChannelParticipantList(ctx, req.(*ChannelParticipantListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_GetChannelParticipants_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChannelParticipantsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).GetChannelParticipants(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/GetChannelParticipants",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).GetChannelParticipants(ctx, req.(*ChannelParticipantsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ToChat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ToChatReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ToChat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/ToChat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ToChat(ctx, req.(*ToChatReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_CheckChannelUserName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckChannelUserNameReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).CheckChannelUserName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/CheckChannelUserName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).CheckChannelUserName(ctx, req.(*CheckChannelUserNameReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_UpdateChannelLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateChannelLinkReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).UpdateChannelLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/UpdateChannelLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).UpdateChannelLink(ctx, req.(*UpdateChannelLinkReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_CheckUserIsAdministrator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckUserIsAdministratorReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).CheckUserIsAdministrator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/CheckUserIsAdministrator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).CheckUserIsAdministrator(ctx, req.(*CheckUserIsAdministratorReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_EditChannelAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditChannelAdminReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).EditChannelAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/EditChannelAdmin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).EditChannelAdmin(ctx, req.(*EditChannelAdminReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_DeleteChannelUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteChannelUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).DeleteChannelUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/DeleteChannelUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).DeleteChannelUser(ctx, req.(*DeleteChannelUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_EditChannelTitle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditChannelTitleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).EditChannelTitle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/EditChannelTitle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).EditChannelTitle(ctx, req.(*EditChannelTitleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_EditChannelPhoto_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditChannelPhotoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).EditChannelPhoto(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/EditChannelPhoto",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).EditChannelPhoto(ctx, req.(*EditChannelPhotoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ToggleChannelAdmins_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ToggleChannelAdminsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ToggleChannelAdmins(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/ToggleChannelAdmins",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ToggleChannelAdmins(ctx, req.(*ToggleChannelAdminsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_GetChannelParticipantIdList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChannelData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).GetChannelParticipantIdList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/GetChannelParticipantIdList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).GetChannelParticipantIdList(ctx, req.(*ChannelData))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_GetChannelBySelfID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetChannelBySelfIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).GetChannelBySelfID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/GetChannelBySelfID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).GetChannelBySelfID(ctx, req.(*GetChannelBySelfIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_GetChannelParticipantIdListDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetChannelParticipantIdListDaoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).GetChannelParticipantIdListDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/GetChannelParticipantIdListDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).GetChannelParticipantIdListDao(ctx, req.(*GetChannelParticipantIdListDaoReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCChannels_serviceDesc = grpc.ServiceDesc{
	ServiceName: "channels.RPCChannels",
	HandlerType: (*RPCChannelsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetChannelDataById",
			Handler:    _RPCChannels_GetChannelDataById_Handler,
		},
		{
			MethodName: "CreateNewChannel",
			Handler:    _RPCChannels_CreateNewChannel_Handler,
		},
		{
			MethodName: "AddChannelParticipant",
			Handler:    _RPCChannels_AddChannelParticipant_Handler,
		},
		{
			MethodName: "GetChatsListBySelfAndIDList",
			Handler:    _RPCChannels_GetChatsListBySelfAndIDList_Handler,
		},
		{
			MethodName: "GetChannelFullBySelfId",
			Handler:    _RPCChannels_GetChannelFullBySelfId_Handler,
		},
		{
			MethodName: "GetChannelParticipantList",
			Handler:    _RPCChannels_GetChannelParticipantList_Handler,
		},
		{
			MethodName: "GetChannelParticipants",
			Handler:    _RPCChannels_GetChannelParticipants_Handler,
		},
		{
			MethodName: "ToChat",
			Handler:    _RPCChannels_ToChat_Handler,
		},
		{
			MethodName: "CheckChannelUserName",
			Handler:    _RPCChannels_CheckChannelUserName_Handler,
		},
		{
			MethodName: "UpdateChannelLink",
			Handler:    _RPCChannels_UpdateChannelLink_Handler,
		},
		{
			MethodName: "CheckUserIsAdministrator",
			Handler:    _RPCChannels_CheckUserIsAdministrator_Handler,
		},
		{
			MethodName: "EditChannelAdmin",
			Handler:    _RPCChannels_EditChannelAdmin_Handler,
		},
		{
			MethodName: "DeleteChannelUser",
			Handler:    _RPCChannels_DeleteChannelUser_Handler,
		},
		{
			MethodName: "EditChannelTitle",
			Handler:    _RPCChannels_EditChannelTitle_Handler,
		},
		{
			MethodName: "EditChannelPhoto",
			Handler:    _RPCChannels_EditChannelPhoto_Handler,
		},
		{
			MethodName: "ToggleChannelAdmins",
			Handler:    _RPCChannels_ToggleChannelAdmins_Handler,
		},
		{
			MethodName: "GetChannelParticipantIdList",
			Handler:    _RPCChannels_GetChannelParticipantIdList_Handler,
		},
		{
			MethodName: "GetChannelBySelfID",
			Handler:    _RPCChannels_GetChannelBySelfID_Handler,
		},
		{
			MethodName: "GetChannelParticipantIdListDao",
			Handler:    _RPCChannels_GetChannelParticipantIdListDao_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "channels.proto",
}
