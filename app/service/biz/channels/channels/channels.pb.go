// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: channels.proto

package channels

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	mtproto "gitlab.com/merehead/elloapp/backend/elloapp_tg_backend/mtproto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ChannelParticipant struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ChannelId            int64    `protobuf:"varint,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	UserId               int64    `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ParticipantType      int32    `protobuf:"varint,4,opt,name=participant_type,json=participantType,proto3" json:"participant_type,omitempty"`
	InviterUserId        int64    `protobuf:"varint,5,opt,name=inviter_user_id,json=inviterUserId,proto3" json:"inviter_user_id,omitempty"`
	InvitedAt            int32    `protobuf:"varint,6,opt,name=invited_at,json=invitedAt,proto3" json:"invited_at,omitempty"`
	JoinedAt             int32    `protobuf:"varint,7,opt,name=joined_at,json=joinedAt,proto3" json:"joined_at,omitempty"`
	State                int32    `protobuf:"varint,8,opt,name=state,proto3" json:"state,omitempty"`
	CreatedAt            string   `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string   `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelParticipant) Reset()         { *m = ChannelParticipant{} }
func (m *ChannelParticipant) String() string { return proto.CompactTextString(m) }
func (*ChannelParticipant) ProtoMessage()    {}
func (*ChannelParticipant) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{0}
}
func (m *ChannelParticipant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelParticipant.Unmarshal(m, b)
}
func (m *ChannelParticipant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelParticipant.Marshal(b, m, deterministic)
}
func (m *ChannelParticipant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelParticipant.Merge(m, src)
}
func (m *ChannelParticipant) XXX_Size() int {
	return xxx_messageInfo_ChannelParticipant.Size(m)
}
func (m *ChannelParticipant) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelParticipant.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelParticipant proto.InternalMessageInfo

func (m *ChannelParticipant) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ChannelParticipant) GetChannelId() int64 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

func (m *ChannelParticipant) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ChannelParticipant) GetParticipantType() int32 {
	if m != nil {
		return m.ParticipantType
	}
	return 0
}

func (m *ChannelParticipant) GetInviterUserId() int64 {
	if m != nil {
		return m.InviterUserId
	}
	return 0
}

func (m *ChannelParticipant) GetInvitedAt() int32 {
	if m != nil {
		return m.InvitedAt
	}
	return 0
}

func (m *ChannelParticipant) GetJoinedAt() int32 {
	if m != nil {
		return m.JoinedAt
	}
	return 0
}

func (m *ChannelParticipant) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *ChannelParticipant) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *ChannelParticipant) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

type Channel struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatorUserId        int64    `protobuf:"varint,2,opt,name=creator_user_id,json=creatorUserId,proto3" json:"creator_user_id,omitempty"`
	AccessHash           int64    `protobuf:"varint,3,opt,name=access_hash,json=accessHash,proto3" json:"access_hash,omitempty"`
	RandomId             int64    `protobuf:"varint,4,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	ParticipantCount     int32    `protobuf:"varint,5,opt,name=participant_count,json=participantCount,proto3" json:"participant_count,omitempty"`
	Title                string   `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	About                string   `protobuf:"bytes,7,opt,name=about,proto3" json:"about,omitempty"`
	PhotoId              int64    `protobuf:"varint,8,opt,name=photo_id,json=photoId,proto3" json:"photo_id,omitempty"`
	Link                 string   `protobuf:"bytes,9,opt,name=link,proto3" json:"link,omitempty"`
	AdminsEnabled        int32    `protobuf:"varint,10,opt,name=admins_enabled,json=adminsEnabled,proto3" json:"admins_enabled,omitempty"`
	Deactivated          int32    `protobuf:"varint,11,opt,name=deactivated,proto3" json:"deactivated,omitempty"`
	Version              int32    `protobuf:"varint,12,opt,name=version,proto3" json:"version,omitempty"`
	Date                 int32    `protobuf:"varint,13,opt,name=date,proto3" json:"date,omitempty"`
	CreatedAt            string   `protobuf:"bytes,14,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string   `protobuf:"bytes,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Channel) Reset()         { *m = Channel{} }
func (m *Channel) String() string { return proto.CompactTextString(m) }
func (*Channel) ProtoMessage()    {}
func (*Channel) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{1}
}
func (m *Channel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Channel.Unmarshal(m, b)
}
func (m *Channel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Channel.Marshal(b, m, deterministic)
}
func (m *Channel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Channel.Merge(m, src)
}
func (m *Channel) XXX_Size() int {
	return xxx_messageInfo_Channel.Size(m)
}
func (m *Channel) XXX_DiscardUnknown() {
	xxx_messageInfo_Channel.DiscardUnknown(m)
}

var xxx_messageInfo_Channel proto.InternalMessageInfo

func (m *Channel) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Channel) GetCreatorUserId() int64 {
	if m != nil {
		return m.CreatorUserId
	}
	return 0
}

func (m *Channel) GetAccessHash() int64 {
	if m != nil {
		return m.AccessHash
	}
	return 0
}

func (m *Channel) GetRandomId() int64 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

func (m *Channel) GetParticipantCount() int32 {
	if m != nil {
		return m.ParticipantCount
	}
	return 0
}

func (m *Channel) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Channel) GetAbout() string {
	if m != nil {
		return m.About
	}
	return ""
}

func (m *Channel) GetPhotoId() int64 {
	if m != nil {
		return m.PhotoId
	}
	return 0
}

func (m *Channel) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *Channel) GetAdminsEnabled() int32 {
	if m != nil {
		return m.AdminsEnabled
	}
	return 0
}

func (m *Channel) GetDeactivated() int32 {
	if m != nil {
		return m.Deactivated
	}
	return 0
}

func (m *Channel) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Channel) GetDate() int32 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *Channel) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Channel) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

type MakeChannelParticipant2ByDOReq struct {
	Participant          *ChannelParticipant `protobuf:"bytes,1,opt,name=participant,proto3" json:"participant,omitempty"`
	SelfId               int64               `protobuf:"varint,2,opt,name=selfId,proto3" json:"selfId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *MakeChannelParticipant2ByDOReq) Reset()         { *m = MakeChannelParticipant2ByDOReq{} }
func (m *MakeChannelParticipant2ByDOReq) String() string { return proto.CompactTextString(m) }
func (*MakeChannelParticipant2ByDOReq) ProtoMessage()    {}
func (*MakeChannelParticipant2ByDOReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{2}
}
func (m *MakeChannelParticipant2ByDOReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MakeChannelParticipant2ByDOReq.Unmarshal(m, b)
}
func (m *MakeChannelParticipant2ByDOReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MakeChannelParticipant2ByDOReq.Marshal(b, m, deterministic)
}
func (m *MakeChannelParticipant2ByDOReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MakeChannelParticipant2ByDOReq.Merge(m, src)
}
func (m *MakeChannelParticipant2ByDOReq) XXX_Size() int {
	return xxx_messageInfo_MakeChannelParticipant2ByDOReq.Size(m)
}
func (m *MakeChannelParticipant2ByDOReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MakeChannelParticipant2ByDOReq.DiscardUnknown(m)
}

var xxx_messageInfo_MakeChannelParticipant2ByDOReq proto.InternalMessageInfo

func (m *MakeChannelParticipant2ByDOReq) GetParticipant() *ChannelParticipant {
	if m != nil {
		return m.Participant
	}
	return nil
}

func (m *MakeChannelParticipant2ByDOReq) GetSelfId() int64 {
	if m != nil {
		return m.SelfId
	}
	return 0
}

type ChannelParticipantRes struct {
	Participant          *mtproto.ChannelParticipant `protobuf:"bytes,1,opt,name=participant,proto3" json:"participant,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ChannelParticipantRes) Reset()         { *m = ChannelParticipantRes{} }
func (m *ChannelParticipantRes) String() string { return proto.CompactTextString(m) }
func (*ChannelParticipantRes) ProtoMessage()    {}
func (*ChannelParticipantRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{3}
}
func (m *ChannelParticipantRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelParticipantRes.Unmarshal(m, b)
}
func (m *ChannelParticipantRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelParticipantRes.Marshal(b, m, deterministic)
}
func (m *ChannelParticipantRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelParticipantRes.Merge(m, src)
}
func (m *ChannelParticipantRes) XXX_Size() int {
	return xxx_messageInfo_ChannelParticipantRes.Size(m)
}
func (m *ChannelParticipantRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelParticipantRes.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelParticipantRes proto.InternalMessageInfo

func (m *ChannelParticipantRes) GetParticipant() *mtproto.ChannelParticipant {
	if m != nil {
		return m.Participant
	}
	return nil
}

type ChannelCoreByIdReq struct {
	ChannelId            int64    `protobuf:"varint,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelCoreByIdReq) Reset()         { *m = ChannelCoreByIdReq{} }
func (m *ChannelCoreByIdReq) String() string { return proto.CompactTextString(m) }
func (*ChannelCoreByIdReq) ProtoMessage()    {}
func (*ChannelCoreByIdReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{4}
}
func (m *ChannelCoreByIdReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelCoreByIdReq.Unmarshal(m, b)
}
func (m *ChannelCoreByIdReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelCoreByIdReq.Marshal(b, m, deterministic)
}
func (m *ChannelCoreByIdReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelCoreByIdReq.Merge(m, src)
}
func (m *ChannelCoreByIdReq) XXX_Size() int {
	return xxx_messageInfo_ChannelCoreByIdReq.Size(m)
}
func (m *ChannelCoreByIdReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelCoreByIdReq.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelCoreByIdReq proto.InternalMessageInfo

func (m *ChannelCoreByIdReq) GetChannelId() int64 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

type ChannelCoreByCreateChannelReq struct {
	CreatorId            int64    `protobuf:"varint,1,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	UserIdList           []int64  `protobuf:"varint,2,rep,packed,name=user_id_list,json=userIdList,proto3" json:"user_id_list,omitempty"`
	Title                string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	About                string   `protobuf:"bytes,4,opt,name=about,proto3" json:"about,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelCoreByCreateChannelReq) Reset()         { *m = ChannelCoreByCreateChannelReq{} }
func (m *ChannelCoreByCreateChannelReq) String() string { return proto.CompactTextString(m) }
func (*ChannelCoreByCreateChannelReq) ProtoMessage()    {}
func (*ChannelCoreByCreateChannelReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{5}
}
func (m *ChannelCoreByCreateChannelReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelCoreByCreateChannelReq.Unmarshal(m, b)
}
func (m *ChannelCoreByCreateChannelReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelCoreByCreateChannelReq.Marshal(b, m, deterministic)
}
func (m *ChannelCoreByCreateChannelReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelCoreByCreateChannelReq.Merge(m, src)
}
func (m *ChannelCoreByCreateChannelReq) XXX_Size() int {
	return xxx_messageInfo_ChannelCoreByCreateChannelReq.Size(m)
}
func (m *ChannelCoreByCreateChannelReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelCoreByCreateChannelReq.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelCoreByCreateChannelReq proto.InternalMessageInfo

func (m *ChannelCoreByCreateChannelReq) GetCreatorId() int64 {
	if m != nil {
		return m.CreatorId
	}
	return 0
}

func (m *ChannelCoreByCreateChannelReq) GetUserIdList() []int64 {
	if m != nil {
		return m.UserIdList
	}
	return nil
}

func (m *ChannelCoreByCreateChannelReq) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ChannelCoreByCreateChannelReq) GetAbout() string {
	if m != nil {
		return m.About
	}
	return ""
}

type ChannelCoreData struct {
	Channel              *Channel              `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	Participants         []*ChannelParticipant `protobuf:"bytes,2,rep,name=participants,proto3" json:"participants,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ChannelCoreData) Reset()         { *m = ChannelCoreData{} }
func (m *ChannelCoreData) String() string { return proto.CompactTextString(m) }
func (*ChannelCoreData) ProtoMessage()    {}
func (*ChannelCoreData) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{6}
}
func (m *ChannelCoreData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelCoreData.Unmarshal(m, b)
}
func (m *ChannelCoreData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelCoreData.Marshal(b, m, deterministic)
}
func (m *ChannelCoreData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelCoreData.Merge(m, src)
}
func (m *ChannelCoreData) XXX_Size() int {
	return xxx_messageInfo_ChannelCoreData.Size(m)
}
func (m *ChannelCoreData) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelCoreData.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelCoreData proto.InternalMessageInfo

func (m *ChannelCoreData) GetChannel() *Channel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *ChannelCoreData) GetParticipants() []*ChannelParticipant {
	if m != nil {
		return m.Participants
	}
	return nil
}

type ExportedChatInviteResp struct {
	Link                 string   `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExportedChatInviteResp) Reset()         { *m = ExportedChatInviteResp{} }
func (m *ExportedChatInviteResp) String() string { return proto.CompactTextString(m) }
func (*ExportedChatInviteResp) ProtoMessage()    {}
func (*ExportedChatInviteResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{7}
}
func (m *ExportedChatInviteResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExportedChatInviteResp.Unmarshal(m, b)
}
func (m *ExportedChatInviteResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExportedChatInviteResp.Marshal(b, m, deterministic)
}
func (m *ExportedChatInviteResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExportedChatInviteResp.Merge(m, src)
}
func (m *ExportedChatInviteResp) XXX_Size() int {
	return xxx_messageInfo_ExportedChatInviteResp.Size(m)
}
func (m *ExportedChatInviteResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ExportedChatInviteResp.DiscardUnknown(m)
}

var xxx_messageInfo_ExportedChatInviteResp proto.InternalMessageInfo

func (m *ExportedChatInviteResp) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

type CheckUserIsAdministratorReq struct {
	Channel              *ChannelCoreData `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	UserId               int64            `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CheckUserIsAdministratorReq) Reset()         { *m = CheckUserIsAdministratorReq{} }
func (m *CheckUserIsAdministratorReq) String() string { return proto.CompactTextString(m) }
func (*CheckUserIsAdministratorReq) ProtoMessage()    {}
func (*CheckUserIsAdministratorReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{8}
}
func (m *CheckUserIsAdministratorReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckUserIsAdministratorReq.Unmarshal(m, b)
}
func (m *CheckUserIsAdministratorReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckUserIsAdministratorReq.Marshal(b, m, deterministic)
}
func (m *CheckUserIsAdministratorReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckUserIsAdministratorReq.Merge(m, src)
}
func (m *CheckUserIsAdministratorReq) XXX_Size() int {
	return xxx_messageInfo_CheckUserIsAdministratorReq.Size(m)
}
func (m *CheckUserIsAdministratorReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckUserIsAdministratorReq.DiscardUnknown(m)
}

var xxx_messageInfo_CheckUserIsAdministratorReq proto.InternalMessageInfo

func (m *CheckUserIsAdministratorReq) GetChannel() *ChannelCoreData {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *CheckUserIsAdministratorReq) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type CheckUserIsAdministratorResp struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckUserIsAdministratorResp) Reset()         { *m = CheckUserIsAdministratorResp{} }
func (m *CheckUserIsAdministratorResp) String() string { return proto.CompactTextString(m) }
func (*CheckUserIsAdministratorResp) ProtoMessage()    {}
func (*CheckUserIsAdministratorResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{9}
}
func (m *CheckUserIsAdministratorResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckUserIsAdministratorResp.Unmarshal(m, b)
}
func (m *CheckUserIsAdministratorResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckUserIsAdministratorResp.Marshal(b, m, deterministic)
}
func (m *CheckUserIsAdministratorResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckUserIsAdministratorResp.Merge(m, src)
}
func (m *CheckUserIsAdministratorResp) XXX_Size() int {
	return xxx_messageInfo_CheckUserIsAdministratorResp.Size(m)
}
func (m *CheckUserIsAdministratorResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckUserIsAdministratorResp.DiscardUnknown(m)
}

var xxx_messageInfo_CheckUserIsAdministratorResp proto.InternalMessageInfo

func (m *CheckUserIsAdministratorResp) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

type GetChannelParticipantListResp struct {
	Participants         []*mtproto.ChannelParticipant `protobuf:"bytes,1,rep,name=participants,proto3" json:"participants,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *GetChannelParticipantListResp) Reset()         { *m = GetChannelParticipantListResp{} }
func (m *GetChannelParticipantListResp) String() string { return proto.CompactTextString(m) }
func (*GetChannelParticipantListResp) ProtoMessage()    {}
func (*GetChannelParticipantListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{10}
}
func (m *GetChannelParticipantListResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChannelParticipantListResp.Unmarshal(m, b)
}
func (m *GetChannelParticipantListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChannelParticipantListResp.Marshal(b, m, deterministic)
}
func (m *GetChannelParticipantListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChannelParticipantListResp.Merge(m, src)
}
func (m *GetChannelParticipantListResp) XXX_Size() int {
	return xxx_messageInfo_GetChannelParticipantListResp.Size(m)
}
func (m *GetChannelParticipantListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChannelParticipantListResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetChannelParticipantListResp proto.InternalMessageInfo

func (m *GetChannelParticipantListResp) GetParticipants() []*mtproto.ChannelParticipant {
	if m != nil {
		return m.Participants
	}
	return nil
}

type GetChannelParticipantIdListResp struct {
	IdList               []int64  `protobuf:"varint,1,rep,packed,name=id_list,json=idList,proto3" json:"id_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetChannelParticipantIdListResp) Reset()         { *m = GetChannelParticipantIdListResp{} }
func (m *GetChannelParticipantIdListResp) String() string { return proto.CompactTextString(m) }
func (*GetChannelParticipantIdListResp) ProtoMessage()    {}
func (*GetChannelParticipantIdListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{11}
}
func (m *GetChannelParticipantIdListResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChannelParticipantIdListResp.Unmarshal(m, b)
}
func (m *GetChannelParticipantIdListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChannelParticipantIdListResp.Marshal(b, m, deterministic)
}
func (m *GetChannelParticipantIdListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChannelParticipantIdListResp.Merge(m, src)
}
func (m *GetChannelParticipantIdListResp) XXX_Size() int {
	return xxx_messageInfo_GetChannelParticipantIdListResp.Size(m)
}
func (m *GetChannelParticipantIdListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChannelParticipantIdListResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetChannelParticipantIdListResp proto.InternalMessageInfo

func (m *GetChannelParticipantIdListResp) GetIdList() []int64 {
	if m != nil {
		return m.IdList
	}
	return nil
}

type GetChannelParticipantsResp struct {
	Participants         *mtproto.TLChannelsChannelParticipants `protobuf:"bytes,1,opt,name=participants,proto3" json:"participants,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *GetChannelParticipantsResp) Reset()         { *m = GetChannelParticipantsResp{} }
func (m *GetChannelParticipantsResp) String() string { return proto.CompactTextString(m) }
func (*GetChannelParticipantsResp) ProtoMessage()    {}
func (*GetChannelParticipantsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{12}
}
func (m *GetChannelParticipantsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChannelParticipantsResp.Unmarshal(m, b)
}
func (m *GetChannelParticipantsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChannelParticipantsResp.Marshal(b, m, deterministic)
}
func (m *GetChannelParticipantsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChannelParticipantsResp.Merge(m, src)
}
func (m *GetChannelParticipantsResp) XXX_Size() int {
	return xxx_messageInfo_GetChannelParticipantsResp.Size(m)
}
func (m *GetChannelParticipantsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChannelParticipantsResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetChannelParticipantsResp proto.InternalMessageInfo

func (m *GetChannelParticipantsResp) GetParticipants() *mtproto.TLChannelsChannelParticipants {
	if m != nil {
		return m.Participants
	}
	return nil
}

type AddChannelUserReq struct {
	Channel              *ChannelCoreData `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	InviterId            int64            `protobuf:"varint,2,opt,name=inviterId,proto3" json:"inviterId,omitempty"`
	UserId               int64            `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *AddChannelUserReq) Reset()         { *m = AddChannelUserReq{} }
func (m *AddChannelUserReq) String() string { return proto.CompactTextString(m) }
func (*AddChannelUserReq) ProtoMessage()    {}
func (*AddChannelUserReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{13}
}
func (m *AddChannelUserReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddChannelUserReq.Unmarshal(m, b)
}
func (m *AddChannelUserReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddChannelUserReq.Marshal(b, m, deterministic)
}
func (m *AddChannelUserReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddChannelUserReq.Merge(m, src)
}
func (m *AddChannelUserReq) XXX_Size() int {
	return xxx_messageInfo_AddChannelUserReq.Size(m)
}
func (m *AddChannelUserReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddChannelUserReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddChannelUserReq proto.InternalMessageInfo

func (m *AddChannelUserReq) GetChannel() *ChannelCoreData {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *AddChannelUserReq) GetInviterId() int64 {
	if m != nil {
		return m.InviterId
	}
	return 0
}

func (m *AddChannelUserReq) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type AddChannelUserResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddChannelUserResp) Reset()         { *m = AddChannelUserResp{} }
func (m *AddChannelUserResp) String() string { return proto.CompactTextString(m) }
func (*AddChannelUserResp) ProtoMessage()    {}
func (*AddChannelUserResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{14}
}
func (m *AddChannelUserResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddChannelUserResp.Unmarshal(m, b)
}
func (m *AddChannelUserResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddChannelUserResp.Marshal(b, m, deterministic)
}
func (m *AddChannelUserResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddChannelUserResp.Merge(m, src)
}
func (m *AddChannelUserResp) XXX_Size() int {
	return xxx_messageInfo_AddChannelUserResp.Size(m)
}
func (m *AddChannelUserResp) XXX_DiscardUnknown() {
	xxx_messageInfo_AddChannelUserResp.DiscardUnknown(m)
}

var xxx_messageInfo_AddChannelUserResp proto.InternalMessageInfo

type ToChannelReq struct {
	Channel              *ChannelCoreData `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	SelfUserId           int64            `protobuf:"varint,2,opt,name=selfUserId,proto3" json:"selfUserId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ToChannelReq) Reset()         { *m = ToChannelReq{} }
func (m *ToChannelReq) String() string { return proto.CompactTextString(m) }
func (*ToChannelReq) ProtoMessage()    {}
func (*ToChannelReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{15}
}
func (m *ToChannelReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ToChannelReq.Unmarshal(m, b)
}
func (m *ToChannelReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ToChannelReq.Marshal(b, m, deterministic)
}
func (m *ToChannelReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ToChannelReq.Merge(m, src)
}
func (m *ToChannelReq) XXX_Size() int {
	return xxx_messageInfo_ToChannelReq.Size(m)
}
func (m *ToChannelReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ToChannelReq.DiscardUnknown(m)
}

var xxx_messageInfo_ToChannelReq proto.InternalMessageInfo

func (m *ToChannelReq) GetChannel() *ChannelCoreData {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *ToChannelReq) GetSelfUserId() int64 {
	if m != nil {
		return m.SelfUserId
	}
	return 0
}

type ToChannelResp struct {
	Chat                 *mtproto.Chat `protobuf:"bytes,1,opt,name=chat,proto3" json:"chat,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ToChannelResp) Reset()         { *m = ToChannelResp{} }
func (m *ToChannelResp) String() string { return proto.CompactTextString(m) }
func (*ToChannelResp) ProtoMessage()    {}
func (*ToChannelResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{16}
}
func (m *ToChannelResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ToChannelResp.Unmarshal(m, b)
}
func (m *ToChannelResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ToChannelResp.Marshal(b, m, deterministic)
}
func (m *ToChannelResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ToChannelResp.Merge(m, src)
}
func (m *ToChannelResp) XXX_Size() int {
	return xxx_messageInfo_ToChannelResp.Size(m)
}
func (m *ToChannelResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ToChannelResp.DiscardUnknown(m)
}

var xxx_messageInfo_ToChannelResp proto.InternalMessageInfo

func (m *ToChannelResp) GetChat() *mtproto.Chat {
	if m != nil {
		return m.Chat
	}
	return nil
}

type CheckDeleteChannelUserReq struct {
	Channel              *ChannelCoreData `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	OperatorId           int64            `protobuf:"varint,2,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
	DeleteUserId         int64            `protobuf:"varint,3,opt,name=deleteUserId,proto3" json:"deleteUserId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CheckDeleteChannelUserReq) Reset()         { *m = CheckDeleteChannelUserReq{} }
func (m *CheckDeleteChannelUserReq) String() string { return proto.CompactTextString(m) }
func (*CheckDeleteChannelUserReq) ProtoMessage()    {}
func (*CheckDeleteChannelUserReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{17}
}
func (m *CheckDeleteChannelUserReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckDeleteChannelUserReq.Unmarshal(m, b)
}
func (m *CheckDeleteChannelUserReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckDeleteChannelUserReq.Marshal(b, m, deterministic)
}
func (m *CheckDeleteChannelUserReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckDeleteChannelUserReq.Merge(m, src)
}
func (m *CheckDeleteChannelUserReq) XXX_Size() int {
	return xxx_messageInfo_CheckDeleteChannelUserReq.Size(m)
}
func (m *CheckDeleteChannelUserReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckDeleteChannelUserReq.DiscardUnknown(m)
}

var xxx_messageInfo_CheckDeleteChannelUserReq proto.InternalMessageInfo

func (m *CheckDeleteChannelUserReq) GetChannel() *ChannelCoreData {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *CheckDeleteChannelUserReq) GetOperatorId() int64 {
	if m != nil {
		return m.OperatorId
	}
	return 0
}

func (m *CheckDeleteChannelUserReq) GetDeleteUserId() int64 {
	if m != nil {
		return m.DeleteUserId
	}
	return 0
}

type CheckDeleteChannelUserResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckDeleteChannelUserResp) Reset()         { *m = CheckDeleteChannelUserResp{} }
func (m *CheckDeleteChannelUserResp) String() string { return proto.CompactTextString(m) }
func (*CheckDeleteChannelUserResp) ProtoMessage()    {}
func (*CheckDeleteChannelUserResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{18}
}
func (m *CheckDeleteChannelUserResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckDeleteChannelUserResp.Unmarshal(m, b)
}
func (m *CheckDeleteChannelUserResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckDeleteChannelUserResp.Marshal(b, m, deterministic)
}
func (m *CheckDeleteChannelUserResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckDeleteChannelUserResp.Merge(m, src)
}
func (m *CheckDeleteChannelUserResp) XXX_Size() int {
	return xxx_messageInfo_CheckDeleteChannelUserResp.Size(m)
}
func (m *CheckDeleteChannelUserResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckDeleteChannelUserResp.DiscardUnknown(m)
}

var xxx_messageInfo_CheckDeleteChannelUserResp proto.InternalMessageInfo

type DeleteChannelUserReq struct {
	Channel              *ChannelCoreData `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	OperatorId           int64            `protobuf:"varint,2,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
	DeleteUserId         int64            `protobuf:"varint,3,opt,name=deleteUserId,proto3" json:"deleteUserId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *DeleteChannelUserReq) Reset()         { *m = DeleteChannelUserReq{} }
func (m *DeleteChannelUserReq) String() string { return proto.CompactTextString(m) }
func (*DeleteChannelUserReq) ProtoMessage()    {}
func (*DeleteChannelUserReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{19}
}
func (m *DeleteChannelUserReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteChannelUserReq.Unmarshal(m, b)
}
func (m *DeleteChannelUserReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteChannelUserReq.Marshal(b, m, deterministic)
}
func (m *DeleteChannelUserReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteChannelUserReq.Merge(m, src)
}
func (m *DeleteChannelUserReq) XXX_Size() int {
	return xxx_messageInfo_DeleteChannelUserReq.Size(m)
}
func (m *DeleteChannelUserReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteChannelUserReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteChannelUserReq proto.InternalMessageInfo

func (m *DeleteChannelUserReq) GetChannel() *ChannelCoreData {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *DeleteChannelUserReq) GetOperatorId() int64 {
	if m != nil {
		return m.OperatorId
	}
	return 0
}

func (m *DeleteChannelUserReq) GetDeleteUserId() int64 {
	if m != nil {
		return m.DeleteUserId
	}
	return 0
}

type DeleteChannelUserResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteChannelUserResp) Reset()         { *m = DeleteChannelUserResp{} }
func (m *DeleteChannelUserResp) String() string { return proto.CompactTextString(m) }
func (*DeleteChannelUserResp) ProtoMessage()    {}
func (*DeleteChannelUserResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{20}
}
func (m *DeleteChannelUserResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteChannelUserResp.Unmarshal(m, b)
}
func (m *DeleteChannelUserResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteChannelUserResp.Marshal(b, m, deterministic)
}
func (m *DeleteChannelUserResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteChannelUserResp.Merge(m, src)
}
func (m *DeleteChannelUserResp) XXX_Size() int {
	return xxx_messageInfo_DeleteChannelUserResp.Size(m)
}
func (m *DeleteChannelUserResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteChannelUserResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteChannelUserResp proto.InternalMessageInfo

type EditChannelTitleReq struct {
	Channel              *ChannelCoreData `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	EditUserId           int64            `protobuf:"varint,2,opt,name=editUserId,proto3" json:"editUserId,omitempty"`
	Title                string           `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *EditChannelTitleReq) Reset()         { *m = EditChannelTitleReq{} }
func (m *EditChannelTitleReq) String() string { return proto.CompactTextString(m) }
func (*EditChannelTitleReq) ProtoMessage()    {}
func (*EditChannelTitleReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{21}
}
func (m *EditChannelTitleReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EditChannelTitleReq.Unmarshal(m, b)
}
func (m *EditChannelTitleReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EditChannelTitleReq.Marshal(b, m, deterministic)
}
func (m *EditChannelTitleReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditChannelTitleReq.Merge(m, src)
}
func (m *EditChannelTitleReq) XXX_Size() int {
	return xxx_messageInfo_EditChannelTitleReq.Size(m)
}
func (m *EditChannelTitleReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EditChannelTitleReq.DiscardUnknown(m)
}

var xxx_messageInfo_EditChannelTitleReq proto.InternalMessageInfo

func (m *EditChannelTitleReq) GetChannel() *ChannelCoreData {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *EditChannelTitleReq) GetEditUserId() int64 {
	if m != nil {
		return m.EditUserId
	}
	return 0
}

func (m *EditChannelTitleReq) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type EditChannelTitleResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EditChannelTitleResp) Reset()         { *m = EditChannelTitleResp{} }
func (m *EditChannelTitleResp) String() string { return proto.CompactTextString(m) }
func (*EditChannelTitleResp) ProtoMessage()    {}
func (*EditChannelTitleResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{22}
}
func (m *EditChannelTitleResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EditChannelTitleResp.Unmarshal(m, b)
}
func (m *EditChannelTitleResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EditChannelTitleResp.Marshal(b, m, deterministic)
}
func (m *EditChannelTitleResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditChannelTitleResp.Merge(m, src)
}
func (m *EditChannelTitleResp) XXX_Size() int {
	return xxx_messageInfo_EditChannelTitleResp.Size(m)
}
func (m *EditChannelTitleResp) XXX_DiscardUnknown() {
	xxx_messageInfo_EditChannelTitleResp.DiscardUnknown(m)
}

var xxx_messageInfo_EditChannelTitleResp proto.InternalMessageInfo

type EditChannelPhotoReq struct {
	Channel              *ChannelCoreData `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	EditUserId           int64            `protobuf:"varint,2,opt,name=editUserId,proto3" json:"editUserId,omitempty"`
	PhotoId              int64            `protobuf:"varint,3,opt,name=photoId,proto3" json:"photoId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *EditChannelPhotoReq) Reset()         { *m = EditChannelPhotoReq{} }
func (m *EditChannelPhotoReq) String() string { return proto.CompactTextString(m) }
func (*EditChannelPhotoReq) ProtoMessage()    {}
func (*EditChannelPhotoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{23}
}
func (m *EditChannelPhotoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EditChannelPhotoReq.Unmarshal(m, b)
}
func (m *EditChannelPhotoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EditChannelPhotoReq.Marshal(b, m, deterministic)
}
func (m *EditChannelPhotoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditChannelPhotoReq.Merge(m, src)
}
func (m *EditChannelPhotoReq) XXX_Size() int {
	return xxx_messageInfo_EditChannelPhotoReq.Size(m)
}
func (m *EditChannelPhotoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EditChannelPhotoReq.DiscardUnknown(m)
}

var xxx_messageInfo_EditChannelPhotoReq proto.InternalMessageInfo

func (m *EditChannelPhotoReq) GetChannel() *ChannelCoreData {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *EditChannelPhotoReq) GetEditUserId() int64 {
	if m != nil {
		return m.EditUserId
	}
	return 0
}

func (m *EditChannelPhotoReq) GetPhotoId() int64 {
	if m != nil {
		return m.PhotoId
	}
	return 0
}

type EditChannelPhotoResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EditChannelPhotoResp) Reset()         { *m = EditChannelPhotoResp{} }
func (m *EditChannelPhotoResp) String() string { return proto.CompactTextString(m) }
func (*EditChannelPhotoResp) ProtoMessage()    {}
func (*EditChannelPhotoResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{24}
}
func (m *EditChannelPhotoResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EditChannelPhotoResp.Unmarshal(m, b)
}
func (m *EditChannelPhotoResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EditChannelPhotoResp.Marshal(b, m, deterministic)
}
func (m *EditChannelPhotoResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditChannelPhotoResp.Merge(m, src)
}
func (m *EditChannelPhotoResp) XXX_Size() int {
	return xxx_messageInfo_EditChannelPhotoResp.Size(m)
}
func (m *EditChannelPhotoResp) XXX_DiscardUnknown() {
	xxx_messageInfo_EditChannelPhotoResp.DiscardUnknown(m)
}

var xxx_messageInfo_EditChannelPhotoResp proto.InternalMessageInfo

type EditChannelAdminReq struct {
	Channel              *ChannelCoreData `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	OperatorId           int64            `protobuf:"varint,2,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
	EditChannelAdminId   int64            `protobuf:"varint,3,opt,name=editChannelAdminId,proto3" json:"editChannelAdminId,omitempty"`
	IsAdmin              bool             `protobuf:"varint,4,opt,name=isAdmin,proto3" json:"isAdmin,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *EditChannelAdminReq) Reset()         { *m = EditChannelAdminReq{} }
func (m *EditChannelAdminReq) String() string { return proto.CompactTextString(m) }
func (*EditChannelAdminReq) ProtoMessage()    {}
func (*EditChannelAdminReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{25}
}
func (m *EditChannelAdminReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EditChannelAdminReq.Unmarshal(m, b)
}
func (m *EditChannelAdminReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EditChannelAdminReq.Marshal(b, m, deterministic)
}
func (m *EditChannelAdminReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditChannelAdminReq.Merge(m, src)
}
func (m *EditChannelAdminReq) XXX_Size() int {
	return xxx_messageInfo_EditChannelAdminReq.Size(m)
}
func (m *EditChannelAdminReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EditChannelAdminReq.DiscardUnknown(m)
}

var xxx_messageInfo_EditChannelAdminReq proto.InternalMessageInfo

func (m *EditChannelAdminReq) GetChannel() *ChannelCoreData {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *EditChannelAdminReq) GetOperatorId() int64 {
	if m != nil {
		return m.OperatorId
	}
	return 0
}

func (m *EditChannelAdminReq) GetEditChannelAdminId() int64 {
	if m != nil {
		return m.EditChannelAdminId
	}
	return 0
}

func (m *EditChannelAdminReq) GetIsAdmin() bool {
	if m != nil {
		return m.IsAdmin
	}
	return false
}

type EditChannelAdminResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EditChannelAdminResp) Reset()         { *m = EditChannelAdminResp{} }
func (m *EditChannelAdminResp) String() string { return proto.CompactTextString(m) }
func (*EditChannelAdminResp) ProtoMessage()    {}
func (*EditChannelAdminResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{26}
}
func (m *EditChannelAdminResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EditChannelAdminResp.Unmarshal(m, b)
}
func (m *EditChannelAdminResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EditChannelAdminResp.Marshal(b, m, deterministic)
}
func (m *EditChannelAdminResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditChannelAdminResp.Merge(m, src)
}
func (m *EditChannelAdminResp) XXX_Size() int {
	return xxx_messageInfo_EditChannelAdminResp.Size(m)
}
func (m *EditChannelAdminResp) XXX_DiscardUnknown() {
	xxx_messageInfo_EditChannelAdminResp.DiscardUnknown(m)
}

var xxx_messageInfo_EditChannelAdminResp proto.InternalMessageInfo

type ToggleChannelAdminsReq struct {
	Channel              *ChannelCoreData `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	UserId               int64            `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	AdminsEnabled        bool             `protobuf:"varint,3,opt,name=adminsEnabled,proto3" json:"adminsEnabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ToggleChannelAdminsReq) Reset()         { *m = ToggleChannelAdminsReq{} }
func (m *ToggleChannelAdminsReq) String() string { return proto.CompactTextString(m) }
func (*ToggleChannelAdminsReq) ProtoMessage()    {}
func (*ToggleChannelAdminsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{27}
}
func (m *ToggleChannelAdminsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ToggleChannelAdminsReq.Unmarshal(m, b)
}
func (m *ToggleChannelAdminsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ToggleChannelAdminsReq.Marshal(b, m, deterministic)
}
func (m *ToggleChannelAdminsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ToggleChannelAdminsReq.Merge(m, src)
}
func (m *ToggleChannelAdminsReq) XXX_Size() int {
	return xxx_messageInfo_ToggleChannelAdminsReq.Size(m)
}
func (m *ToggleChannelAdminsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ToggleChannelAdminsReq.DiscardUnknown(m)
}

var xxx_messageInfo_ToggleChannelAdminsReq proto.InternalMessageInfo

func (m *ToggleChannelAdminsReq) GetChannel() *ChannelCoreData {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *ToggleChannelAdminsReq) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ToggleChannelAdminsReq) GetAdminsEnabled() bool {
	if m != nil {
		return m.AdminsEnabled
	}
	return false
}

type ToggleChannelAdminsResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ToggleChannelAdminsResp) Reset()         { *m = ToggleChannelAdminsResp{} }
func (m *ToggleChannelAdminsResp) String() string { return proto.CompactTextString(m) }
func (*ToggleChannelAdminsResp) ProtoMessage()    {}
func (*ToggleChannelAdminsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{28}
}
func (m *ToggleChannelAdminsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ToggleChannelAdminsResp.Unmarshal(m, b)
}
func (m *ToggleChannelAdminsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ToggleChannelAdminsResp.Marshal(b, m, deterministic)
}
func (m *ToggleChannelAdminsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ToggleChannelAdminsResp.Merge(m, src)
}
func (m *ToggleChannelAdminsResp) XXX_Size() int {
	return xxx_messageInfo_ToggleChannelAdminsResp.Size(m)
}
func (m *ToggleChannelAdminsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ToggleChannelAdminsResp.DiscardUnknown(m)
}

var xxx_messageInfo_ToggleChannelAdminsResp proto.InternalMessageInfo

// channel_util
type GetChannelListBySelfAndIDListReq struct {
	SelfUserId           int64    `protobuf:"varint,1,opt,name=selfUserId,proto3" json:"selfUserId,omitempty"`
	IdList               []int64  `protobuf:"varint,2,rep,packed,name=idList,proto3" json:"idList,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetChannelListBySelfAndIDListReq) Reset()         { *m = GetChannelListBySelfAndIDListReq{} }
func (m *GetChannelListBySelfAndIDListReq) String() string { return proto.CompactTextString(m) }
func (*GetChannelListBySelfAndIDListReq) ProtoMessage()    {}
func (*GetChannelListBySelfAndIDListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{29}
}
func (m *GetChannelListBySelfAndIDListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChannelListBySelfAndIDListReq.Unmarshal(m, b)
}
func (m *GetChannelListBySelfAndIDListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChannelListBySelfAndIDListReq.Marshal(b, m, deterministic)
}
func (m *GetChannelListBySelfAndIDListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChannelListBySelfAndIDListReq.Merge(m, src)
}
func (m *GetChannelListBySelfAndIDListReq) XXX_Size() int {
	return xxx_messageInfo_GetChannelListBySelfAndIDListReq.Size(m)
}
func (m *GetChannelListBySelfAndIDListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChannelListBySelfAndIDListReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetChannelListBySelfAndIDListReq proto.InternalMessageInfo

func (m *GetChannelListBySelfAndIDListReq) GetSelfUserId() int64 {
	if m != nil {
		return m.SelfUserId
	}
	return 0
}

func (m *GetChannelListBySelfAndIDListReq) GetIdList() []int64 {
	if m != nil {
		return m.IdList
	}
	return nil
}

type GetChannelListBySelfAndIDListResp struct {
	Chats                []*mtproto.Chat `protobuf:"bytes,1,rep,name=chats,proto3" json:"chats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetChannelListBySelfAndIDListResp) Reset()         { *m = GetChannelListBySelfAndIDListResp{} }
func (m *GetChannelListBySelfAndIDListResp) String() string { return proto.CompactTextString(m) }
func (*GetChannelListBySelfAndIDListResp) ProtoMessage()    {}
func (*GetChannelListBySelfAndIDListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{30}
}
func (m *GetChannelListBySelfAndIDListResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChannelListBySelfAndIDListResp.Unmarshal(m, b)
}
func (m *GetChannelListBySelfAndIDListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChannelListBySelfAndIDListResp.Marshal(b, m, deterministic)
}
func (m *GetChannelListBySelfAndIDListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChannelListBySelfAndIDListResp.Merge(m, src)
}
func (m *GetChannelListBySelfAndIDListResp) XXX_Size() int {
	return xxx_messageInfo_GetChannelListBySelfAndIDListResp.Size(m)
}
func (m *GetChannelListBySelfAndIDListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChannelListBySelfAndIDListResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetChannelListBySelfAndIDListResp proto.InternalMessageInfo

func (m *GetChannelListBySelfAndIDListResp) GetChats() []*mtproto.Chat {
	if m != nil {
		return m.Chats
	}
	return nil
}

type CheckChannelUserNameReq struct {
	ChannelId            int64    `protobuf:"varint,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	UserName             string   `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckChannelUserNameReq) Reset()         { *m = CheckChannelUserNameReq{} }
func (m *CheckChannelUserNameReq) String() string { return proto.CompactTextString(m) }
func (*CheckChannelUserNameReq) ProtoMessage()    {}
func (*CheckChannelUserNameReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{31}
}
func (m *CheckChannelUserNameReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckChannelUserNameReq.Unmarshal(m, b)
}
func (m *CheckChannelUserNameReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckChannelUserNameReq.Marshal(b, m, deterministic)
}
func (m *CheckChannelUserNameReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckChannelUserNameReq.Merge(m, src)
}
func (m *CheckChannelUserNameReq) XXX_Size() int {
	return xxx_messageInfo_CheckChannelUserNameReq.Size(m)
}
func (m *CheckChannelUserNameReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckChannelUserNameReq.DiscardUnknown(m)
}

var xxx_messageInfo_CheckChannelUserNameReq proto.InternalMessageInfo

func (m *CheckChannelUserNameReq) GetChannelId() int64 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

func (m *CheckChannelUserNameReq) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

type CheckChannelUserNameResp struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckChannelUserNameResp) Reset()         { *m = CheckChannelUserNameResp{} }
func (m *CheckChannelUserNameResp) String() string { return proto.CompactTextString(m) }
func (*CheckChannelUserNameResp) ProtoMessage()    {}
func (*CheckChannelUserNameResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{32}
}
func (m *CheckChannelUserNameResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckChannelUserNameResp.Unmarshal(m, b)
}
func (m *CheckChannelUserNameResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckChannelUserNameResp.Marshal(b, m, deterministic)
}
func (m *CheckChannelUserNameResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckChannelUserNameResp.Merge(m, src)
}
func (m *CheckChannelUserNameResp) XXX_Size() int {
	return xxx_messageInfo_CheckChannelUserNameResp.Size(m)
}
func (m *CheckChannelUserNameResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckChannelUserNameResp.DiscardUnknown(m)
}

var xxx_messageInfo_CheckChannelUserNameResp proto.InternalMessageInfo

func (m *CheckChannelUserNameResp) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

type GetChannelBySelfIDReq struct {
	SelfUserId           int64    `protobuf:"varint,1,opt,name=selfUserId,proto3" json:"selfUserId,omitempty"`
	ChannelId            int64    `protobuf:"varint,2,opt,name=channelId,proto3" json:"channelId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetChannelBySelfIDReq) Reset()         { *m = GetChannelBySelfIDReq{} }
func (m *GetChannelBySelfIDReq) String() string { return proto.CompactTextString(m) }
func (*GetChannelBySelfIDReq) ProtoMessage()    {}
func (*GetChannelBySelfIDReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{33}
}
func (m *GetChannelBySelfIDReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChannelBySelfIDReq.Unmarshal(m, b)
}
func (m *GetChannelBySelfIDReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChannelBySelfIDReq.Marshal(b, m, deterministic)
}
func (m *GetChannelBySelfIDReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChannelBySelfIDReq.Merge(m, src)
}
func (m *GetChannelBySelfIDReq) XXX_Size() int {
	return xxx_messageInfo_GetChannelBySelfIDReq.Size(m)
}
func (m *GetChannelBySelfIDReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChannelBySelfIDReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetChannelBySelfIDReq proto.InternalMessageInfo

func (m *GetChannelBySelfIDReq) GetSelfUserId() int64 {
	if m != nil {
		return m.SelfUserId
	}
	return 0
}

func (m *GetChannelBySelfIDReq) GetChannelId() int64 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

type GetChannelBySelfIDResp struct {
	Chat                 *mtproto.Chat `protobuf:"bytes,1,opt,name=chat,proto3" json:"chat,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetChannelBySelfIDResp) Reset()         { *m = GetChannelBySelfIDResp{} }
func (m *GetChannelBySelfIDResp) String() string { return proto.CompactTextString(m) }
func (*GetChannelBySelfIDResp) ProtoMessage()    {}
func (*GetChannelBySelfIDResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{34}
}
func (m *GetChannelBySelfIDResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChannelBySelfIDResp.Unmarshal(m, b)
}
func (m *GetChannelBySelfIDResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChannelBySelfIDResp.Marshal(b, m, deterministic)
}
func (m *GetChannelBySelfIDResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChannelBySelfIDResp.Merge(m, src)
}
func (m *GetChannelBySelfIDResp) XXX_Size() int {
	return xxx_messageInfo_GetChannelBySelfIDResp.Size(m)
}
func (m *GetChannelBySelfIDResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChannelBySelfIDResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetChannelBySelfIDResp proto.InternalMessageInfo

func (m *GetChannelBySelfIDResp) GetChat() *mtproto.Chat {
	if m != nil {
		return m.Chat
	}
	return nil
}

type GetChannelParticipantIdListDaoReq struct {
	ChannelId            int64    `protobuf:"varint,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetChannelParticipantIdListDaoReq) Reset()         { *m = GetChannelParticipantIdListDaoReq{} }
func (m *GetChannelParticipantIdListDaoReq) String() string { return proto.CompactTextString(m) }
func (*GetChannelParticipantIdListDaoReq) ProtoMessage()    {}
func (*GetChannelParticipantIdListDaoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{35}
}
func (m *GetChannelParticipantIdListDaoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChannelParticipantIdListDaoReq.Unmarshal(m, b)
}
func (m *GetChannelParticipantIdListDaoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChannelParticipantIdListDaoReq.Marshal(b, m, deterministic)
}
func (m *GetChannelParticipantIdListDaoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChannelParticipantIdListDaoReq.Merge(m, src)
}
func (m *GetChannelParticipantIdListDaoReq) XXX_Size() int {
	return xxx_messageInfo_GetChannelParticipantIdListDaoReq.Size(m)
}
func (m *GetChannelParticipantIdListDaoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChannelParticipantIdListDaoReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetChannelParticipantIdListDaoReq proto.InternalMessageInfo

func (m *GetChannelParticipantIdListDaoReq) GetChannelId() int64 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

type GetChannelParticipantIdListDaoResp struct {
	IdList               []int64  `protobuf:"varint,1,rep,packed,name=idList,proto3" json:"idList,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetChannelParticipantIdListDaoResp) Reset()         { *m = GetChannelParticipantIdListDaoResp{} }
func (m *GetChannelParticipantIdListDaoResp) String() string { return proto.CompactTextString(m) }
func (*GetChannelParticipantIdListDaoResp) ProtoMessage()    {}
func (*GetChannelParticipantIdListDaoResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{36}
}
func (m *GetChannelParticipantIdListDaoResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChannelParticipantIdListDaoResp.Unmarshal(m, b)
}
func (m *GetChannelParticipantIdListDaoResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChannelParticipantIdListDaoResp.Marshal(b, m, deterministic)
}
func (m *GetChannelParticipantIdListDaoResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChannelParticipantIdListDaoResp.Merge(m, src)
}
func (m *GetChannelParticipantIdListDaoResp) XXX_Size() int {
	return xxx_messageInfo_GetChannelParticipantIdListDaoResp.Size(m)
}
func (m *GetChannelParticipantIdListDaoResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChannelParticipantIdListDaoResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetChannelParticipantIdListDaoResp proto.InternalMessageInfo

func (m *GetChannelParticipantIdListDaoResp) GetIdList() []int64 {
	if m != nil {
		return m.IdList
	}
	return nil
}

type GetChannelFullBySelfIdReq struct {
	ChannelData          *ChannelCoreData `protobuf:"bytes,1,opt,name=channelData,proto3" json:"channelData,omitempty"`
	SelfUserId           int64            `protobuf:"varint,2,opt,name=selfUserId,proto3" json:"selfUserId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetChannelFullBySelfIdReq) Reset()         { *m = GetChannelFullBySelfIdReq{} }
func (m *GetChannelFullBySelfIdReq) String() string { return proto.CompactTextString(m) }
func (*GetChannelFullBySelfIdReq) ProtoMessage()    {}
func (*GetChannelFullBySelfIdReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{37}
}
func (m *GetChannelFullBySelfIdReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChannelFullBySelfIdReq.Unmarshal(m, b)
}
func (m *GetChannelFullBySelfIdReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChannelFullBySelfIdReq.Marshal(b, m, deterministic)
}
func (m *GetChannelFullBySelfIdReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChannelFullBySelfIdReq.Merge(m, src)
}
func (m *GetChannelFullBySelfIdReq) XXX_Size() int {
	return xxx_messageInfo_GetChannelFullBySelfIdReq.Size(m)
}
func (m *GetChannelFullBySelfIdReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChannelFullBySelfIdReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetChannelFullBySelfIdReq proto.InternalMessageInfo

func (m *GetChannelFullBySelfIdReq) GetChannelData() *ChannelCoreData {
	if m != nil {
		return m.ChannelData
	}
	return nil
}

func (m *GetChannelFullBySelfIdReq) GetSelfUserId() int64 {
	if m != nil {
		return m.SelfUserId
	}
	return 0
}

type GetChannelFullBySelfIdResp struct {
	Channel              *mtproto.TLChannelFull `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetChannelFullBySelfIdResp) Reset()         { *m = GetChannelFullBySelfIdResp{} }
func (m *GetChannelFullBySelfIdResp) String() string { return proto.CompactTextString(m) }
func (*GetChannelFullBySelfIdResp) ProtoMessage()    {}
func (*GetChannelFullBySelfIdResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{38}
}
func (m *GetChannelFullBySelfIdResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChannelFullBySelfIdResp.Unmarshal(m, b)
}
func (m *GetChannelFullBySelfIdResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChannelFullBySelfIdResp.Marshal(b, m, deterministic)
}
func (m *GetChannelFullBySelfIdResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChannelFullBySelfIdResp.Merge(m, src)
}
func (m *GetChannelFullBySelfIdResp) XXX_Size() int {
	return xxx_messageInfo_GetChannelFullBySelfIdResp.Size(m)
}
func (m *GetChannelFullBySelfIdResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChannelFullBySelfIdResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetChannelFullBySelfIdResp proto.InternalMessageInfo

func (m *GetChannelFullBySelfIdResp) GetChannel() *mtproto.TLChannelFull {
	if m != nil {
		return m.Channel
	}
	return nil
}

type CreateChannelMessageBoxReq struct {
	FromId               int64            `protobuf:"varint,1,opt,name=fromId,proto3" json:"fromId,omitempty"`
	ChannelId            int64            `protobuf:"varint,2,opt,name=channelId,proto3" json:"channelId,omitempty"`
	ClientRandomId       int64            `protobuf:"varint,3,opt,name=clientRandomId,proto3" json:"clientRandomId,omitempty"`
	Message              *mtproto.Message `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CreateChannelMessageBoxReq) Reset()         { *m = CreateChannelMessageBoxReq{} }
func (m *CreateChannelMessageBoxReq) String() string { return proto.CompactTextString(m) }
func (*CreateChannelMessageBoxReq) ProtoMessage()    {}
func (*CreateChannelMessageBoxReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{39}
}
func (m *CreateChannelMessageBoxReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateChannelMessageBoxReq.Unmarshal(m, b)
}
func (m *CreateChannelMessageBoxReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateChannelMessageBoxReq.Marshal(b, m, deterministic)
}
func (m *CreateChannelMessageBoxReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateChannelMessageBoxReq.Merge(m, src)
}
func (m *CreateChannelMessageBoxReq) XXX_Size() int {
	return xxx_messageInfo_CreateChannelMessageBoxReq.Size(m)
}
func (m *CreateChannelMessageBoxReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateChannelMessageBoxReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateChannelMessageBoxReq proto.InternalMessageInfo

func (m *CreateChannelMessageBoxReq) GetFromId() int64 {
	if m != nil {
		return m.FromId
	}
	return 0
}

func (m *CreateChannelMessageBoxReq) GetChannelId() int64 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

func (m *CreateChannelMessageBoxReq) GetClientRandomId() int64 {
	if m != nil {
		return m.ClientRandomId
	}
	return 0
}

func (m *CreateChannelMessageBoxReq) GetMessage() *mtproto.Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type ChannelMessageBox struct {
	SenderUserId         int64            `protobuf:"varint,1,opt,name=senderUserId,proto3" json:"senderUserId,omitempty"`
	ChannelId            int64            `protobuf:"varint,2,opt,name=channelId,proto3" json:"channelId,omitempty"`
	ChannelMessageBoxId  int32            `protobuf:"varint,3,opt,name=channelMessageBoxId,proto3" json:"channelMessageBoxId,omitempty"`
	MessageId            int64            `protobuf:"varint,4,opt,name=messageId,proto3" json:"messageId,omitempty"`
	RandomId             int64            `protobuf:"varint,5,opt,name=RandomId,proto3" json:"RandomId,omitempty"`
	Message              *mtproto.Message `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ChannelMessageBox) Reset()         { *m = ChannelMessageBox{} }
func (m *ChannelMessageBox) String() string { return proto.CompactTextString(m) }
func (*ChannelMessageBox) ProtoMessage()    {}
func (*ChannelMessageBox) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{40}
}
func (m *ChannelMessageBox) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelMessageBox.Unmarshal(m, b)
}
func (m *ChannelMessageBox) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelMessageBox.Marshal(b, m, deterministic)
}
func (m *ChannelMessageBox) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelMessageBox.Merge(m, src)
}
func (m *ChannelMessageBox) XXX_Size() int {
	return xxx_messageInfo_ChannelMessageBox.Size(m)
}
func (m *ChannelMessageBox) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelMessageBox.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelMessageBox proto.InternalMessageInfo

func (m *ChannelMessageBox) GetSenderUserId() int64 {
	if m != nil {
		return m.SenderUserId
	}
	return 0
}

func (m *ChannelMessageBox) GetChannelId() int64 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

func (m *ChannelMessageBox) GetChannelMessageBoxId() int32 {
	if m != nil {
		return m.ChannelMessageBoxId
	}
	return 0
}

func (m *ChannelMessageBox) GetMessageId() int64 {
	if m != nil {
		return m.MessageId
	}
	return 0
}

func (m *ChannelMessageBox) GetRandomId() int64 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

func (m *ChannelMessageBox) GetMessage() *mtproto.Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessageData struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DialogId             int64    `protobuf:"varint,2,opt,name=dialog_id,json=dialogId,proto3" json:"dialog_id,omitempty"`
	SenderUserId         int64    `protobuf:"varint,3,opt,name=sender_user_id,json=senderUserId,proto3" json:"sender_user_id,omitempty"`
	PeerType             int32    `protobuf:"varint,4,opt,name=peer_type,json=peerType,proto3" json:"peer_type,omitempty"`
	PeerId               int64    `protobuf:"varint,5,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	RandomId             int64    `protobuf:"varint,6,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	MessageType          int32    `protobuf:"varint,7,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`
	MessageData          string   `protobuf:"bytes,8,opt,name=message_data,json=messageData,proto3" json:"message_data,omitempty"`
	Date                 int32    `protobuf:"varint,9,opt,name=date,proto3" json:"date,omitempty"`
	Deleted              int32    `protobuf:"varint,10,opt,name=deleted,proto3" json:"deleted,omitempty"`
	CreatedAt            string   `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string   `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageData) Reset()         { *m = MessageData{} }
func (m *MessageData) String() string { return proto.CompactTextString(m) }
func (*MessageData) ProtoMessage()    {}
func (*MessageData) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{41}
}
func (m *MessageData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageData.Unmarshal(m, b)
}
func (m *MessageData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageData.Marshal(b, m, deterministic)
}
func (m *MessageData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageData.Merge(m, src)
}
func (m *MessageData) XXX_Size() int {
	return xxx_messageInfo_MessageData.Size(m)
}
func (m *MessageData) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageData.DiscardUnknown(m)
}

var xxx_messageInfo_MessageData proto.InternalMessageInfo

func (m *MessageData) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MessageData) GetDialogId() int64 {
	if m != nil {
		return m.DialogId
	}
	return 0
}

func (m *MessageData) GetSenderUserId() int64 {
	if m != nil {
		return m.SenderUserId
	}
	return 0
}

func (m *MessageData) GetPeerType() int32 {
	if m != nil {
		return m.PeerType
	}
	return 0
}

func (m *MessageData) GetPeerId() int64 {
	if m != nil {
		return m.PeerId
	}
	return 0
}

func (m *MessageData) GetRandomId() int64 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

func (m *MessageData) GetMessageType() int32 {
	if m != nil {
		return m.MessageType
	}
	return 0
}

func (m *MessageData) GetMessageData() string {
	if m != nil {
		return m.MessageData
	}
	return ""
}

func (m *MessageData) GetDate() int32 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *MessageData) GetDeleted() int32 {
	if m != nil {
		return m.Deleted
	}
	return 0
}

func (m *MessageData) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *MessageData) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

type DoToChannelMessageRes struct {
	Message              *mtproto.Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *DoToChannelMessageRes) Reset()         { *m = DoToChannelMessageRes{} }
func (m *DoToChannelMessageRes) String() string { return proto.CompactTextString(m) }
func (*DoToChannelMessageRes) ProtoMessage()    {}
func (*DoToChannelMessageRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{42}
}
func (m *DoToChannelMessageRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoToChannelMessageRes.Unmarshal(m, b)
}
func (m *DoToChannelMessageRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoToChannelMessageRes.Marshal(b, m, deterministic)
}
func (m *DoToChannelMessageRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoToChannelMessageRes.Merge(m, src)
}
func (m *DoToChannelMessageRes) XXX_Size() int {
	return xxx_messageInfo_DoToChannelMessageRes.Size(m)
}
func (m *DoToChannelMessageRes) XXX_DiscardUnknown() {
	xxx_messageInfo_DoToChannelMessageRes.DiscardUnknown(m)
}

var xxx_messageInfo_DoToChannelMessageRes proto.InternalMessageInfo

func (m *DoToChannelMessageRes) GetMessage() *mtproto.Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type GetChannelMessageReq struct {
	ChannelId            int64    `protobuf:"varint,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	Id                   int64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetChannelMessageReq) Reset()         { *m = GetChannelMessageReq{} }
func (m *GetChannelMessageReq) String() string { return proto.CompactTextString(m) }
func (*GetChannelMessageReq) ProtoMessage()    {}
func (*GetChannelMessageReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{43}
}
func (m *GetChannelMessageReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChannelMessageReq.Unmarshal(m, b)
}
func (m *GetChannelMessageReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChannelMessageReq.Marshal(b, m, deterministic)
}
func (m *GetChannelMessageReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChannelMessageReq.Merge(m, src)
}
func (m *GetChannelMessageReq) XXX_Size() int {
	return xxx_messageInfo_GetChannelMessageReq.Size(m)
}
func (m *GetChannelMessageReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChannelMessageReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetChannelMessageReq proto.InternalMessageInfo

func (m *GetChannelMessageReq) GetChannelId() int64 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

func (m *GetChannelMessageReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetChannelMessageRes struct {
	Message              *mtproto.Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetChannelMessageRes) Reset()         { *m = GetChannelMessageRes{} }
func (m *GetChannelMessageRes) String() string { return proto.CompactTextString(m) }
func (*GetChannelMessageRes) ProtoMessage()    {}
func (*GetChannelMessageRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eb5b11d5b15e5ec, []int{44}
}
func (m *GetChannelMessageRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChannelMessageRes.Unmarshal(m, b)
}
func (m *GetChannelMessageRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChannelMessageRes.Marshal(b, m, deterministic)
}
func (m *GetChannelMessageRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChannelMessageRes.Merge(m, src)
}
func (m *GetChannelMessageRes) XXX_Size() int {
	return xxx_messageInfo_GetChannelMessageRes.Size(m)
}
func (m *GetChannelMessageRes) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChannelMessageRes.DiscardUnknown(m)
}

var xxx_messageInfo_GetChannelMessageRes proto.InternalMessageInfo

func (m *GetChannelMessageRes) GetMessage() *mtproto.Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func init() {
	proto.RegisterType((*ChannelParticipant)(nil), "channels.ChannelParticipant")
	proto.RegisterType((*Channel)(nil), "channels.Channel")
	proto.RegisterType((*MakeChannelParticipant2ByDOReq)(nil), "channels.MakeChannelParticipant2ByDOReq")
	proto.RegisterType((*ChannelParticipantRes)(nil), "channels.ChannelParticipantRes")
	proto.RegisterType((*ChannelCoreByIdReq)(nil), "channels.ChannelCoreByIdReq")
	proto.RegisterType((*ChannelCoreByCreateChannelReq)(nil), "channels.ChannelCoreByCreateChannelReq")
	proto.RegisterType((*ChannelCoreData)(nil), "channels.ChannelCoreData")
	proto.RegisterType((*ExportedChatInviteResp)(nil), "channels.ExportedChatInviteResp")
	proto.RegisterType((*CheckUserIsAdministratorReq)(nil), "channels.CheckUserIsAdministratorReq")
	proto.RegisterType((*CheckUserIsAdministratorResp)(nil), "channels.CheckUserIsAdministratorResp")
	proto.RegisterType((*GetChannelParticipantListResp)(nil), "channels.GetChannelParticipantListResp")
	proto.RegisterType((*GetChannelParticipantIdListResp)(nil), "channels.GetChannelParticipantIdListResp")
	proto.RegisterType((*GetChannelParticipantsResp)(nil), "channels.GetChannelParticipantsResp")
	proto.RegisterType((*AddChannelUserReq)(nil), "channels.AddChannelUserReq")
	proto.RegisterType((*AddChannelUserResp)(nil), "channels.AddChannelUserResp")
	proto.RegisterType((*ToChannelReq)(nil), "channels.ToChannelReq")
	proto.RegisterType((*ToChannelResp)(nil), "channels.ToChannelResp")
	proto.RegisterType((*CheckDeleteChannelUserReq)(nil), "channels.CheckDeleteChannelUserReq")
	proto.RegisterType((*CheckDeleteChannelUserResp)(nil), "channels.CheckDeleteChannelUserResp")
	proto.RegisterType((*DeleteChannelUserReq)(nil), "channels.DeleteChannelUserReq")
	proto.RegisterType((*DeleteChannelUserResp)(nil), "channels.DeleteChannelUserResp")
	proto.RegisterType((*EditChannelTitleReq)(nil), "channels.EditChannelTitleReq")
	proto.RegisterType((*EditChannelTitleResp)(nil), "channels.EditChannelTitleResp")
	proto.RegisterType((*EditChannelPhotoReq)(nil), "channels.EditChannelPhotoReq")
	proto.RegisterType((*EditChannelPhotoResp)(nil), "channels.EditChannelPhotoResp")
	proto.RegisterType((*EditChannelAdminReq)(nil), "channels.EditChannelAdminReq")
	proto.RegisterType((*EditChannelAdminResp)(nil), "channels.EditChannelAdminResp")
	proto.RegisterType((*ToggleChannelAdminsReq)(nil), "channels.ToggleChannelAdminsReq")
	proto.RegisterType((*ToggleChannelAdminsResp)(nil), "channels.ToggleChannelAdminsResp")
	proto.RegisterType((*GetChannelListBySelfAndIDListReq)(nil), "channels.GetChannelListBySelfAndIDListReq")
	proto.RegisterType((*GetChannelListBySelfAndIDListResp)(nil), "channels.GetChannelListBySelfAndIDListResp")
	proto.RegisterType((*CheckChannelUserNameReq)(nil), "channels.CheckChannelUserNameReq")
	proto.RegisterType((*CheckChannelUserNameResp)(nil), "channels.CheckChannelUserNameResp")
	proto.RegisterType((*GetChannelBySelfIDReq)(nil), "channels.GetChannelBySelfIDReq")
	proto.RegisterType((*GetChannelBySelfIDResp)(nil), "channels.GetChannelBySelfIDResp")
	proto.RegisterType((*GetChannelParticipantIdListDaoReq)(nil), "channels.GetChannelParticipantIdListDaoReq")
	proto.RegisterType((*GetChannelParticipantIdListDaoResp)(nil), "channels.GetChannelParticipantIdListDaoResp")
	proto.RegisterType((*GetChannelFullBySelfIdReq)(nil), "channels.GetChannelFullBySelfIdReq")
	proto.RegisterType((*GetChannelFullBySelfIdResp)(nil), "channels.GetChannelFullBySelfIdResp")
	proto.RegisterType((*CreateChannelMessageBoxReq)(nil), "channels.CreateChannelMessageBoxReq")
	proto.RegisterType((*ChannelMessageBox)(nil), "channels.ChannelMessageBox")
	proto.RegisterType((*MessageData)(nil), "channels.MessageData")
	proto.RegisterType((*DoToChannelMessageRes)(nil), "channels.DoToChannelMessageRes")
	proto.RegisterType((*GetChannelMessageReq)(nil), "channels.GetChannelMessageReq")
	proto.RegisterType((*GetChannelMessageRes)(nil), "channels.GetChannelMessageRes")
}

func init() { proto.RegisterFile("channels.proto", fileDescriptor_6eb5b11d5b15e5ec) }

var fileDescriptor_6eb5b11d5b15e5ec = []byte{
	// 1901 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x59, 0x5b, 0x6f, 0xe3, 0xc6,
	0x15, 0x06, 0x65, 0x5b, 0x97, 0x23, 0x5f, 0xd6, 0xb3, 0xb6, 0x24, 0x53, 0xbe, 0xc8, 0x93, 0xc4,
	0x75, 0xe2, 0xc0, 0x08, 0x1c, 0xa0, 0x0f, 0x4d, 0x7a, 0x91, 0xa5, 0x6d, 0xa3, 0x76, 0x77, 0xbb,
	0xe1, 0x7a, 0x5b, 0x74, 0xd1, 0x42, 0xe5, 0x8a, 0xb3, 0x16, 0x6b, 0x59, 0x64, 0x34, 0xf4, 0xd6,
	0x46, 0x81, 0x22, 0x0f, 0x7d, 0x6b, 0x81, 0xbe, 0xf4, 0x37, 0xf4, 0x17, 0xf4, 0xa9, 0x28, 0xd0,
	0x5f, 0xd3, 0xc7, 0xfe, 0x87, 0x62, 0x2e, 0x24, 0x87, 0xe4, 0x90, 0x74, 0x37, 0x58, 0x20, 0x6f,
	0x9a, 0x73, 0x66, 0xce, 0x7d, 0xce, 0x9c, 0x8f, 0x82, 0xf5, 0xc9, 0xd4, 0x9e, 0xcf, 0xc9, 0x8c,
	0x9e, 0xfa, 0x0b, 0x2f, 0xf0, 0x50, 0x3d, 0x5c, 0x9b, 0x6b, 0xd7, 0x77, 0xe3, 0xe0, 0xce, 0x27,
	0x82, 0x81, 0xff, 0x5d, 0x01, 0x34, 0x10, 0xbc, 0x67, 0xf6, 0x22, 0x70, 0x27, 0xae, 0x6f, 0xcf,
	0x03, 0xb4, 0x0e, 0x15, 0xd7, 0xe9, 0x18, 0x3d, 0xe3, 0x78, 0xc9, 0xaa, 0xb8, 0x0e, 0xda, 0x03,
	0x90, 0x12, 0xc6, 0xae, 0xd3, 0xa9, 0x70, 0x7a, 0x43, 0x52, 0x46, 0x0e, 0x6a, 0x43, 0xed, 0x86,
	0x92, 0x05, 0xe3, 0x2d, 0x71, 0x5e, 0x95, 0x2d, 0x47, 0x0e, 0xfa, 0x10, 0x1e, 0xf8, 0xb1, 0x58,
	0xae, 0xb8, 0xb3, 0xdc, 0x33, 0x8e, 0x57, 0xac, 0x0d, 0x85, 0x7e, 0x71, 0xe7, 0x13, 0x74, 0x04,
	0x1b, 0xee, 0xfc, 0x8d, 0x1b, 0x90, 0xc5, 0x38, 0x94, 0xb5, 0xc2, 0x65, 0xad, 0x49, 0xf2, 0x0b,
	0x21, 0x72, 0x0f, 0x40, 0x10, 0x9c, 0xb1, 0x1d, 0x74, 0xaa, 0x5c, 0x58, 0x43, 0x52, 0xfa, 0x01,
	0xea, 0x42, 0xe3, 0x77, 0x9e, 0x3b, 0x17, 0xdc, 0x1a, 0xe7, 0xd6, 0x05, 0xa1, 0x1f, 0xa0, 0x2d,
	0x58, 0xa1, 0x81, 0x1d, 0x90, 0x4e, 0x9d, 0x33, 0xc4, 0x82, 0x3b, 0xb7, 0x20, 0xb6, 0x94, 0xd8,
	0xe8, 0x19, 0xc7, 0x0d, 0xab, 0x21, 0x29, 0xfd, 0x80, 0xb1, 0x6f, 0x7c, 0x27, 0x64, 0x83, 0x60,
	0x4b, 0x4a, 0x3f, 0xc0, 0xff, 0x5a, 0x82, 0x9a, 0x8c, 0x60, 0x26, 0x6c, 0x47, 0xb0, 0xc1, 0xe5,
	0x78, 0xb1, 0x4f, 0x22, 0x76, 0x6b, 0x92, 0x2c, 0x7d, 0x3a, 0x80, 0xa6, 0x3d, 0x99, 0x10, 0x4a,
	0xc7, 0x53, 0x9b, 0x4e, 0x65, 0x0c, 0x41, 0x90, 0xbe, 0xb0, 0xe9, 0x94, 0x79, 0xb5, 0xb0, 0xe7,
	0x8e, 0x77, 0xcd, 0x44, 0x2c, 0x73, 0x76, 0x5d, 0x10, 0x46, 0x0e, 0x3a, 0x81, 0x4d, 0x35, 0xc8,
	0x13, 0xef, 0x66, 0x1e, 0xf0, 0xd8, 0xad, 0x58, 0x6a, 0xf4, 0x07, 0x8c, 0xce, 0x42, 0x10, 0xb8,
	0xc1, 0x8c, 0xf0, 0xc8, 0x35, 0x2c, 0xb1, 0x60, 0x54, 0xfb, 0x95, 0x77, 0x23, 0x22, 0xd6, 0xb0,
	0xc4, 0x02, 0xed, 0x40, 0xdd, 0x9f, 0x7a, 0x81, 0xc7, 0x94, 0xd6, 0xb9, 0xd2, 0x1a, 0x5f, 0x8f,
	0x1c, 0x84, 0x60, 0x79, 0xe6, 0xce, 0xaf, 0x64, 0xb4, 0xf8, 0x6f, 0xf4, 0x01, 0xac, 0xdb, 0xce,
	0xb5, 0x3b, 0xa7, 0x63, 0x32, 0xb7, 0x5f, 0xcd, 0x88, 0xc3, 0x83, 0xb5, 0x62, 0xad, 0x09, 0xea,
	0x23, 0x41, 0x44, 0x3d, 0x68, 0x3a, 0xc4, 0x9e, 0x04, 0xee, 0x1b, 0x16, 0xc1, 0x4e, 0x93, 0xef,
	0x51, 0x49, 0xa8, 0x03, 0xb5, 0x37, 0x64, 0x41, 0x5d, 0x6f, 0xde, 0x59, 0xe5, 0xdc, 0x70, 0xc9,
	0xd4, 0xb2, 0xb8, 0x77, 0xd6, 0x38, 0x99, 0xff, 0x4e, 0xa5, 0x6f, 0xbd, 0x38, 0x7d, 0x1b, 0xe9,
	0xf4, 0xdd, 0xc2, 0xfe, 0x13, 0xfb, 0x8a, 0x64, 0xef, 0xc0, 0xd9, 0xf9, 0xdd, 0xf0, 0xe7, 0x16,
	0xf9, 0x0a, 0xfd, 0x00, 0x9a, 0x4a, 0x14, 0x79, 0x76, 0x9b, 0x67, 0xbb, 0xa7, 0xd1, 0x0d, 0xcb,
	0x1e, 0xb5, 0xd4, 0x03, 0xa8, 0x05, 0x55, 0x4a, 0x66, 0xaf, 0x47, 0x61, 0xee, 0xe5, 0x0a, 0xff,
	0x02, 0xb6, 0x35, 0x47, 0x09, 0x45, 0xdf, 0xd7, 0x29, 0xec, 0x9e, 0x5e, 0x07, 0xfc, 0xca, 0x96,
	0xe9, 0xc3, 0x67, 0xd1, 0x8d, 0x1e, 0x78, 0x0b, 0x72, 0x7e, 0x37, 0x72, 0x98, 0x17, 0xbb, 0x10,
	0xdf, 0x57, 0x59, 0xa1, 0x31, 0x01, 0xff, 0xc5, 0x80, 0xbd, 0xc4, 0xa1, 0x01, 0x8f, 0x9f, 0x24,
	0xb1, 0xf3, 0x61, 0x94, 0x3d, 0x5e, 0xc5, 0xa1, 0x00, 0x41, 0x19, 0xb1, 0xa4, 0xae, 0xca, 0x0a,
	0x1f, 0xcf, 0x5c, 0x1a, 0x74, 0x2a, 0xbd, 0x25, 0x56, 0xc2, 0xa2, 0x0d, 0x3c, 0x76, 0xa9, 0x52,
	0x78, 0x4b, 0xda, 0xc2, 0x5b, 0x56, 0x0a, 0x0f, 0x7f, 0x6d, 0xc0, 0x86, 0x62, 0xce, 0xd0, 0x0e,
	0x6c, 0x74, 0x02, 0x35, 0x69, 0xaf, 0x8c, 0xc8, 0x66, 0x26, 0x05, 0x56, 0xb8, 0x03, 0xfd, 0x08,
	0x56, 0x95, 0x90, 0x50, 0x6e, 0x4e, 0x59, 0xd2, 0x12, 0x27, 0xf0, 0xc7, 0xd0, 0x7a, 0x74, 0xeb,
	0x7b, 0x8b, 0x80, 0x38, 0x83, 0xa9, 0x1d, 0x8c, 0x78, 0x83, 0xb1, 0x08, 0xf5, 0xa3, 0xd2, 0x37,
	0xe2, 0xd2, 0xc7, 0x57, 0xd0, 0x1d, 0x4c, 0xc9, 0xe4, 0x8a, 0xdf, 0x67, 0xda, 0x67, 0xf5, 0xee,
	0xd2, 0x60, 0xc1, 0x82, 0xc3, 0x82, 0xf7, 0x69, 0xda, 0xf6, 0x9d, 0x8c, 0x25, 0xa1, 0x9f, 0xb1,
	0x0f, 0x4a, 0x53, 0xad, 0xa8, 0x4d, 0x15, 0x7f, 0x17, 0x76, 0xf3, 0x95, 0x51, 0x9f, 0x17, 0x5c,
	0x60, 0x07, 0x37, 0x94, 0x2b, 0xab, 0x5b, 0x72, 0x85, 0x7f, 0x0b, 0x7b, 0x3f, 0x21, 0x41, 0xd6,
	0x73, 0x96, 0x1e, 0x7e, 0xf0, 0x87, 0xa9, 0xa8, 0x19, 0x3c, 0x6a, 0x85, 0x95, 0x97, 0x0c, 0xda,
	0xf7, 0xe0, 0x40, 0xab, 0x41, 0x94, 0x00, 0xd7, 0xd1, 0x86, 0x5a, 0x58, 0x23, 0x06, 0xaf, 0x91,
	0xaa, 0xcb, 0x99, 0x78, 0x0a, 0xa6, 0xf6, 0x2c, 0xe5, 0xc7, 0x7e, 0x9a, 0x31, 0x8d, 0x85, 0xf1,
	0x28, 0x32, 0xed, 0xe2, 0xb1, 0x3c, 0x49, 0x75, 0x12, 0x92, 0x56, 0xfe, 0x11, 0x36, 0xfb, 0x8e,
	0x23, 0xf7, 0xb1, 0x20, 0xbe, 0x75, 0x8a, 0x76, 0x41, 0xbe, 0x3c, 0x8b, 0xe8, 0x76, 0xc7, 0x04,
	0x96, 0x07, 0x91, 0xb1, 0xe4, 0xa3, 0x88, 0xb7, 0x00, 0xa5, 0xf5, 0x53, 0x1f, 0x4f, 0x60, 0xf5,
	0xc2, 0x53, 0x2e, 0xdc, 0x5b, 0x19, 0xb4, 0x0f, 0xc0, 0xba, 0x8b, 0x78, 0x56, 0xa4, 0x45, 0x0a,
	0x05, 0x9f, 0xc1, 0x9a, 0xa2, 0x84, 0xfa, 0xe8, 0x10, 0x96, 0x27, 0x53, 0x3b, 0x6c, 0x32, 0x6b,
	0x6a, 0xaa, 0x03, 0x8b, 0xb3, 0xf0, 0xdf, 0x0c, 0xd8, 0xe1, 0xf5, 0x36, 0x24, 0x33, 0x12, 0xf5,
	0x84, 0x6f, 0x14, 0xb7, 0x7d, 0x00, 0xcf, 0x27, 0x0b, 0xd1, 0x3b, 0x42, 0x33, 0x63, 0x0a, 0xc2,
	0xb0, 0xea, 0x70, 0x65, 0x2f, 0xd4, 0xf8, 0x25, 0x68, 0x78, 0x17, 0xcc, 0x3c, 0xab, 0xa8, 0x8f,
	0xff, 0x6a, 0xc0, 0xd6, 0xb7, 0xcb, 0xde, 0x36, 0x6c, 0xeb, 0x4d, 0xfd, 0xda, 0x80, 0x87, 0x8f,
	0x1c, 0x37, 0x2c, 0xfd, 0x0b, 0xd6, 0x17, 0xbf, 0x89, 0xa5, 0xc4, 0x71, 0x83, 0x64, 0x01, 0xc4,
	0x14, 0x7d, 0x17, 0xc6, 0x2d, 0xd8, 0xca, 0x5a, 0x40, 0x7d, 0xfc, 0xa7, 0xa4, 0x69, 0xcf, 0xd8,
	0xe3, 0xff, 0xce, 0x4c, 0xeb, 0x40, 0x38, 0x5d, 0xc8, 0xf8, 0x85, 0xcb, 0x94, 0x79, 0xd2, 0x0a,
	0xea, 0xe3, 0x7f, 0x24, 0xcd, 0xe3, 0x9d, 0xf0, 0x9d, 0xe5, 0xf8, 0x14, 0x10, 0x49, 0xe9, 0x8a,
	0x2c, 0xd5, 0x70, 0x98, 0x3b, 0xae, 0x68, 0xce, 0xfc, 0x6d, 0xab, 0x5b, 0xe1, 0x32, 0xe5, 0x8e,
	0xb4, 0x9a, 0xfa, 0xf8, 0xcf, 0x06, 0xb4, 0x2e, 0xbc, 0xcb, 0xcb, 0x19, 0x51, 0x59, 0xf4, 0xad,
	0x3d, 0x8a, 0xfb, 0x4f, 0xe2, 0xfd, 0x40, 0xef, 0x43, 0x72, 0x22, 0xe3, 0x4e, 0xd4, 0x53, 0x63,
	0x1a, 0xde, 0x81, 0xb6, 0xd6, 0x18, 0xea, 0xe3, 0x97, 0xd0, 0x8b, 0x5b, 0x35, 0x6b, 0xde, 0xe7,
	0x77, 0xcf, 0xc9, 0xec, 0x75, 0x7f, 0xee, 0x8c, 0x86, 0xa2, 0xd1, 0x7f, 0x95, 0xea, 0x44, 0x46,
	0xba, 0x13, 0x31, 0xe3, 0x44, 0xe3, 0x97, 0xa3, 0x42, 0xf8, 0x0c, 0x7c, 0x01, 0x87, 0x25, 0xb2,
	0xa9, 0x8f, 0xde, 0x83, 0x15, 0xd6, 0x9a, 0xc2, 0x17, 0x2a, 0xd5, 0xb6, 0x04, 0x0f, 0x3f, 0x87,
	0x36, 0x6f, 0x10, 0xca, 0x7d, 0x7b, 0x6a, 0x5f, 0x93, 0xd2, 0x61, 0x08, 0x99, 0x50, 0xbf, 0x91,
	0x9b, 0x79, 0xe4, 0x1a, 0x56, 0xb4, 0xc6, 0x67, 0xd0, 0xd1, 0x0b, 0x2d, 0x78, 0x77, 0x5f, 0xc0,
	0x76, 0xec, 0x92, 0x70, 0x67, 0x34, 0xbc, 0x4f, 0x8c, 0x12, 0x66, 0xa6, 0x41, 0x17, 0xfe, 0x0c,
	0x5a, 0x3a, 0xb1, 0xf7, 0x6b, 0xea, 0x7d, 0x35, 0xcc, 0x99, 0x97, 0x7a, 0x68, 0x7b, 0xe5, 0x33,
	0xe3, 0xe7, 0x80, 0xcb, 0x44, 0x88, 0xa0, 0xc8, 0x3c, 0x27, 0x9f, 0xfb, 0x5b, 0xd8, 0x89, 0x4f,
	0xff, 0xf8, 0x66, 0x16, 0x7a, 0xc0, 0x87, 0xd5, 0xcf, 0xa0, 0x29, 0xf5, 0xb0, 0x8a, 0x2e, 0x2f,
	0x79, 0x75, 0x77, 0xe9, 0x1b, 0xf8, 0x54, 0x1d, 0x34, 0x92, 0x9a, 0xa9, 0x8f, 0x3e, 0x49, 0xdf,
	0xb4, 0x56, 0x76, 0xc6, 0x60, 0x87, 0xa2, 0x6b, 0x86, 0xff, 0x6e, 0x80, 0x99, 0x18, 0x97, 0x9f,
	0x10, 0x4a, 0xed, 0x4b, 0x72, 0xee, 0xdd, 0x32, 0x5f, 0x5a, 0x50, 0x7d, 0xbd, 0x60, 0x38, 0x4d,
	0x46, 0x50, 0xae, 0x8a, 0x93, 0x8b, 0x8e, 0x60, 0x7d, 0x32, 0x73, 0xc9, 0x3c, 0xb0, 0x24, 0xca,
	0x93, 0x9d, 0x26, 0x45, 0x45, 0x1f, 0x41, 0xed, 0x5a, 0xa8, 0xe3, 0x5d, 0xa6, 0x79, 0xf6, 0x20,
	0x32, 0x57, 0x9a, 0x61, 0x85, 0x1b, 0xf0, 0x7f, 0x0d, 0xd8, 0xcc, 0x98, 0xc8, 0xde, 0x2e, 0x4a,
	0xe6, 0x4e, 0x88, 0xaf, 0xa5, 0x95, 0x09, 0x5a, 0x89, 0xad, 0x9f, 0xc0, 0xc3, 0x49, 0x5a, 0xac,
	0x34, 0x78, 0xc5, 0xd2, 0xb1, 0x98, 0x3c, 0x69, 0xd4, 0x28, 0x84, 0xb3, 0x31, 0x81, 0xdd, 0xbf,
	0xc8, 0x6b, 0xf1, 0x09, 0xa0, 0xae, 0xf3, 0xb7, 0x5a, 0xe6, 0xef, 0x7f, 0x2a, 0xd0, 0x94, 0x44,
	0x5e, 0x18, 0x69, 0x74, 0xde, 0x85, 0x86, 0xe3, 0xda, 0x33, 0xef, 0x32, 0x1e, 0xb1, 0xeb, 0x82,
	0xc0, 0x9b, 0xe4, 0xba, 0x08, 0xc1, 0x38, 0xf9, 0x65, 0x23, 0x19, 0x98, 0x2e, 0x34, 0x7c, 0x42,
	0x16, 0xea, 0x87, 0x8d, 0x3a, 0x23, 0xf0, 0x2f, 0x1a, 0x6d, 0xa8, 0x71, 0x66, 0xf4, 0x25, 0xa3,
	0xca, 0x96, 0xe2, 0x54, 0x8c, 0xe6, 0xab, 0x29, 0x34, 0x7f, 0x08, 0xab, 0xd2, 0x01, 0x21, 0x55,
	0x7c, 0xc3, 0x68, 0x4a, 0x1a, 0x17, 0xac, 0x6c, 0x71, 0xd8, 0xfd, 0xa8, 0xf3, 0x26, 0x15, 0x6e,
	0xe1, 0xbe, 0x86, 0x40, 0xb9, 0xa1, 0x00, 0xe5, 0x0e, 0xd4, 0xc4, 0x44, 0x12, 0x02, 0xf3, 0x70,
	0x99, 0x82, 0xd0, 0xcd, 0x62, 0x08, 0xbd, 0x9a, 0x86, 0xd0, 0x03, 0xd8, 0x1e, 0x7a, 0xd1, 0x58,
	0x19, 0xa6, 0x81, 0x50, 0x35, 0x59, 0x46, 0x59, 0xb2, 0x86, 0xb0, 0x15, 0xdf, 0xca, 0x48, 0x46,
	0x59, 0xab, 0x16, 0x29, 0xad, 0x84, 0x29, 0xc5, 0xe7, 0x5a, 0x29, 0xff, 0x97, 0x25, 0x67, 0xff,
	0xdc, 0x84, 0xa6, 0xf5, 0x6c, 0x10, 0xe2, 0x09, 0x34, 0x85, 0x6e, 0xc1, 0x17, 0x02, 0x74, 0x1c,
	0xb7, 0xa5, 0xe2, 0x0f, 0x09, 0xe6, 0x41, 0x21, 0xfc, 0x24, 0x14, 0x3d, 0x01, 0xf4, 0x94, 0xfc,
	0x3e, 0x05, 0xde, 0xd1, 0xae, 0xb6, 0xef, 0x49, 0x5c, 0x6f, 0xe6, 0x77, 0x45, 0x34, 0x81, 0xbd,
	0xb4, 0xb8, 0x44, 0x9f, 0x42, 0xdf, 0xc9, 0x91, 0x9c, 0x06, 0xff, 0x45, 0x4a, 0xbe, 0x04, 0x94,
	0xc5, 0xc9, 0x28, 0xff, 0x80, 0xd9, 0x8b, 0x59, 0x39, 0x00, 0xdb, 0x95, 0x6f, 0xac, 0x06, 0xdf,
	0xa2, 0x0f, 0x54, 0xc1, 0xb9, 0x80, 0xdb, 0x3c, 0xba, 0xcf, 0x36, 0xea, 0xa3, 0xb1, 0xfa, 0x0a,
	0xa5, 0x20, 0x71, 0x91, 0x13, 0x4a, 0xe4, 0x8a, 0x21, 0xf5, 0x04, 0xba, 0x05, 0x8f, 0x64, 0x91,
	0x8a, 0x0f, 0x4b, 0x54, 0x28, 0x98, 0xfa, 0x57, 0xea, 0x24, 0xa0, 0x02, 0xdf, 0x22, 0xf9, 0xef,
	0x97, 0xc8, 0x17, 0xb8, 0xfb, 0x67, 0xb0, 0x9e, 0xc4, 0xaa, 0xa8, 0x1b, 0x9f, 0xcb, 0xa0, 0x68,
	0x73, 0x37, 0x9f, 0x49, 0x7d, 0xf4, 0x39, 0x34, 0xa2, 0x36, 0x81, 0x5a, 0xf1, 0x56, 0x15, 0xf7,
	0x9a, 0x6d, 0x2d, 0x9d, 0x87, 0xb2, 0xa5, 0x07, 0x7c, 0xe8, 0xbd, 0x54, 0xb6, 0x75, 0xc0, 0x4f,
	0xf5, 0x37, 0x1f, 0x37, 0xa2, 0x0b, 0xd8, 0xcc, 0xca, 0xdf, 0x8f, 0x8f, 0x6a, 0x45, 0x1f, 0x14,
	0xf2, 0xa9, 0x8f, 0xbe, 0x84, 0x07, 0x69, 0x7c, 0x85, 0xf6, 0x94, 0x7b, 0x90, 0x45, 0x7f, 0xe6,
	0x7e, 0x11, 0x3b, 0x23, 0x92, 0x63, 0xa2, 0x1c, 0x91, 0x21, 0x6a, 0xcb, 0x11, 0x19, 0xc1, 0xa9,
	0x94, 0x48, 0x7e, 0x59, 0x72, 0x44, 0x86, 0x48, 0x2b, 0x47, 0x64, 0x04, 0x69, 0xd0, 0x4b, 0x78,
	0xa8, 0x01, 0x11, 0xa8, 0xa7, 0xe6, 0x58, 0x07, 0x78, 0xcc, 0xc3, 0x92, 0x1d, 0xd4, 0x47, 0xb7,
	0xea, 0xe7, 0x2c, 0x0d, 0x52, 0x40, 0x1f, 0xe9, 0x2a, 0x5c, 0x0f, 0x57, 0xcc, 0x93, 0x7b, 0xef,
	0xa5, 0x3e, 0xfa, 0x0d, 0x6c, 0xe9, 0x40, 0x00, 0x3a, 0x4c, 0x95, 0x58, 0x16, 0x79, 0x98, 0xb8,
	0x6c, 0x0b, 0xf5, 0xd1, 0x2f, 0x01, 0x65, 0x07, 0x7b, 0x74, 0xa0, 0xb3, 0x50, 0x41, 0x13, 0x6a,
	0x63, 0xcd, 0xc1, 0x05, 0x7f, 0x80, 0xfd, 0xe2, 0x89, 0x1d, 0x9d, 0xdc, 0xab, 0xe9, 0x08, 0x78,
	0x60, 0x7e, 0x7c, 0xff, 0xcd, 0xe2, 0xfa, 0xea, 0xc7, 0x6e, 0xf5, 0xfa, 0xe6, 0x42, 0x02, 0x7d,
	0xbb, 0xca, 0x4c, 0xef, 0xbf, 0x86, 0x76, 0xce, 0x28, 0x8e, 0xd4, 0xfb, 0x9f, 0x3b, 0xad, 0x9b,
	0xdd, 0x4c, 0xc3, 0x54, 0x44, 0x3c, 0x06, 0x94, 0x1d, 0x74, 0xd0, 0xb6, 0x32, 0x00, 0xc4, 0x13,
	0x58, 0xa2, 0x29, 0x68, 0xa7, 0xa3, 0xe7, 0xb0, 0x99, 0x99, 0x55, 0xd4, 0x56, 0xa3, 0x1b, 0x87,
	0xcc, 0x62, 0x3e, 0x3d, 0x87, 0x97, 0xd1, 0x5f, 0x7d, 0xaf, 0xaa, 0x7c, 0xc0, 0xf9, 0xf4, 0x7f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0xe4, 0x74, 0x3a, 0xc2, 0x0d, 0x1c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RPCChannelsClient is the client API for RPCChannels service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCChannelsClient interface {
	// channel_data
	MakeChannelParticipant2ByDO(ctx context.Context, in *MakeChannelParticipant2ByDOReq, opts ...grpc.CallOption) (*ChannelParticipantRes, error)
	NewChannelCoreById(ctx context.Context, in *ChannelCoreByIdReq, opts ...grpc.CallOption) (*ChannelCoreData, error)
	NewChannelCoreByCreateChannel(ctx context.Context, in *ChannelCoreByCreateChannelReq, opts ...grpc.CallOption) (*ChannelCoreData, error)
	ExportedChatInvite(ctx context.Context, in *ChannelCoreData, opts ...grpc.CallOption) (*ExportedChatInviteResp, error)
	CheckUserIsAdministrator(ctx context.Context, in *CheckUserIsAdministratorReq, opts ...grpc.CallOption) (*CheckUserIsAdministratorResp, error)
	GetChannelParticipantList(ctx context.Context, in *ChannelCoreData, opts ...grpc.CallOption) (*GetChannelParticipantListResp, error)
	GetChannelParticipantIdList(ctx context.Context, in *ChannelCoreData, opts ...grpc.CallOption) (*GetChannelParticipantIdListResp, error)
	GetChannelParticipants(ctx context.Context, in *ChannelCoreData, opts ...grpc.CallOption) (*GetChannelParticipantsResp, error)
	AddChannelUser(ctx context.Context, in *AddChannelUserReq, opts ...grpc.CallOption) (*AddChannelUserResp, error)
	ToChannel(ctx context.Context, in *ToChannelReq, opts ...grpc.CallOption) (*ToChannelResp, error)
	CheckDeleteChannelUser(ctx context.Context, in *CheckDeleteChannelUserReq, opts ...grpc.CallOption) (*CheckDeleteChannelUserResp, error)
	DeleteChannelUser(ctx context.Context, in *DeleteChannelUserReq, opts ...grpc.CallOption) (*DeleteChannelUserResp, error)
	EditChannelTitle(ctx context.Context, in *EditChannelTitleReq, opts ...grpc.CallOption) (*EditChannelTitleResp, error)
	EditChannelPhoto(ctx context.Context, in *EditChannelPhotoReq, opts ...grpc.CallOption) (*EditChannelPhotoResp, error)
	EditChannelAdmin(ctx context.Context, in *EditChannelAdminReq, opts ...grpc.CallOption) (*EditChannelAdminResp, error)
	ToggleChannelAdmins(ctx context.Context, in *ToggleChannelAdminsReq, opts ...grpc.CallOption) (*ToggleChannelAdminsResp, error)
	// channel_util
	GetChannelListBySelfAndIDList(ctx context.Context, in *GetChannelListBySelfAndIDListReq, opts ...grpc.CallOption) (*GetChannelListBySelfAndIDListResp, error)
	CheckChannelUserName(ctx context.Context, in *CheckChannelUserNameReq, opts ...grpc.CallOption) (*CheckChannelUserNameResp, error)
	GetChannelBySelfID(ctx context.Context, in *GetChannelBySelfIDReq, opts ...grpc.CallOption) (*GetChannelBySelfIDResp, error)
	GetChannelParticipantIdListDao(ctx context.Context, in *GetChannelParticipantIdListDaoReq, opts ...grpc.CallOption) (*GetChannelParticipantIdListDaoResp, error)
	GetChannelFullBySelfId(ctx context.Context, in *GetChannelFullBySelfIdReq, opts ...grpc.CallOption) (*GetChannelFullBySelfIdResp, error)
	// channel_message_box
	CreateChannelMessageBox(ctx context.Context, in *CreateChannelMessageBoxReq, opts ...grpc.CallOption) (*ChannelMessageBox, error)
	DoToChannelMessage(ctx context.Context, in *MessageData, opts ...grpc.CallOption) (*DoToChannelMessageRes, error)
	GetChannelMessage(ctx context.Context, in *GetChannelMessageReq, opts ...grpc.CallOption) (*GetChannelMessageRes, error)
}

type rPCChannelsClient struct {
	cc *grpc.ClientConn
}

func NewRPCChannelsClient(cc *grpc.ClientConn) RPCChannelsClient {
	return &rPCChannelsClient{cc}
}

func (c *rPCChannelsClient) MakeChannelParticipant2ByDO(ctx context.Context, in *MakeChannelParticipant2ByDOReq, opts ...grpc.CallOption) (*ChannelParticipantRes, error) {
	out := new(ChannelParticipantRes)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/MakeChannelParticipant2ByDO", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) NewChannelCoreById(ctx context.Context, in *ChannelCoreByIdReq, opts ...grpc.CallOption) (*ChannelCoreData, error) {
	out := new(ChannelCoreData)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/NewChannelCoreById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) NewChannelCoreByCreateChannel(ctx context.Context, in *ChannelCoreByCreateChannelReq, opts ...grpc.CallOption) (*ChannelCoreData, error) {
	out := new(ChannelCoreData)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/NewChannelCoreByCreateChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ExportedChatInvite(ctx context.Context, in *ChannelCoreData, opts ...grpc.CallOption) (*ExportedChatInviteResp, error) {
	out := new(ExportedChatInviteResp)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/ExportedChatInvite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) CheckUserIsAdministrator(ctx context.Context, in *CheckUserIsAdministratorReq, opts ...grpc.CallOption) (*CheckUserIsAdministratorResp, error) {
	out := new(CheckUserIsAdministratorResp)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/CheckUserIsAdministrator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) GetChannelParticipantList(ctx context.Context, in *ChannelCoreData, opts ...grpc.CallOption) (*GetChannelParticipantListResp, error) {
	out := new(GetChannelParticipantListResp)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/GetChannelParticipantList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) GetChannelParticipantIdList(ctx context.Context, in *ChannelCoreData, opts ...grpc.CallOption) (*GetChannelParticipantIdListResp, error) {
	out := new(GetChannelParticipantIdListResp)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/GetChannelParticipantIdList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) GetChannelParticipants(ctx context.Context, in *ChannelCoreData, opts ...grpc.CallOption) (*GetChannelParticipantsResp, error) {
	out := new(GetChannelParticipantsResp)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/GetChannelParticipants", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) AddChannelUser(ctx context.Context, in *AddChannelUserReq, opts ...grpc.CallOption) (*AddChannelUserResp, error) {
	out := new(AddChannelUserResp)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/AddChannelUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ToChannel(ctx context.Context, in *ToChannelReq, opts ...grpc.CallOption) (*ToChannelResp, error) {
	out := new(ToChannelResp)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/ToChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) CheckDeleteChannelUser(ctx context.Context, in *CheckDeleteChannelUserReq, opts ...grpc.CallOption) (*CheckDeleteChannelUserResp, error) {
	out := new(CheckDeleteChannelUserResp)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/CheckDeleteChannelUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) DeleteChannelUser(ctx context.Context, in *DeleteChannelUserReq, opts ...grpc.CallOption) (*DeleteChannelUserResp, error) {
	out := new(DeleteChannelUserResp)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/DeleteChannelUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) EditChannelTitle(ctx context.Context, in *EditChannelTitleReq, opts ...grpc.CallOption) (*EditChannelTitleResp, error) {
	out := new(EditChannelTitleResp)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/EditChannelTitle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) EditChannelPhoto(ctx context.Context, in *EditChannelPhotoReq, opts ...grpc.CallOption) (*EditChannelPhotoResp, error) {
	out := new(EditChannelPhotoResp)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/EditChannelPhoto", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) EditChannelAdmin(ctx context.Context, in *EditChannelAdminReq, opts ...grpc.CallOption) (*EditChannelAdminResp, error) {
	out := new(EditChannelAdminResp)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/EditChannelAdmin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ToggleChannelAdmins(ctx context.Context, in *ToggleChannelAdminsReq, opts ...grpc.CallOption) (*ToggleChannelAdminsResp, error) {
	out := new(ToggleChannelAdminsResp)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/ToggleChannelAdmins", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) GetChannelListBySelfAndIDList(ctx context.Context, in *GetChannelListBySelfAndIDListReq, opts ...grpc.CallOption) (*GetChannelListBySelfAndIDListResp, error) {
	out := new(GetChannelListBySelfAndIDListResp)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/GetChannelListBySelfAndIDList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) CheckChannelUserName(ctx context.Context, in *CheckChannelUserNameReq, opts ...grpc.CallOption) (*CheckChannelUserNameResp, error) {
	out := new(CheckChannelUserNameResp)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/CheckChannelUserName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) GetChannelBySelfID(ctx context.Context, in *GetChannelBySelfIDReq, opts ...grpc.CallOption) (*GetChannelBySelfIDResp, error) {
	out := new(GetChannelBySelfIDResp)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/GetChannelBySelfID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) GetChannelParticipantIdListDao(ctx context.Context, in *GetChannelParticipantIdListDaoReq, opts ...grpc.CallOption) (*GetChannelParticipantIdListDaoResp, error) {
	out := new(GetChannelParticipantIdListDaoResp)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/GetChannelParticipantIdListDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) GetChannelFullBySelfId(ctx context.Context, in *GetChannelFullBySelfIdReq, opts ...grpc.CallOption) (*GetChannelFullBySelfIdResp, error) {
	out := new(GetChannelFullBySelfIdResp)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/GetChannelFullBySelfId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) CreateChannelMessageBox(ctx context.Context, in *CreateChannelMessageBoxReq, opts ...grpc.CallOption) (*ChannelMessageBox, error) {
	out := new(ChannelMessageBox)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/CreateChannelMessageBox", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) DoToChannelMessage(ctx context.Context, in *MessageData, opts ...grpc.CallOption) (*DoToChannelMessageRes, error) {
	out := new(DoToChannelMessageRes)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/DoToChannelMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) GetChannelMessage(ctx context.Context, in *GetChannelMessageReq, opts ...grpc.CallOption) (*GetChannelMessageRes, error) {
	out := new(GetChannelMessageRes)
	err := c.cc.Invoke(ctx, "/channels.RPCChannels/GetChannelMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCChannelsServer is the server API for RPCChannels service.
type RPCChannelsServer interface {
	// channel_data
	MakeChannelParticipant2ByDO(context.Context, *MakeChannelParticipant2ByDOReq) (*ChannelParticipantRes, error)
	NewChannelCoreById(context.Context, *ChannelCoreByIdReq) (*ChannelCoreData, error)
	NewChannelCoreByCreateChannel(context.Context, *ChannelCoreByCreateChannelReq) (*ChannelCoreData, error)
	ExportedChatInvite(context.Context, *ChannelCoreData) (*ExportedChatInviteResp, error)
	CheckUserIsAdministrator(context.Context, *CheckUserIsAdministratorReq) (*CheckUserIsAdministratorResp, error)
	GetChannelParticipantList(context.Context, *ChannelCoreData) (*GetChannelParticipantListResp, error)
	GetChannelParticipantIdList(context.Context, *ChannelCoreData) (*GetChannelParticipantIdListResp, error)
	GetChannelParticipants(context.Context, *ChannelCoreData) (*GetChannelParticipantsResp, error)
	AddChannelUser(context.Context, *AddChannelUserReq) (*AddChannelUserResp, error)
	ToChannel(context.Context, *ToChannelReq) (*ToChannelResp, error)
	CheckDeleteChannelUser(context.Context, *CheckDeleteChannelUserReq) (*CheckDeleteChannelUserResp, error)
	DeleteChannelUser(context.Context, *DeleteChannelUserReq) (*DeleteChannelUserResp, error)
	EditChannelTitle(context.Context, *EditChannelTitleReq) (*EditChannelTitleResp, error)
	EditChannelPhoto(context.Context, *EditChannelPhotoReq) (*EditChannelPhotoResp, error)
	EditChannelAdmin(context.Context, *EditChannelAdminReq) (*EditChannelAdminResp, error)
	ToggleChannelAdmins(context.Context, *ToggleChannelAdminsReq) (*ToggleChannelAdminsResp, error)
	// channel_util
	GetChannelListBySelfAndIDList(context.Context, *GetChannelListBySelfAndIDListReq) (*GetChannelListBySelfAndIDListResp, error)
	CheckChannelUserName(context.Context, *CheckChannelUserNameReq) (*CheckChannelUserNameResp, error)
	GetChannelBySelfID(context.Context, *GetChannelBySelfIDReq) (*GetChannelBySelfIDResp, error)
	GetChannelParticipantIdListDao(context.Context, *GetChannelParticipantIdListDaoReq) (*GetChannelParticipantIdListDaoResp, error)
	GetChannelFullBySelfId(context.Context, *GetChannelFullBySelfIdReq) (*GetChannelFullBySelfIdResp, error)
	// channel_message_box
	CreateChannelMessageBox(context.Context, *CreateChannelMessageBoxReq) (*ChannelMessageBox, error)
	DoToChannelMessage(context.Context, *MessageData) (*DoToChannelMessageRes, error)
	GetChannelMessage(context.Context, *GetChannelMessageReq) (*GetChannelMessageRes, error)
}

// UnimplementedRPCChannelsServer can be embedded to have forward compatible implementations.
type UnimplementedRPCChannelsServer struct {
}

func (*UnimplementedRPCChannelsServer) MakeChannelParticipant2ByDO(ctx context.Context, req *MakeChannelParticipant2ByDOReq) (*ChannelParticipantRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MakeChannelParticipant2ByDO not implemented")
}
func (*UnimplementedRPCChannelsServer) NewChannelCoreById(ctx context.Context, req *ChannelCoreByIdReq) (*ChannelCoreData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewChannelCoreById not implemented")
}
func (*UnimplementedRPCChannelsServer) NewChannelCoreByCreateChannel(ctx context.Context, req *ChannelCoreByCreateChannelReq) (*ChannelCoreData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewChannelCoreByCreateChannel not implemented")
}
func (*UnimplementedRPCChannelsServer) ExportedChatInvite(ctx context.Context, req *ChannelCoreData) (*ExportedChatInviteResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExportedChatInvite not implemented")
}
func (*UnimplementedRPCChannelsServer) CheckUserIsAdministrator(ctx context.Context, req *CheckUserIsAdministratorReq) (*CheckUserIsAdministratorResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckUserIsAdministrator not implemented")
}
func (*UnimplementedRPCChannelsServer) GetChannelParticipantList(ctx context.Context, req *ChannelCoreData) (*GetChannelParticipantListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChannelParticipantList not implemented")
}
func (*UnimplementedRPCChannelsServer) GetChannelParticipantIdList(ctx context.Context, req *ChannelCoreData) (*GetChannelParticipantIdListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChannelParticipantIdList not implemented")
}
func (*UnimplementedRPCChannelsServer) GetChannelParticipants(ctx context.Context, req *ChannelCoreData) (*GetChannelParticipantsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChannelParticipants not implemented")
}
func (*UnimplementedRPCChannelsServer) AddChannelUser(ctx context.Context, req *AddChannelUserReq) (*AddChannelUserResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddChannelUser not implemented")
}
func (*UnimplementedRPCChannelsServer) ToChannel(ctx context.Context, req *ToChannelReq) (*ToChannelResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ToChannel not implemented")
}
func (*UnimplementedRPCChannelsServer) CheckDeleteChannelUser(ctx context.Context, req *CheckDeleteChannelUserReq) (*CheckDeleteChannelUserResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckDeleteChannelUser not implemented")
}
func (*UnimplementedRPCChannelsServer) DeleteChannelUser(ctx context.Context, req *DeleteChannelUserReq) (*DeleteChannelUserResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteChannelUser not implemented")
}
func (*UnimplementedRPCChannelsServer) EditChannelTitle(ctx context.Context, req *EditChannelTitleReq) (*EditChannelTitleResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditChannelTitle not implemented")
}
func (*UnimplementedRPCChannelsServer) EditChannelPhoto(ctx context.Context, req *EditChannelPhotoReq) (*EditChannelPhotoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditChannelPhoto not implemented")
}
func (*UnimplementedRPCChannelsServer) EditChannelAdmin(ctx context.Context, req *EditChannelAdminReq) (*EditChannelAdminResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditChannelAdmin not implemented")
}
func (*UnimplementedRPCChannelsServer) ToggleChannelAdmins(ctx context.Context, req *ToggleChannelAdminsReq) (*ToggleChannelAdminsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ToggleChannelAdmins not implemented")
}
func (*UnimplementedRPCChannelsServer) GetChannelListBySelfAndIDList(ctx context.Context, req *GetChannelListBySelfAndIDListReq) (*GetChannelListBySelfAndIDListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChannelListBySelfAndIDList not implemented")
}
func (*UnimplementedRPCChannelsServer) CheckChannelUserName(ctx context.Context, req *CheckChannelUserNameReq) (*CheckChannelUserNameResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckChannelUserName not implemented")
}
func (*UnimplementedRPCChannelsServer) GetChannelBySelfID(ctx context.Context, req *GetChannelBySelfIDReq) (*GetChannelBySelfIDResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChannelBySelfID not implemented")
}
func (*UnimplementedRPCChannelsServer) GetChannelParticipantIdListDao(ctx context.Context, req *GetChannelParticipantIdListDaoReq) (*GetChannelParticipantIdListDaoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChannelParticipantIdListDao not implemented")
}
func (*UnimplementedRPCChannelsServer) GetChannelFullBySelfId(ctx context.Context, req *GetChannelFullBySelfIdReq) (*GetChannelFullBySelfIdResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChannelFullBySelfId not implemented")
}
func (*UnimplementedRPCChannelsServer) CreateChannelMessageBox(ctx context.Context, req *CreateChannelMessageBoxReq) (*ChannelMessageBox, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateChannelMessageBox not implemented")
}
func (*UnimplementedRPCChannelsServer) DoToChannelMessage(ctx context.Context, req *MessageData) (*DoToChannelMessageRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DoToChannelMessage not implemented")
}
func (*UnimplementedRPCChannelsServer) GetChannelMessage(ctx context.Context, req *GetChannelMessageReq) (*GetChannelMessageRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChannelMessage not implemented")
}

func RegisterRPCChannelsServer(s *grpc.Server, srv RPCChannelsServer) {
	s.RegisterService(&_RPCChannels_serviceDesc, srv)
}

func _RPCChannels_MakeChannelParticipant2ByDO_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MakeChannelParticipant2ByDOReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).MakeChannelParticipant2ByDO(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/MakeChannelParticipant2ByDO",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).MakeChannelParticipant2ByDO(ctx, req.(*MakeChannelParticipant2ByDOReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_NewChannelCoreById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChannelCoreByIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).NewChannelCoreById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/NewChannelCoreById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).NewChannelCoreById(ctx, req.(*ChannelCoreByIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_NewChannelCoreByCreateChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChannelCoreByCreateChannelReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).NewChannelCoreByCreateChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/NewChannelCoreByCreateChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).NewChannelCoreByCreateChannel(ctx, req.(*ChannelCoreByCreateChannelReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ExportedChatInvite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChannelCoreData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ExportedChatInvite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/ExportedChatInvite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ExportedChatInvite(ctx, req.(*ChannelCoreData))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_CheckUserIsAdministrator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckUserIsAdministratorReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).CheckUserIsAdministrator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/CheckUserIsAdministrator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).CheckUserIsAdministrator(ctx, req.(*CheckUserIsAdministratorReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_GetChannelParticipantList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChannelCoreData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).GetChannelParticipantList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/GetChannelParticipantList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).GetChannelParticipantList(ctx, req.(*ChannelCoreData))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_GetChannelParticipantIdList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChannelCoreData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).GetChannelParticipantIdList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/GetChannelParticipantIdList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).GetChannelParticipantIdList(ctx, req.(*ChannelCoreData))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_GetChannelParticipants_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChannelCoreData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).GetChannelParticipants(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/GetChannelParticipants",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).GetChannelParticipants(ctx, req.(*ChannelCoreData))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_AddChannelUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddChannelUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).AddChannelUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/AddChannelUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).AddChannelUser(ctx, req.(*AddChannelUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ToChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ToChannelReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ToChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/ToChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ToChannel(ctx, req.(*ToChannelReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_CheckDeleteChannelUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckDeleteChannelUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).CheckDeleteChannelUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/CheckDeleteChannelUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).CheckDeleteChannelUser(ctx, req.(*CheckDeleteChannelUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_DeleteChannelUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteChannelUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).DeleteChannelUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/DeleteChannelUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).DeleteChannelUser(ctx, req.(*DeleteChannelUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_EditChannelTitle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditChannelTitleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).EditChannelTitle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/EditChannelTitle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).EditChannelTitle(ctx, req.(*EditChannelTitleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_EditChannelPhoto_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditChannelPhotoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).EditChannelPhoto(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/EditChannelPhoto",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).EditChannelPhoto(ctx, req.(*EditChannelPhotoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_EditChannelAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditChannelAdminReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).EditChannelAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/EditChannelAdmin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).EditChannelAdmin(ctx, req.(*EditChannelAdminReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ToggleChannelAdmins_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ToggleChannelAdminsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ToggleChannelAdmins(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/ToggleChannelAdmins",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ToggleChannelAdmins(ctx, req.(*ToggleChannelAdminsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_GetChannelListBySelfAndIDList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetChannelListBySelfAndIDListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).GetChannelListBySelfAndIDList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/GetChannelListBySelfAndIDList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).GetChannelListBySelfAndIDList(ctx, req.(*GetChannelListBySelfAndIDListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_CheckChannelUserName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckChannelUserNameReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).CheckChannelUserName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/CheckChannelUserName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).CheckChannelUserName(ctx, req.(*CheckChannelUserNameReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_GetChannelBySelfID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetChannelBySelfIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).GetChannelBySelfID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/GetChannelBySelfID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).GetChannelBySelfID(ctx, req.(*GetChannelBySelfIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_GetChannelParticipantIdListDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetChannelParticipantIdListDaoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).GetChannelParticipantIdListDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/GetChannelParticipantIdListDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).GetChannelParticipantIdListDao(ctx, req.(*GetChannelParticipantIdListDaoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_GetChannelFullBySelfId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetChannelFullBySelfIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).GetChannelFullBySelfId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/GetChannelFullBySelfId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).GetChannelFullBySelfId(ctx, req.(*GetChannelFullBySelfIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_CreateChannelMessageBox_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateChannelMessageBoxReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).CreateChannelMessageBox(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/CreateChannelMessageBox",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).CreateChannelMessageBox(ctx, req.(*CreateChannelMessageBoxReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_DoToChannelMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).DoToChannelMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/DoToChannelMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).DoToChannelMessage(ctx, req.(*MessageData))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_GetChannelMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetChannelMessageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).GetChannelMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/channels.RPCChannels/GetChannelMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).GetChannelMessage(ctx, req.(*GetChannelMessageReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCChannels_serviceDesc = grpc.ServiceDesc{
	ServiceName: "channels.RPCChannels",
	HandlerType: (*RPCChannelsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MakeChannelParticipant2ByDO",
			Handler:    _RPCChannels_MakeChannelParticipant2ByDO_Handler,
		},
		{
			MethodName: "NewChannelCoreById",
			Handler:    _RPCChannels_NewChannelCoreById_Handler,
		},
		{
			MethodName: "NewChannelCoreByCreateChannel",
			Handler:    _RPCChannels_NewChannelCoreByCreateChannel_Handler,
		},
		{
			MethodName: "ExportedChatInvite",
			Handler:    _RPCChannels_ExportedChatInvite_Handler,
		},
		{
			MethodName: "CheckUserIsAdministrator",
			Handler:    _RPCChannels_CheckUserIsAdministrator_Handler,
		},
		{
			MethodName: "GetChannelParticipantList",
			Handler:    _RPCChannels_GetChannelParticipantList_Handler,
		},
		{
			MethodName: "GetChannelParticipantIdList",
			Handler:    _RPCChannels_GetChannelParticipantIdList_Handler,
		},
		{
			MethodName: "GetChannelParticipants",
			Handler:    _RPCChannels_GetChannelParticipants_Handler,
		},
		{
			MethodName: "AddChannelUser",
			Handler:    _RPCChannels_AddChannelUser_Handler,
		},
		{
			MethodName: "ToChannel",
			Handler:    _RPCChannels_ToChannel_Handler,
		},
		{
			MethodName: "CheckDeleteChannelUser",
			Handler:    _RPCChannels_CheckDeleteChannelUser_Handler,
		},
		{
			MethodName: "DeleteChannelUser",
			Handler:    _RPCChannels_DeleteChannelUser_Handler,
		},
		{
			MethodName: "EditChannelTitle",
			Handler:    _RPCChannels_EditChannelTitle_Handler,
		},
		{
			MethodName: "EditChannelPhoto",
			Handler:    _RPCChannels_EditChannelPhoto_Handler,
		},
		{
			MethodName: "EditChannelAdmin",
			Handler:    _RPCChannels_EditChannelAdmin_Handler,
		},
		{
			MethodName: "ToggleChannelAdmins",
			Handler:    _RPCChannels_ToggleChannelAdmins_Handler,
		},
		{
			MethodName: "GetChannelListBySelfAndIDList",
			Handler:    _RPCChannels_GetChannelListBySelfAndIDList_Handler,
		},
		{
			MethodName: "CheckChannelUserName",
			Handler:    _RPCChannels_CheckChannelUserName_Handler,
		},
		{
			MethodName: "GetChannelBySelfID",
			Handler:    _RPCChannels_GetChannelBySelfID_Handler,
		},
		{
			MethodName: "GetChannelParticipantIdListDao",
			Handler:    _RPCChannels_GetChannelParticipantIdListDao_Handler,
		},
		{
			MethodName: "GetChannelFullBySelfId",
			Handler:    _RPCChannels_GetChannelFullBySelfId_Handler,
		},
		{
			MethodName: "CreateChannelMessageBox",
			Handler:    _RPCChannels_CreateChannelMessageBox_Handler,
		},
		{
			MethodName: "DoToChannelMessage",
			Handler:    _RPCChannels_DoToChannelMessage_Handler,
		},
		{
			MethodName: "GetChannelMessage",
			Handler:    _RPCChannels_GetChannelMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "channels.proto",
}
